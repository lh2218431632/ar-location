(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))n(o);new MutationObserver(o=>{for(const a of o)if(a.type==="childList")for(const r of a.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&n(r)}).observe(document,{childList:!0,subtree:!0});function t(o){const a={};return o.integrity&&(a.integrity=o.integrity),o.referrerPolicy&&(a.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?a.credentials="include":o.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function n(o){if(o.ep)return;o.ep=!0;const a=t(o);fetch(o.href,a)}})();var LK=Object.defineProperty,qK=(s,e,t)=>e in s?LK(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t,AI=(s,e,t)=>(qK(s,typeof e!="symbol"?e+"":e,t),t);function dK(){return/iPad|iPhone|iPod/.test(navigator.platform)}/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Mi="150",AG=0,nD=1,IG=2,ho=1,gG=2,YB=3,QC=0,Gg=1,AC=2,BC=0,XC=1,JD=2,YD=3,LD=4,CG=5,bC=100,BG=101,QG=102,qD=103,dD=104,EG=200,iG=201,DG=202,oG=203,Ko=204,Mo=205,sG=206,wG=207,aG=208,GG=209,hG=210,KG=0,MG=1,NG=2,Gi=3,RG=4,yG=5,tG=6,FG=7,fQ=0,SG=1,eG=2,Og=0,cG=1,rG=2,kG=3,UG=4,nG=5,Ni=300,tC=301,FC=302,yQ=303,tQ=304,bB=306,FQ=1e3,Qg=1001,SQ=1002,pI=1003,hi=1004,KQ=1005,mI=1006,No=1007,SC=1008,eC=1009,JG=1010,YG=1011,Ro=1012,LG=1013,NC=1014,IC=1015,fB=1016,qG=1017,dG=1018,PC=1020,HG=1021,Ng=1023,lG=1024,xG=1025,yC=1026,zC=1027,fG=1028,pG=1029,mG=1030,OG=1031,bG=1033,Qi=33776,Ei=33777,ii=33778,Di=33779,HD=35840,lD=35841,xD=35842,fD=35843,uG=36196,pD=37492,mD=37496,OD=37808,bD=37809,uD=37810,WD=37811,TD=37812,VD=37813,ZD=37814,XD=37815,PD=37816,jD=37817,vD=37818,zD=37819,_D=37820,$D=37821,oi=36492,WG=36283,Ao=36284,Io=36285,go=36286,eQ=2300,cQ=2301,si=2302,WC=2400,TC=2401,rQ=2402,cC=3e3,SI=3001,XG=3200,PG=3201,kC=0,jG=1,Yg="srgb",pB="srgb-linear",to="display-p3",wi=7680,vG=519,kQ=35044,Co="300 es",Ki=1035;class Wg{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const n=this._listeners[e];if(n!==void 0){const o=n.indexOf(t);o!==-1&&n.splice(o,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const t=this._listeners[e.type];if(t!==void 0){e.target=this;const n=t.slice(0);for(let o=0,a=n.length;o<a;o++)n[o].call(this,e);e.target=null}}}const gg=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let dw=1234567;const jC=Math.PI/180,UQ=180/Math.PI;function Rg(){const s=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(gg[s&255]+gg[s>>8&255]+gg[s>>16&255]+gg[s>>24&255]+"-"+gg[e&255]+gg[e>>8&255]+"-"+gg[e>>16&15|64]+gg[e>>24&255]+"-"+gg[t&63|128]+gg[t>>8&255]+"-"+gg[t>>16&255]+gg[t>>24&255]+gg[n&255]+gg[n>>8&255]+gg[n>>16&255]+gg[n>>24&255]).toLowerCase()}function OI(s,e,t){return Math.max(e,Math.min(t,s))}function Fo(s,e){return(s%e+e)%e}function yM(s,e,t,n,o){return n+(s-e)*(o-n)/(t-e)}function tM(s,e,t){return s!==e?(t-s)/(e-s):0}function MQ(s,e,t){return(1-t)*s+t*e}function FM(s,e,t,n){return MQ(s,e,1-Math.exp(-t*n))}function SM(s,e=1){return e-Math.abs(Fo(s,e*2)-e)}function eM(s,e,t){return s<=e?0:s>=t?1:(s=(s-e)/(t-e),s*s*(3-2*s))}function cM(s,e,t){return s<=e?0:s>=t?1:(s=(s-e)/(t-e),s*s*s*(s*(s*6-15)+10))}function rM(s,e){return s+Math.floor(Math.random()*(e-s+1))}function kM(s,e){return s+Math.random()*(e-s)}function UM(s){return s*(.5-Math.random())}function nM(s){s!==void 0&&(dw=s);let e=dw+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function JM(s){return s*jC}function YM(s){return s*UQ}function Bo(s){return(s&s-1)===0&&s!==0}function zG(s){return Math.pow(2,Math.ceil(Math.log(s)/Math.LN2))}function _G(s){return Math.pow(2,Math.floor(Math.log(s)/Math.LN2))}function LM(s,e,t,n,o){const a=Math.cos,r=Math.sin,l=a(t/2),d=r(t/2),h=a((e+n)/2),f=r((e+n)/2),_=a((e-n)/2),g=r((e-n)/2),b=a((n-e)/2),w=r((n-e)/2);switch(o){case"XYX":s.set(l*f,d*_,d*g,l*h);break;case"YZY":s.set(d*g,l*f,d*_,l*h);break;case"ZXZ":s.set(d*_,d*g,l*f,l*h);break;case"XZX":s.set(l*f,d*w,d*b,l*h);break;case"YXY":s.set(d*b,l*f,d*w,l*h);break;case"ZYZ":s.set(d*w,d*b,l*f,l*h);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+o)}}function gC(s,e){switch(e.constructor){case Float32Array:return s;case Uint16Array:return s/65535;case Uint8Array:return s/255;case Int16Array:return Math.max(s/32767,-1);case Int8Array:return Math.max(s/127,-1);default:throw new Error("Invalid component type.")}}function yI(s,e){switch(e.constructor){case Float32Array:return s;case Uint16Array:return Math.round(s*65535);case Uint8Array:return Math.round(s*255);case Int16Array:return Math.round(s*32767);case Int8Array:return Math.round(s*127);default:throw new Error("Invalid component type.")}}const CC={DEG2RAD:jC,RAD2DEG:UQ,generateUUID:Rg,clamp:OI,euclideanModulo:Fo,mapLinear:yM,inverseLerp:tM,lerp:MQ,damp:FM,pingpong:SM,smoothstep:eM,smootherstep:cM,randInt:rM,randFloat:kM,randFloatSpread:UM,seededRandom:nM,degToRad:JM,radToDeg:YM,isPowerOfTwo:Bo,ceilPowerOfTwo:zG,floorPowerOfTwo:_G,setQuaternionFromProperEuler:LM,normalize:yI,denormalize:gC};class DA{constructor(e=0,t=0){DA.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,o=e.elements;return this.x=o[0]*t+o[3]*n+o[6],this.y=o[1]*t+o[4]*n+o[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),o=Math.sin(t),a=this.x-e.x,r=this.y-e.y;return this.x=a*n-r*o+e.x,this.y=a*o+r*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Ag{constructor(){Ag.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1]}set(e,t,n,o,a,r,l,d,h){const f=this.elements;return f[0]=e,f[1]=o,f[2]=l,f[3]=t,f[4]=a,f[5]=d,f[6]=n,f[7]=r,f[8]=h,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,o=t.elements,a=this.elements,r=n[0],l=n[3],d=n[6],h=n[1],f=n[4],_=n[7],g=n[2],b=n[5],w=n[8],x=o[0],v=o[3],T=o[6],D=o[1],C=o[4],I=o[7],N=o[2],F=o[5],G=o[8];return a[0]=r*x+l*D+d*N,a[3]=r*v+l*C+d*F,a[6]=r*T+l*I+d*G,a[1]=h*x+f*D+_*N,a[4]=h*v+f*C+_*F,a[7]=h*T+f*I+_*G,a[2]=g*x+b*D+w*N,a[5]=g*v+b*C+w*F,a[8]=g*T+b*I+w*G,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],o=e[2],a=e[3],r=e[4],l=e[5],d=e[6],h=e[7],f=e[8];return t*r*f-t*l*h-n*a*f+n*l*d+o*a*h-o*r*d}invert(){const e=this.elements,t=e[0],n=e[1],o=e[2],a=e[3],r=e[4],l=e[5],d=e[6],h=e[7],f=e[8],_=f*r-l*h,g=l*d-f*a,b=h*a-r*d,w=t*_+n*g+o*b;if(w===0)return this.set(0,0,0,0,0,0,0,0,0);const x=1/w;return e[0]=_*x,e[1]=(o*h-f*n)*x,e[2]=(l*n-o*r)*x,e[3]=g*x,e[4]=(f*t-o*d)*x,e[5]=(o*a-l*t)*x,e[6]=b*x,e[7]=(n*d-h*t)*x,e[8]=(r*t-n*a)*x,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,o,a,r,l){const d=Math.cos(a),h=Math.sin(a);return this.set(n*d,n*h,-n*(d*r+h*l)+r+e,-o*h,o*d,-o*(-h*r+d*l)+l+t,0,0,1),this}scale(e,t){return this.premultiply(Pi.makeScale(e,t)),this}rotate(e){return this.premultiply(Pi.makeRotation(-e)),this}translate(e,t){return this.premultiply(Pi.makeTranslation(e,t)),this}makeTranslation(e,t){return this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let o=0;o<9;o++)if(t[o]!==n[o])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const Pi=new Ag;function $G(s){for(let e=s.length-1;e>=0;--e)if(s[e]>=65535)return!0;return!1}function nQ(s){return document.createElementNS("http://www.w3.org/1999/xhtml",s)}class Ig{constructor(e=0,t=0,n=0,o=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=o}static slerpFlat(e,t,n,o,a,r,l){let d=n[o+0],h=n[o+1],f=n[o+2],_=n[o+3];const g=a[r+0],b=a[r+1],w=a[r+2],x=a[r+3];if(l===0){e[t+0]=d,e[t+1]=h,e[t+2]=f,e[t+3]=_;return}if(l===1){e[t+0]=g,e[t+1]=b,e[t+2]=w,e[t+3]=x;return}if(_!==x||d!==g||h!==b||f!==w){let v=1-l;const T=d*g+h*b+f*w+_*x,D=T>=0?1:-1,C=1-T*T;if(C>Number.EPSILON){const N=Math.sqrt(C),F=Math.atan2(N,T*D);v=Math.sin(v*F)/N,l=Math.sin(l*F)/N}const I=l*D;if(d=d*v+g*I,h=h*v+b*I,f=f*v+w*I,_=_*v+x*I,v===1-l){const N=1/Math.sqrt(d*d+h*h+f*f+_*_);d*=N,h*=N,f*=N,_*=N}}e[t]=d,e[t+1]=h,e[t+2]=f,e[t+3]=_}static multiplyQuaternionsFlat(e,t,n,o,a,r){const l=n[o],d=n[o+1],h=n[o+2],f=n[o+3],_=a[r],g=a[r+1],b=a[r+2],w=a[r+3];return e[t]=l*w+f*_+d*b-h*g,e[t+1]=d*w+f*g+h*_-l*b,e[t+2]=h*w+f*b+l*g-d*_,e[t+3]=f*w-l*_-d*g-h*b,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,o){return this._x=e,this._y=t,this._z=n,this._w=o,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){const n=e._x,o=e._y,a=e._z,r=e._order,l=Math.cos,d=Math.sin,h=l(n/2),f=l(o/2),_=l(a/2),g=d(n/2),b=d(o/2),w=d(a/2);switch(r){case"XYZ":this._x=g*f*_+h*b*w,this._y=h*b*_-g*f*w,this._z=h*f*w+g*b*_,this._w=h*f*_-g*b*w;break;case"YXZ":this._x=g*f*_+h*b*w,this._y=h*b*_-g*f*w,this._z=h*f*w-g*b*_,this._w=h*f*_+g*b*w;break;case"ZXY":this._x=g*f*_-h*b*w,this._y=h*b*_+g*f*w,this._z=h*f*w+g*b*_,this._w=h*f*_-g*b*w;break;case"ZYX":this._x=g*f*_-h*b*w,this._y=h*b*_+g*f*w,this._z=h*f*w-g*b*_,this._w=h*f*_+g*b*w;break;case"YZX":this._x=g*f*_+h*b*w,this._y=h*b*_+g*f*w,this._z=h*f*w-g*b*_,this._w=h*f*_-g*b*w;break;case"XZY":this._x=g*f*_-h*b*w,this._y=h*b*_-g*f*w,this._z=h*f*w+g*b*_,this._w=h*f*_+g*b*w;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+r)}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,o=Math.sin(n);return this._x=e.x*o,this._y=e.y*o,this._z=e.z*o,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],o=t[4],a=t[8],r=t[1],l=t[5],d=t[9],h=t[2],f=t[6],_=t[10],g=n+l+_;if(g>0){const b=.5/Math.sqrt(g+1);this._w=.25/b,this._x=(f-d)*b,this._y=(a-h)*b,this._z=(r-o)*b}else if(n>l&&n>_){const b=2*Math.sqrt(1+n-l-_);this._w=(f-d)/b,this._x=.25*b,this._y=(o+r)/b,this._z=(a+h)/b}else if(l>_){const b=2*Math.sqrt(1+l-n-_);this._w=(a-h)/b,this._x=(o+r)/b,this._y=.25*b,this._z=(d+f)/b}else{const b=2*Math.sqrt(1+_-n-l);this._w=(r-o)/b,this._x=(a+h)/b,this._y=(d+f)/b,this._z=.25*b}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(OI(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const o=Math.min(1,t/n);return this.slerp(e,o),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,o=e._y,a=e._z,r=e._w,l=t._x,d=t._y,h=t._z,f=t._w;return this._x=n*f+r*l+o*h-a*d,this._y=o*f+r*d+a*l-n*h,this._z=a*f+r*h+n*d-o*l,this._w=r*f-n*l-o*d-a*h,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,o=this._y,a=this._z,r=this._w;let l=r*e._w+n*e._x+o*e._y+a*e._z;if(l<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,l=-l):this.copy(e),l>=1)return this._w=r,this._x=n,this._y=o,this._z=a,this;const d=1-l*l;if(d<=Number.EPSILON){const b=1-t;return this._w=b*r+t*this._w,this._x=b*n+t*this._x,this._y=b*o+t*this._y,this._z=b*a+t*this._z,this.normalize(),this._onChangeCallback(),this}const h=Math.sqrt(d),f=Math.atan2(h,l),_=Math.sin((1-t)*f)/h,g=Math.sin(t*f)/h;return this._w=r*_+this._w*g,this._x=n*_+this._x*g,this._y=o*_+this._y*g,this._z=a*_+this._z*g,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),o=2*Math.PI*Math.random(),a=2*Math.PI*Math.random();return this.set(t*Math.cos(o),n*Math.sin(a),n*Math.cos(a),t*Math.sin(o))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class H{constructor(e=0,t=0,n=0){H.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(Hw.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(Hw.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,o=this.z,a=e.elements;return this.x=a[0]*t+a[3]*n+a[6]*o,this.y=a[1]*t+a[4]*n+a[7]*o,this.z=a[2]*t+a[5]*n+a[8]*o,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,o=this.z,a=e.elements,r=1/(a[3]*t+a[7]*n+a[11]*o+a[15]);return this.x=(a[0]*t+a[4]*n+a[8]*o+a[12])*r,this.y=(a[1]*t+a[5]*n+a[9]*o+a[13])*r,this.z=(a[2]*t+a[6]*n+a[10]*o+a[14])*r,this}applyQuaternion(e){const t=this.x,n=this.y,o=this.z,a=e.x,r=e.y,l=e.z,d=e.w,h=d*t+r*o-l*n,f=d*n+l*t-a*o,_=d*o+a*n-r*t,g=-a*t-r*n-l*o;return this.x=h*d+g*-a+f*-l-_*-r,this.y=f*d+g*-r+_*-a-h*-l,this.z=_*d+g*-l+h*-r-f*-a,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,o=this.z,a=e.elements;return this.x=a[0]*t+a[4]*n+a[8]*o,this.y=a[1]*t+a[5]*n+a[9]*o,this.z=a[2]*t+a[6]*n+a[10]*o,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,o=e.y,a=e.z,r=t.x,l=t.y,d=t.z;return this.x=o*d-a*l,this.y=a*r-n*d,this.z=n*l-o*r,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return ji.copy(this).projectOnVector(e),this.sub(ji)}reflect(e){return this.sub(ji.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(OI(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,o=this.z-e.z;return t*t+n*n+o*o}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const o=Math.sin(t)*e;return this.x=o*Math.sin(n),this.y=Math.cos(t)*e,this.z=o*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),o=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=o,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,n=Math.sqrt(1-e**2);return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const ji=new H,Hw=new Ig;function lB(s){return s<.04045?s*.0773993808:Math.pow(s*.9478672986+.0521327014,2.4)}function vi(s){return s<.0031308?s*12.92:1.055*Math.pow(s,.41666)-.055}const dM=new Ag().fromArray([.8224621,.0331941,.0170827,.177538,.9668058,.0723974,-1e-7,1e-7,.9105199]),HM=new Ag().fromArray([1.2249401,-.0420569,-.0196376,-.2249404,1.0420571,-.0786361,1e-7,0,1.0982735]),RC=new H;function lM(s){return s.convertSRGBToLinear(),RC.set(s.r,s.g,s.b).applyMatrix3(HM),s.setRGB(RC.x,RC.y,RC.z)}function xM(s){return RC.set(s.r,s.g,s.b).applyMatrix3(dM),s.setRGB(RC.x,RC.y,RC.z).convertLinearToSRGB()}const fM={[pB]:s=>s,[Yg]:s=>s.convertSRGBToLinear(),[to]:lM},pM={[pB]:s=>s,[Yg]:s=>s.convertLinearToSRGB(),[to]:xM},Bg={enabled:!1,get legacyMode(){return console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),!this.enabled},set legacyMode(s){console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),this.enabled=!s},get workingColorSpace(){return pB},set workingColorSpace(s){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(s,e,t){if(this.enabled===!1||e===t||!e||!t)return s;const n=fM[e],o=pM[t];if(n===void 0||o===void 0)throw new Error(`Unsupported color space conversion, "${e}" to "${t}".`);return o(n(s))},fromWorkingColorSpace:function(s,e){return this.convert(s,this.workingColorSpace,e)},toWorkingColorSpace:function(s,e){return this.convert(s,e,this.workingColorSpace)}};let GB;class So{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{GB===void 0&&(GB=nQ("canvas")),GB.width=e.width,GB.height=e.height;const n=GB.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=GB}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=nQ("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const o=n.getImageData(0,0,e.width,e.height),a=o.data;for(let r=0;r<a.length;r++)a[r]=lB(a[r]/255)*255;return n.putImageData(o,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(lB(t[n]/255)*255):t[n]=lB(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}class VC{constructor(e=null){this.isSource=!0,this.uuid=Rg(),this.data=e,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},o=this.data;if(o!==null){let a;if(Array.isArray(o)){a=[];for(let r=0,l=o.length;r<l;r++)o[r].isDataTexture?a.push(zi(o[r].image)):a.push(zi(o[r]))}else a=zi(o);n.url=a}return t||(e.images[this.uuid]=n),n}}function zi(s){return typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&s instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&s instanceof ImageBitmap?So.getDataURL(s):s.data?{data:Array.from(s.data),width:s.width,height:s.height,type:s.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let mM=0;class bI extends Wg{constructor(e=bI.DEFAULT_IMAGE,t=bI.DEFAULT_MAPPING,n=Qg,o=Qg,a=mI,r=SC,l=Ng,d=eC,h=bI.DEFAULT_ANISOTROPY,f=cC){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:mM++}),this.uuid=Rg(),this.name="",this.source=new VC(e),this.mipmaps=[],this.mapping=t,this.wrapS=n,this.wrapT=o,this.magFilter=a,this.minFilter=r,this.anisotropy=h,this.format=l,this.internalFormat=null,this.type=d,this.offset=new DA(0,0),this.repeat=new DA(1,1),this.center=new DA(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Ag,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=f,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==Ni)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case FQ:e.x=e.x-Math.floor(e.x);break;case Qg:e.x=e.x<0?0:1;break;case SQ:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case FQ:e.y=e.y-Math.floor(e.y);break;case Qg:e.y=e.y<0?0:1;break;case SQ:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}}bI.DEFAULT_IMAGE=null;bI.DEFAULT_MAPPING=Ni;bI.DEFAULT_ANISOTROPY=1;class KI{constructor(e=0,t=0,n=0,o=1){KI.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=o}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,o){return this.x=e,this.y=t,this.z=n,this.w=o,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,o=this.z,a=this.w,r=e.elements;return this.x=r[0]*t+r[4]*n+r[8]*o+r[12]*a,this.y=r[1]*t+r[5]*n+r[9]*o+r[13]*a,this.z=r[2]*t+r[6]*n+r[10]*o+r[14]*a,this.w=r[3]*t+r[7]*n+r[11]*o+r[15]*a,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,o,a;const r=e.elements,l=r[0],d=r[4],h=r[8],f=r[1],_=r[5],g=r[9],b=r[2],w=r[6],x=r[10];if(Math.abs(d-f)<.01&&Math.abs(h-b)<.01&&Math.abs(g-w)<.01){if(Math.abs(d+f)<.1&&Math.abs(h+b)<.1&&Math.abs(g+w)<.1&&Math.abs(l+_+x-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const T=(l+1)/2,D=(_+1)/2,C=(x+1)/2,I=(d+f)/4,N=(h+b)/4,F=(g+w)/4;return T>D&&T>C?T<.01?(n=0,o=.707106781,a=.707106781):(n=Math.sqrt(T),o=I/n,a=N/n):D>C?D<.01?(n=.707106781,o=0,a=.707106781):(o=Math.sqrt(D),n=I/o,a=F/o):C<.01?(n=.707106781,o=.707106781,a=0):(a=Math.sqrt(C),n=N/a,o=F/a),this.set(n,o,a,t),this}let v=Math.sqrt((w-g)*(w-g)+(h-b)*(h-b)+(f-d)*(f-d));return Math.abs(v)<.001&&(v=1),this.x=(w-g)/v,this.y=(h-b)/v,this.z=(f-d)/v,this.w=Math.acos((l+_+x-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class qg extends Wg{constructor(e=1,t=1,n={}){super(),this.isWebGLRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new KI(0,0,e,t),this.scissorTest=!1,this.viewport=new KI(0,0,e,t);const o={width:e,height:t,depth:1};this.texture=new bI(o,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.internalFormat=n.internalFormat!==void 0?n.internalFormat:null,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:mI,this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!1,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null,this.samples=n.samples!==void 0?n.samples:0}setSize(e,t,n=1){(this.width!==e||this.height!==t||this.depth!==n)&&(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new VC(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class yi extends bI{constructor(e=null,t=1,n=1,o=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:o},this.magFilter=pI,this.minFilter=pI,this.wrapR=Qg,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class eo extends bI{constructor(e=null,t=1,n=1,o=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:o},this.magFilter=pI,this.minFilter=pI,this.wrapR=Qg,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class IB{constructor(e=new H(1/0,1/0,1/0),t=new H(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=1/0,n=1/0,o=1/0,a=-1/0,r=-1/0,l=-1/0;for(let d=0,h=e.length;d<h;d+=3){const f=e[d],_=e[d+1],g=e[d+2];f<t&&(t=f),_<n&&(n=_),g<o&&(o=g),f>a&&(a=f),_>r&&(r=_),g>l&&(l=g)}return this.min.set(t,n,o),this.max.set(a,r,l),this}setFromBufferAttribute(e){let t=1/0,n=1/0,o=1/0,a=-1/0,r=-1/0,l=-1/0;for(let d=0,h=e.count;d<h;d++){const f=e.getX(d),_=e.getY(d),g=e.getZ(d);f<t&&(t=f),_<n&&(n=_),g<o&&(o=g),f>a&&(a=f),_>r&&(r=_),g>l&&(l=g)}return this.min.set(t,n,o),this.max.set(a,r,l),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=qC.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(n!==void 0)if(t&&n.attributes!=null&&n.attributes.position!==void 0){const a=n.attributes.position;for(let r=0,l=a.count;r<l;r++)qC.fromBufferAttribute(a,r).applyMatrix4(e.matrixWorld),this.expandByPoint(qC)}else n.boundingBox===null&&n.computeBoundingBox(),_i.copy(n.boundingBox),_i.applyMatrix4(e.matrixWorld),this.union(_i);const o=e.children;for(let a=0,r=o.length;a<r;a++)this.expandByObject(o[a],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,qC),qC.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(gQ),tE.subVectors(this.max,gQ),hB.subVectors(e.a,gQ),KB.subVectors(e.b,gQ),MB.subVectors(e.c,gQ),wC.subVectors(KB,hB),aC.subVectors(MB,KB),dC.subVectors(hB,MB);let t=[0,-wC.z,wC.y,0,-aC.z,aC.y,0,-dC.z,dC.y,wC.z,0,-wC.x,aC.z,0,-aC.x,dC.z,0,-dC.x,-wC.y,wC.x,0,-aC.y,aC.x,0,-dC.y,dC.x,0];return!$i(t,hB,KB,MB,tE)||(t=[1,0,0,0,1,0,0,0,1],!$i(t,hB,KB,MB,tE))?!1:(FE.crossVectors(wC,aC),t=[FE.x,FE.y,FE.z],$i(t,hB,KB,MB,tE))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,qC).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(qC).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Xg[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Xg[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Xg[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Xg[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Xg[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Xg[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Xg[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Xg[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Xg),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Xg=[new H,new H,new H,new H,new H,new H,new H,new H],qC=new H,_i=new IB,hB=new H,KB=new H,MB=new H,wC=new H,aC=new H,dC=new H,gQ=new H,tE=new H,FE=new H,HC=new H;function $i(s,e,t,n,o){for(let a=0,r=s.length-3;a<=r;a+=3){HC.fromArray(s,a);const l=o.x*Math.abs(HC.x)+o.y*Math.abs(HC.y)+o.z*Math.abs(HC.z),d=e.dot(HC),h=t.dot(HC),f=n.dot(HC);if(Math.max(-Math.max(d,h,f),Math.min(d,h,f))>l)return!1}return!0}const WM=new IB,CQ=new H,AD=new H;class gB{constructor(e=new H,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):WM.setFromPoints(e).getCenter(n);let o=0;for(let a=0,r=e.length;a<r;a++)o=Math.max(o,n.distanceToSquared(e[a]));return this.radius=Math.sqrt(o),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;CQ.subVectors(e,this.center);const t=CQ.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),o=(n-this.radius)*.5;this.center.addScaledVector(CQ,o/n),this.radius+=o}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(AD.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(CQ.copy(e.center).add(AD)),this.expandByPoint(CQ.copy(e.center).sub(AD))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const Pg=new H,ID=new H,SE=new H,GC=new H,gD=new H,eE=new H,CD=new H;class pQ{constructor(e=new H,t=new H(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Pg)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Pg.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Pg.copy(this.origin).addScaledVector(this.direction,t),Pg.distanceToSquared(e))}distanceSqToSegment(e,t,n,o){ID.copy(e).add(t).multiplyScalar(.5),SE.copy(t).sub(e).normalize(),GC.copy(this.origin).sub(ID);const a=e.distanceTo(t)*.5,r=-this.direction.dot(SE),l=GC.dot(this.direction),d=-GC.dot(SE),h=GC.lengthSq(),f=Math.abs(1-r*r);let _,g,b,w;if(f>0)if(_=r*d-l,g=r*l-d,w=a*f,_>=0)if(g>=-w)if(g<=w){const x=1/f;_*=x,g*=x,b=_*(_+r*g+2*l)+g*(r*_+g+2*d)+h}else g=a,_=Math.max(0,-(r*g+l)),b=-_*_+g*(g+2*d)+h;else g=-a,_=Math.max(0,-(r*g+l)),b=-_*_+g*(g+2*d)+h;else g<=-w?(_=Math.max(0,-(-r*a+l)),g=_>0?-a:Math.min(Math.max(-a,-d),a),b=-_*_+g*(g+2*d)+h):g<=w?(_=0,g=Math.min(Math.max(-a,-d),a),b=g*(g+2*d)+h):(_=Math.max(0,-(r*a+l)),g=_>0?a:Math.min(Math.max(-a,-d),a),b=-_*_+g*(g+2*d)+h);else g=r>0?-a:a,_=Math.max(0,-(r*g+l)),b=-_*_+g*(g+2*d)+h;return n&&n.copy(this.origin).addScaledVector(this.direction,_),o&&o.copy(ID).addScaledVector(SE,g),b}intersectSphere(e,t){Pg.subVectors(e.center,this.origin);const n=Pg.dot(this.direction),o=Pg.dot(Pg)-n*n,a=e.radius*e.radius;if(o>a)return null;const r=Math.sqrt(a-o),l=n-r,d=n+r;return d<0?null:l<0?this.at(d,t):this.at(l,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,o,a,r,l,d;const h=1/this.direction.x,f=1/this.direction.y,_=1/this.direction.z,g=this.origin;return h>=0?(n=(e.min.x-g.x)*h,o=(e.max.x-g.x)*h):(n=(e.max.x-g.x)*h,o=(e.min.x-g.x)*h),f>=0?(a=(e.min.y-g.y)*f,r=(e.max.y-g.y)*f):(a=(e.max.y-g.y)*f,r=(e.min.y-g.y)*f),n>r||a>o||((a>n||isNaN(n))&&(n=a),(r<o||isNaN(o))&&(o=r),_>=0?(l=(e.min.z-g.z)*_,d=(e.max.z-g.z)*_):(l=(e.max.z-g.z)*_,d=(e.min.z-g.z)*_),n>d||l>o)||((l>n||n!==n)&&(n=l),(d<o||o!==o)&&(o=d),o<0)?null:this.at(n>=0?n:o,t)}intersectsBox(e){return this.intersectBox(e,Pg)!==null}intersectTriangle(e,t,n,o,a){gD.subVectors(t,e),eE.subVectors(n,e),CD.crossVectors(gD,eE);let r=this.direction.dot(CD),l;if(r>0){if(o)return null;l=1}else if(r<0)l=-1,r=-r;else return null;GC.subVectors(this.origin,e);const d=l*this.direction.dot(eE.crossVectors(GC,eE));if(d<0)return null;const h=l*this.direction.dot(gD.cross(GC));if(h<0||d+h>r)return null;const f=-l*GC.dot(CD);return f<0?null:this.at(f/r,a)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class gI{constructor(){gI.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}set(e,t,n,o,a,r,l,d,h,f,_,g,b,w,x,v){const T=this.elements;return T[0]=e,T[4]=t,T[8]=n,T[12]=o,T[1]=a,T[5]=r,T[9]=l,T[13]=d,T[2]=h,T[6]=f,T[10]=_,T[14]=g,T[3]=b,T[7]=w,T[11]=x,T[15]=v,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new gI().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,o=1/NB.setFromMatrixColumn(e,0).length(),a=1/NB.setFromMatrixColumn(e,1).length(),r=1/NB.setFromMatrixColumn(e,2).length();return t[0]=n[0]*o,t[1]=n[1]*o,t[2]=n[2]*o,t[3]=0,t[4]=n[4]*a,t[5]=n[5]*a,t[6]=n[6]*a,t[7]=0,t[8]=n[8]*r,t[9]=n[9]*r,t[10]=n[10]*r,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,o=e.y,a=e.z,r=Math.cos(n),l=Math.sin(n),d=Math.cos(o),h=Math.sin(o),f=Math.cos(a),_=Math.sin(a);if(e.order==="XYZ"){const g=r*f,b=r*_,w=l*f,x=l*_;t[0]=d*f,t[4]=-d*_,t[8]=h,t[1]=b+w*h,t[5]=g-x*h,t[9]=-l*d,t[2]=x-g*h,t[6]=w+b*h,t[10]=r*d}else if(e.order==="YXZ"){const g=d*f,b=d*_,w=h*f,x=h*_;t[0]=g+x*l,t[4]=w*l-b,t[8]=r*h,t[1]=r*_,t[5]=r*f,t[9]=-l,t[2]=b*l-w,t[6]=x+g*l,t[10]=r*d}else if(e.order==="ZXY"){const g=d*f,b=d*_,w=h*f,x=h*_;t[0]=g-x*l,t[4]=-r*_,t[8]=w+b*l,t[1]=b+w*l,t[5]=r*f,t[9]=x-g*l,t[2]=-r*h,t[6]=l,t[10]=r*d}else if(e.order==="ZYX"){const g=r*f,b=r*_,w=l*f,x=l*_;t[0]=d*f,t[4]=w*h-b,t[8]=g*h+x,t[1]=d*_,t[5]=x*h+g,t[9]=b*h-w,t[2]=-h,t[6]=l*d,t[10]=r*d}else if(e.order==="YZX"){const g=r*d,b=r*h,w=l*d,x=l*h;t[0]=d*f,t[4]=x-g*_,t[8]=w*_+b,t[1]=_,t[5]=r*f,t[9]=-l*f,t[2]=-h*f,t[6]=b*_+w,t[10]=g-x*_}else if(e.order==="XZY"){const g=r*d,b=r*h,w=l*d,x=l*h;t[0]=d*f,t[4]=-_,t[8]=h*f,t[1]=g*_+x,t[5]=r*f,t[9]=b*_-w,t[2]=w*_-b,t[6]=l*f,t[10]=x*_+g}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(TM,e,VM)}lookAt(e,t,n){const o=this.elements;return Kg.subVectors(e,t),Kg.lengthSq()===0&&(Kg.z=1),Kg.normalize(),hC.crossVectors(n,Kg),hC.lengthSq()===0&&(Math.abs(n.z)===1?Kg.x+=1e-4:Kg.z+=1e-4,Kg.normalize(),hC.crossVectors(n,Kg)),hC.normalize(),cE.crossVectors(Kg,hC),o[0]=hC.x,o[4]=cE.x,o[8]=Kg.x,o[1]=hC.y,o[5]=cE.y,o[9]=Kg.y,o[2]=hC.z,o[6]=cE.z,o[10]=Kg.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,o=t.elements,a=this.elements,r=n[0],l=n[4],d=n[8],h=n[12],f=n[1],_=n[5],g=n[9],b=n[13],w=n[2],x=n[6],v=n[10],T=n[14],D=n[3],C=n[7],I=n[11],N=n[15],F=o[0],G=o[4],L=o[8],B=o[12],W=o[1],oe=o[5],se=o[9],Y=o[13],q=o[2],ie=o[6],me=o[10],Q=o[14],K=o[3],le=o[7],de=o[11],ve=o[15];return a[0]=r*F+l*W+d*q+h*K,a[4]=r*G+l*oe+d*ie+h*le,a[8]=r*L+l*se+d*me+h*de,a[12]=r*B+l*Y+d*Q+h*ve,a[1]=f*F+_*W+g*q+b*K,a[5]=f*G+_*oe+g*ie+b*le,a[9]=f*L+_*se+g*me+b*de,a[13]=f*B+_*Y+g*Q+b*ve,a[2]=w*F+x*W+v*q+T*K,a[6]=w*G+x*oe+v*ie+T*le,a[10]=w*L+x*se+v*me+T*de,a[14]=w*B+x*Y+v*Q+T*ve,a[3]=D*F+C*W+I*q+N*K,a[7]=D*G+C*oe+I*ie+N*le,a[11]=D*L+C*se+I*me+N*de,a[15]=D*B+C*Y+I*Q+N*ve,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],o=e[8],a=e[12],r=e[1],l=e[5],d=e[9],h=e[13],f=e[2],_=e[6],g=e[10],b=e[14],w=e[3],x=e[7],v=e[11],T=e[15];return w*(+a*d*_-o*h*_-a*l*g+n*h*g+o*l*b-n*d*b)+x*(+t*d*b-t*h*g+a*r*g-o*r*b+o*h*f-a*d*f)+v*(+t*h*_-t*l*b-a*r*_+n*r*b+a*l*f-n*h*f)+T*(-o*l*f-t*d*_+t*l*g+o*r*_-n*r*g+n*d*f)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const o=this.elements;return e.isVector3?(o[12]=e.x,o[13]=e.y,o[14]=e.z):(o[12]=e,o[13]=t,o[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],o=e[2],a=e[3],r=e[4],l=e[5],d=e[6],h=e[7],f=e[8],_=e[9],g=e[10],b=e[11],w=e[12],x=e[13],v=e[14],T=e[15],D=_*v*h-x*g*h+x*d*b-l*v*b-_*d*T+l*g*T,C=w*g*h-f*v*h-w*d*b+r*v*b+f*d*T-r*g*T,I=f*x*h-w*_*h+w*l*b-r*x*b-f*l*T+r*_*T,N=w*_*d-f*x*d-w*l*g+r*x*g+f*l*v-r*_*v,F=t*D+n*C+o*I+a*N;if(F===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const G=1/F;return e[0]=D*G,e[1]=(x*g*a-_*v*a-x*o*b+n*v*b+_*o*T-n*g*T)*G,e[2]=(l*v*a-x*d*a+x*o*h-n*v*h-l*o*T+n*d*T)*G,e[3]=(_*d*a-l*g*a-_*o*h+n*g*h+l*o*b-n*d*b)*G,e[4]=C*G,e[5]=(f*v*a-w*g*a+w*o*b-t*v*b-f*o*T+t*g*T)*G,e[6]=(w*d*a-r*v*a-w*o*h+t*v*h+r*o*T-t*d*T)*G,e[7]=(r*g*a-f*d*a+f*o*h-t*g*h-r*o*b+t*d*b)*G,e[8]=I*G,e[9]=(w*_*a-f*x*a-w*n*b+t*x*b+f*n*T-t*_*T)*G,e[10]=(r*x*a-w*l*a+w*n*h-t*x*h-r*n*T+t*l*T)*G,e[11]=(f*l*a-r*_*a-f*n*h+t*_*h+r*n*b-t*l*b)*G,e[12]=N*G,e[13]=(f*x*o-w*_*o+w*n*g-t*x*g-f*n*v+t*_*v)*G,e[14]=(w*l*o-r*x*o-w*n*d+t*x*d+r*n*v-t*l*v)*G,e[15]=(r*_*o-f*l*o+f*n*d-t*_*d-r*n*g+t*l*g)*G,this}scale(e){const t=this.elements,n=e.x,o=e.y,a=e.z;return t[0]*=n,t[4]*=o,t[8]*=a,t[1]*=n,t[5]*=o,t[9]*=a,t[2]*=n,t[6]*=o,t[10]*=a,t[3]*=n,t[7]*=o,t[11]*=a,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],o=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,o))}makeTranslation(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),o=Math.sin(t),a=1-n,r=e.x,l=e.y,d=e.z,h=a*r,f=a*l;return this.set(h*r+n,h*l-o*d,h*d+o*l,0,h*l+o*d,f*l+n,f*d-o*r,0,h*d-o*l,f*d+o*r,a*d*d+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,o,a,r){return this.set(1,n,a,0,e,1,r,0,t,o,1,0,0,0,0,1),this}compose(e,t,n){const o=this.elements,a=t._x,r=t._y,l=t._z,d=t._w,h=a+a,f=r+r,_=l+l,g=a*h,b=a*f,w=a*_,x=r*f,v=r*_,T=l*_,D=d*h,C=d*f,I=d*_,N=n.x,F=n.y,G=n.z;return o[0]=(1-(x+T))*N,o[1]=(b+I)*N,o[2]=(w-C)*N,o[3]=0,o[4]=(b-I)*F,o[5]=(1-(g+T))*F,o[6]=(v+D)*F,o[7]=0,o[8]=(w+C)*G,o[9]=(v-D)*G,o[10]=(1-(g+x))*G,o[11]=0,o[12]=e.x,o[13]=e.y,o[14]=e.z,o[15]=1,this}decompose(e,t,n){const o=this.elements;let a=NB.set(o[0],o[1],o[2]).length();const r=NB.set(o[4],o[5],o[6]).length(),l=NB.set(o[8],o[9],o[10]).length();this.determinant()<0&&(a=-a),e.x=o[12],e.y=o[13],e.z=o[14],kg.copy(this);const d=1/a,h=1/r,f=1/l;return kg.elements[0]*=d,kg.elements[1]*=d,kg.elements[2]*=d,kg.elements[4]*=h,kg.elements[5]*=h,kg.elements[6]*=h,kg.elements[8]*=f,kg.elements[9]*=f,kg.elements[10]*=f,t.setFromRotationMatrix(kg),n.x=a,n.y=r,n.z=l,this}makePerspective(e,t,n,o,a,r){const l=this.elements,d=2*a/(t-e),h=2*a/(n-o),f=(t+e)/(t-e),_=(n+o)/(n-o),g=-(r+a)/(r-a),b=-2*r*a/(r-a);return l[0]=d,l[4]=0,l[8]=f,l[12]=0,l[1]=0,l[5]=h,l[9]=_,l[13]=0,l[2]=0,l[6]=0,l[10]=g,l[14]=b,l[3]=0,l[7]=0,l[11]=-1,l[15]=0,this}makeOrthographic(e,t,n,o,a,r){const l=this.elements,d=1/(t-e),h=1/(n-o),f=1/(r-a),_=(t+e)*d,g=(n+o)*h,b=(r+a)*f;return l[0]=2*d,l[4]=0,l[8]=0,l[12]=-_,l[1]=0,l[5]=2*h,l[9]=0,l[13]=-g,l[2]=0,l[6]=0,l[10]=-2*f,l[14]=-b,l[3]=0,l[7]=0,l[11]=0,l[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let o=0;o<16;o++)if(t[o]!==n[o])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const NB=new H,kg=new gI,TM=new H(0,0,0),VM=new H(1,1,1),hC=new H,cE=new H,Kg=new H,lw=new gI,xw=new Ig;class uB{constructor(e=0,t=0,n=0,o=uB.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=o}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,o=this._order){return this._x=e,this._y=t,this._z=n,this._order=o,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const o=e.elements,a=o[0],r=o[4],l=o[8],d=o[1],h=o[5],f=o[9],_=o[2],g=o[6],b=o[10];switch(t){case"XYZ":this._y=Math.asin(OI(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-f,b),this._z=Math.atan2(-r,a)):(this._x=Math.atan2(g,h),this._z=0);break;case"YXZ":this._x=Math.asin(-OI(f,-1,1)),Math.abs(f)<.9999999?(this._y=Math.atan2(l,b),this._z=Math.atan2(d,h)):(this._y=Math.atan2(-_,a),this._z=0);break;case"ZXY":this._x=Math.asin(OI(g,-1,1)),Math.abs(g)<.9999999?(this._y=Math.atan2(-_,b),this._z=Math.atan2(-r,h)):(this._y=0,this._z=Math.atan2(d,a));break;case"ZYX":this._y=Math.asin(-OI(_,-1,1)),Math.abs(_)<.9999999?(this._x=Math.atan2(g,b),this._z=Math.atan2(d,a)):(this._x=0,this._z=Math.atan2(-r,h));break;case"YZX":this._z=Math.asin(OI(d,-1,1)),Math.abs(d)<.9999999?(this._x=Math.atan2(-f,h),this._y=Math.atan2(-_,a)):(this._x=0,this._y=Math.atan2(l,b));break;case"XZY":this._z=Math.asin(-OI(r,-1,1)),Math.abs(r)<.9999999?(this._x=Math.atan2(g,h),this._y=Math.atan2(l,a)):(this._x=Math.atan2(-f,b),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return lw.makeRotationFromQuaternion(e),this.setFromRotationMatrix(lw,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return xw.setFromEuler(this),this.setFromQuaternion(xw,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}uB.DEFAULT_ORDER="XYZ";class ti{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let ZM=0;const fw=new H,RB=new Ig,jg=new gI,rE=new H,BQ=new H,XM=new H,PM=new Ig,pw=new H(1,0,0),mw=new H(0,1,0),Ow=new H(0,0,1),jM={type:"added"},bw={type:"removed"};class aI extends Wg{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:ZM++}),this.uuid=Rg(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=aI.DEFAULT_UP.clone();const e=new H,t=new uB,n=new Ig,o=new H(1,1,1);function a(){n.setFromEuler(t,!1)}function r(){t.setFromQuaternion(n,void 0,!1)}t._onChange(a),n._onChange(r),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:o},modelViewMatrix:{value:new gI},normalMatrix:{value:new Ag}}),this.matrix=new gI,this.matrixWorld=new gI,this.matrixAutoUpdate=aI.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=aI.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.layers=new ti,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return RB.setFromAxisAngle(e,t),this.quaternion.multiply(RB),this}rotateOnWorldAxis(e,t){return RB.setFromAxisAngle(e,t),this.quaternion.premultiply(RB),this}rotateX(e){return this.rotateOnAxis(pw,e)}rotateY(e){return this.rotateOnAxis(mw,e)}rotateZ(e){return this.rotateOnAxis(Ow,e)}translateOnAxis(e,t){return fw.copy(e).applyQuaternion(this.quaternion),this.position.add(fw.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(pw,e)}translateY(e){return this.translateOnAxis(mw,e)}translateZ(e){return this.translateOnAxis(Ow,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(jg.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?rE.copy(e):rE.set(e,t,n);const o=this.parent;this.updateWorldMatrix(!0,!1),BQ.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?jg.lookAt(BQ,rE,this.up):jg.lookAt(rE,BQ,this.up),this.quaternion.setFromRotationMatrix(jg),o&&(jg.extractRotation(o.matrixWorld),RB.setFromRotationMatrix(jg),this.quaternion.premultiply(RB.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(jM)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(bw)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(bw)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),jg.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),jg.multiply(e.parent.matrixWorld)),e.applyMatrix4(jg),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,o=this.children.length;n<o;n++){const a=this.children[n].getObjectByProperty(e,t);if(a!==void 0)return a}}getObjectsByProperty(e,t){let n=[];this[e]===t&&n.push(this);for(let o=0,a=this.children.length;o<a;o++){const r=this.children[o].getObjectsByProperty(e,t);r.length>0&&(n=n.concat(r))}return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(BQ,e,XM),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(BQ,PM,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,o=t.length;n<o;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,o=t.length;n<o;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,o=t.length;n<o;n++){const a=t[n];(a.matrixWorldAutoUpdate===!0||e===!0)&&a.updateMatrixWorld(e)}}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.matrixWorldAutoUpdate===!0&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const o=this.children;for(let a=0,r=o.length;a<r;a++){const l=o[a];l.matrixWorldAutoUpdate===!0&&l.updateWorldMatrix(!1,!0)}}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const o={};o.uuid=this.uuid,o.type=this.type,this.name!==""&&(o.name=this.name),this.castShadow===!0&&(o.castShadow=!0),this.receiveShadow===!0&&(o.receiveShadow=!0),this.visible===!1&&(o.visible=!1),this.frustumCulled===!1&&(o.frustumCulled=!1),this.renderOrder!==0&&(o.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(o.userData=this.userData),o.layers=this.layers.mask,o.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(o.matrixAutoUpdate=!1),this.isInstancedMesh&&(o.type="InstancedMesh",o.count=this.count,o.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(o.instanceColor=this.instanceColor.toJSON()));function a(l,d){return l[d.uuid]===void 0&&(l[d.uuid]=d.toJSON(e)),d.uuid}if(this.isScene)this.background&&(this.background.isColor?o.background=this.background.toJSON():this.background.isTexture&&(o.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(o.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){o.geometry=a(e.geometries,this.geometry);const l=this.geometry.parameters;if(l!==void 0&&l.shapes!==void 0){const d=l.shapes;if(Array.isArray(d))for(let h=0,f=d.length;h<f;h++){const _=d[h];a(e.shapes,_)}else a(e.shapes,d)}}if(this.isSkinnedMesh&&(o.bindMode=this.bindMode,o.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(a(e.skeletons,this.skeleton),o.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const l=[];for(let d=0,h=this.material.length;d<h;d++)l.push(a(e.materials,this.material[d]));o.material=l}else o.material=a(e.materials,this.material);if(this.children.length>0){o.children=[];for(let l=0;l<this.children.length;l++)o.children.push(this.children[l].toJSON(e).object)}if(this.animations.length>0){o.animations=[];for(let l=0;l<this.animations.length;l++){const d=this.animations[l];o.animations.push(a(e.animations,d))}}if(t){const l=r(e.geometries),d=r(e.materials),h=r(e.textures),f=r(e.images),_=r(e.shapes),g=r(e.skeletons),b=r(e.animations),w=r(e.nodes);l.length>0&&(n.geometries=l),d.length>0&&(n.materials=d),h.length>0&&(n.textures=h),f.length>0&&(n.images=f),_.length>0&&(n.shapes=_),g.length>0&&(n.skeletons=g),b.length>0&&(n.animations=b),w.length>0&&(n.nodes=w)}return n.object=o,n;function r(l){const d=[];for(const h in l){const f=l[h];delete f.metadata,d.push(f)}return d}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const o=e.children[n];this.add(o.clone())}return this}}aI.DEFAULT_UP=new H(0,1,0);aI.DEFAULT_MATRIX_AUTO_UPDATE=!0;aI.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const Ug=new H,vg=new H,BD=new H,zg=new H,yB=new H,tB=new H,uw=new H,QD=new H,ED=new H,iD=new H;class Sg{constructor(e=new H,t=new H,n=new H){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,o){o.subVectors(n,t),Ug.subVectors(e,t),o.cross(Ug);const a=o.lengthSq();return a>0?o.multiplyScalar(1/Math.sqrt(a)):o.set(0,0,0)}static getBarycoord(e,t,n,o,a){Ug.subVectors(o,t),vg.subVectors(n,t),BD.subVectors(e,t);const r=Ug.dot(Ug),l=Ug.dot(vg),d=Ug.dot(BD),h=vg.dot(vg),f=vg.dot(BD),_=r*h-l*l;if(_===0)return a.set(-2,-1,-1);const g=1/_,b=(h*d-l*f)*g,w=(r*f-l*d)*g;return a.set(1-b-w,w,b)}static containsPoint(e,t,n,o){return this.getBarycoord(e,t,n,o,zg),zg.x>=0&&zg.y>=0&&zg.x+zg.y<=1}static getUV(e,t,n,o,a,r,l,d){return this.getBarycoord(e,t,n,o,zg),d.set(0,0),d.addScaledVector(a,zg.x),d.addScaledVector(r,zg.y),d.addScaledVector(l,zg.z),d}static isFrontFacing(e,t,n,o){return Ug.subVectors(n,t),vg.subVectors(e,t),Ug.cross(vg).dot(o)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,o){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[o]),this}setFromAttributeAndIndices(e,t,n,o){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,o),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Ug.subVectors(this.c,this.b),vg.subVectors(this.a,this.b),Ug.cross(vg).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Sg.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return Sg.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,o,a){return Sg.getUV(e,this.a,this.b,this.c,t,n,o,a)}containsPoint(e){return Sg.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Sg.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,o=this.b,a=this.c;let r,l;yB.subVectors(o,n),tB.subVectors(a,n),QD.subVectors(e,n);const d=yB.dot(QD),h=tB.dot(QD);if(d<=0&&h<=0)return t.copy(n);ED.subVectors(e,o);const f=yB.dot(ED),_=tB.dot(ED);if(f>=0&&_<=f)return t.copy(o);const g=d*_-f*h;if(g<=0&&d>=0&&f<=0)return r=d/(d-f),t.copy(n).addScaledVector(yB,r);iD.subVectors(e,a);const b=yB.dot(iD),w=tB.dot(iD);if(w>=0&&b<=w)return t.copy(a);const x=b*h-d*w;if(x<=0&&h>=0&&w<=0)return l=h/(h-w),t.copy(n).addScaledVector(tB,l);const v=f*w-b*_;if(v<=0&&_-f>=0&&b-w>=0)return uw.subVectors(a,o),l=(_-f)/(_-f+(b-w)),t.copy(o).addScaledVector(uw,l);const T=1/(v+x+g);return r=x*T,l=g*T,t.copy(n).addScaledVector(yB,r).addScaledVector(tB,l)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let vM=0;class Eg extends Wg{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:vM++}),this.uuid=Rg(),this.name="",this.type="Material",this.blending=XC,this.side=QC,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=Ko,this.blendDst=Mo,this.blendEquation=bC,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Gi,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=vG,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=wi,this.stencilZFail=wi,this.stencilZPass=wi,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}const o=this[t];if(o===void 0){console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.");continue}o&&o.isColor?o.set(n):o&&o.isVector3&&n&&n.isVector3?o.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==XC&&(n.blending=this.blending),this.side!==QC&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(n.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.forceSinglePass===!0&&(n.forceSinglePass=this.forceSinglePass),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=this.flatShading),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function o(a){const r=[];for(const l in a){const d=a[l];delete d.metadata,r.push(d)}return r}if(t){const a=o(e.textures),r=o(e.images);a.length>0&&(n.textures=a),r.length>0&&(n.images=r)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const o=t.length;n=new Array(o);for(let a=0;a!==o;++a)n[a]=t[a].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}const Ah={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},ng={h:0,s:0,l:0},kE={h:0,s:0,l:0};function DD(s,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?s+(e-s)*6*t:t<1/2?e:t<2/3?s+(e-s)*6*(2/3-t):s}class YA{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,t===void 0&&n===void 0?this.set(e):this.setRGB(e,t,n)}set(e){return e&&e.isColor?this.copy(e):typeof e=="number"?this.setHex(e):typeof e=="string"&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=Yg){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,Bg.toWorkingColorSpace(this,t),this}setRGB(e,t,n,o=Bg.workingColorSpace){return this.r=e,this.g=t,this.b=n,Bg.toWorkingColorSpace(this,o),this}setHSL(e,t,n,o=Bg.workingColorSpace){if(e=Fo(e,1),t=OI(t,0,1),n=OI(n,0,1),t===0)this.r=this.g=this.b=n;else{const a=n<=.5?n*(1+t):n+t-n*t,r=2*n-a;this.r=DD(r,a,e+1/3),this.g=DD(r,a,e),this.b=DD(r,a,e-1/3)}return Bg.toWorkingColorSpace(this,o),this}setStyle(e,t=Yg){function n(a){a!==void 0&&parseFloat(a)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let o;if(o=/^(\w+)\(([^\)]*)\)/.exec(e)){let a;const r=o[1],l=o[2];switch(r){case"rgb":case"rgba":if(a=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(l))return this.r=Math.min(255,parseInt(a[1],10))/255,this.g=Math.min(255,parseInt(a[2],10))/255,this.b=Math.min(255,parseInt(a[3],10))/255,Bg.toWorkingColorSpace(this,t),n(a[4]),this;if(a=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(l))return this.r=Math.min(100,parseInt(a[1],10))/100,this.g=Math.min(100,parseInt(a[2],10))/100,this.b=Math.min(100,parseInt(a[3],10))/100,Bg.toWorkingColorSpace(this,t),n(a[4]),this;break;case"hsl":case"hsla":if(a=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(l)){const d=parseFloat(a[1])/360,h=parseFloat(a[2])/100,f=parseFloat(a[3])/100;return n(a[4]),this.setHSL(d,h,f,t)}break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(o=/^\#([A-Fa-f\d]+)$/.exec(e)){const a=o[1],r=a.length;if(r===3)return this.r=parseInt(a.charAt(0)+a.charAt(0),16)/255,this.g=parseInt(a.charAt(1)+a.charAt(1),16)/255,this.b=parseInt(a.charAt(2)+a.charAt(2),16)/255,Bg.toWorkingColorSpace(this,t),this;if(r===6)return this.r=parseInt(a.charAt(0)+a.charAt(1),16)/255,this.g=parseInt(a.charAt(2)+a.charAt(3),16)/255,this.b=parseInt(a.charAt(4)+a.charAt(5),16)/255,Bg.toWorkingColorSpace(this,t),this;console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=Yg){const n=Ah[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=lB(e.r),this.g=lB(e.g),this.b=lB(e.b),this}copyLinearToSRGB(e){return this.r=vi(e.r),this.g=vi(e.g),this.b=vi(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=Yg){return Bg.fromWorkingColorSpace(Cg.copy(this),e),OI(Cg.r*255,0,255)<<16^OI(Cg.g*255,0,255)<<8^OI(Cg.b*255,0,255)<<0}getHexString(e=Yg){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=Bg.workingColorSpace){Bg.fromWorkingColorSpace(Cg.copy(this),t);const n=Cg.r,o=Cg.g,a=Cg.b,r=Math.max(n,o,a),l=Math.min(n,o,a);let d,h;const f=(l+r)/2;if(l===r)d=0,h=0;else{const _=r-l;switch(h=f<=.5?_/(r+l):_/(2-r-l),r){case n:d=(o-a)/_+(o<a?6:0);break;case o:d=(a-n)/_+2;break;case a:d=(n-o)/_+4;break}d/=6}return e.h=d,e.s=h,e.l=f,e}getRGB(e,t=Bg.workingColorSpace){return Bg.fromWorkingColorSpace(Cg.copy(this),t),e.r=Cg.r,e.g=Cg.g,e.b=Cg.b,e}getStyle(e=Yg){Bg.fromWorkingColorSpace(Cg.copy(this),e);const t=Cg.r,n=Cg.g,o=Cg.b;return e!==Yg?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${o.toFixed(3)})`:`rgb(${t*255|0},${n*255|0},${o*255|0})`}offsetHSL(e,t,n){return this.getHSL(ng),ng.h+=e,ng.s+=t,ng.l+=n,this.setHSL(ng.h,ng.s,ng.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(ng),e.getHSL(kE);const n=MQ(ng.h,kE.h,t),o=MQ(ng.s,kE.s,t),a=MQ(ng.l,kE.l,t);return this.setHSL(n,o,a),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const Cg=new YA;YA.NAMES=Ah;class iC extends Eg{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new YA(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=fQ,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const TI=new H,UE=new DA;class tI{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n,this.usage=kQ,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let o=0,a=this.itemSize;o<a;o++)this.array[e+o]=t.array[n+o];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)UE.fromBufferAttribute(this,t),UE.applyMatrix3(e),this.setXY(t,UE.x,UE.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)TI.fromBufferAttribute(this,t),TI.applyMatrix3(e),this.setXYZ(t,TI.x,TI.y,TI.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)TI.fromBufferAttribute(this,t),TI.applyMatrix4(e),this.setXYZ(t,TI.x,TI.y,TI.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)TI.fromBufferAttribute(this,t),TI.applyNormalMatrix(e),this.setXYZ(t,TI.x,TI.y,TI.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)TI.fromBufferAttribute(this,t),TI.transformDirection(e),this.setXYZ(t,TI.x,TI.y,TI.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=gC(t,this.array)),t}setX(e,t){return this.normalized&&(t=yI(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=gC(t,this.array)),t}setY(e,t){return this.normalized&&(t=yI(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=gC(t,this.array)),t}setZ(e,t){return this.normalized&&(t=yI(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=gC(t,this.array)),t}setW(e,t){return this.normalized&&(t=yI(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=yI(t,this.array),n=yI(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,o){return e*=this.itemSize,this.normalized&&(t=yI(t,this.array),n=yI(n,this.array),o=yI(o,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=o,this}setXYZW(e,t,n,o,a){return e*=this.itemSize,this.normalized&&(t=yI(t,this.array),n=yI(n,this.array),o=yI(o,this.array),a=yI(a,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=o,this.array[e+3]=a,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==kQ&&(e.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(e.updateRange=this.updateRange),e}copyColorsArray(){console.error("THREE.BufferAttribute: copyColorsArray() was removed in r144.")}copyVector2sArray(){console.error("THREE.BufferAttribute: copyVector2sArray() was removed in r144.")}copyVector3sArray(){console.error("THREE.BufferAttribute: copyVector3sArray() was removed in r144.")}copyVector4sArray(){console.error("THREE.BufferAttribute: copyVector4sArray() was removed in r144.")}}class co extends tI{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class ro extends tI{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class pA extends tI{constructor(e,t,n){super(new Float32Array(e),t,n)}}let B0=0;const tg=new gI,oD=new aI,FB=new H,Mg=new IB,QQ=new IB,vI=new H;class EI extends Wg{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:B0++}),this.uuid=Rg(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new($G(e)?ro:co)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const a=new Ag().getNormalMatrix(e);n.applyNormalMatrix(a),n.needsUpdate=!0}const o=this.attributes.tangent;return o!==void 0&&(o.transformDirection(e),o.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return tg.makeRotationFromQuaternion(e),this.applyMatrix4(tg),this}rotateX(e){return tg.makeRotationX(e),this.applyMatrix4(tg),this}rotateY(e){return tg.makeRotationY(e),this.applyMatrix4(tg),this}rotateZ(e){return tg.makeRotationZ(e),this.applyMatrix4(tg),this}translate(e,t,n){return tg.makeTranslation(e,t,n),this.applyMatrix4(tg),this}scale(e,t,n){return tg.makeScale(e,t,n),this.applyMatrix4(tg),this}lookAt(e){return oD.lookAt(e),oD.updateMatrix(),this.applyMatrix4(oD.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(FB).negate(),this.translate(FB.x,FB.y,FB.z),this}setFromPoints(e){const t=[];for(let n=0,o=e.length;n<o;n++){const a=e[n];t.push(a.x,a.y,a.z||0)}return this.setAttribute("position",new pA(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new IB);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new H(-1/0,-1/0,-1/0),new H(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,o=t.length;n<o;n++){const a=t[n];Mg.setFromBufferAttribute(a),this.morphTargetsRelative?(vI.addVectors(this.boundingBox.min,Mg.min),this.boundingBox.expandByPoint(vI),vI.addVectors(this.boundingBox.max,Mg.max),this.boundingBox.expandByPoint(vI)):(this.boundingBox.expandByPoint(Mg.min),this.boundingBox.expandByPoint(Mg.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new gB);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new H,1/0);return}if(e){const n=this.boundingSphere.center;if(Mg.setFromBufferAttribute(e),t)for(let a=0,r=t.length;a<r;a++){const l=t[a];QQ.setFromBufferAttribute(l),this.morphTargetsRelative?(vI.addVectors(Mg.min,QQ.min),Mg.expandByPoint(vI),vI.addVectors(Mg.max,QQ.max),Mg.expandByPoint(vI)):(Mg.expandByPoint(QQ.min),Mg.expandByPoint(QQ.max))}Mg.getCenter(n);let o=0;for(let a=0,r=e.count;a<r;a++)vI.fromBufferAttribute(e,a),o=Math.max(o,n.distanceToSquared(vI));if(t)for(let a=0,r=t.length;a<r;a++){const l=t[a],d=this.morphTargetsRelative;for(let h=0,f=l.count;h<f;h++)vI.fromBufferAttribute(l,h),d&&(FB.fromBufferAttribute(e,h),vI.add(FB)),o=Math.max(o,n.distanceToSquared(vI))}this.boundingSphere.radius=Math.sqrt(o),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.array,o=t.position.array,a=t.normal.array,r=t.uv.array,l=o.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new tI(new Float32Array(4*l),4));const d=this.getAttribute("tangent").array,h=[],f=[];for(let W=0;W<l;W++)h[W]=new H,f[W]=new H;const _=new H,g=new H,b=new H,w=new DA,x=new DA,v=new DA,T=new H,D=new H;function C(W,oe,se){_.fromArray(o,W*3),g.fromArray(o,oe*3),b.fromArray(o,se*3),w.fromArray(r,W*2),x.fromArray(r,oe*2),v.fromArray(r,se*2),g.sub(_),b.sub(_),x.sub(w),v.sub(w);const Y=1/(x.x*v.y-v.x*x.y);isFinite(Y)&&(T.copy(g).multiplyScalar(v.y).addScaledVector(b,-x.y).multiplyScalar(Y),D.copy(b).multiplyScalar(x.x).addScaledVector(g,-v.x).multiplyScalar(Y),h[W].add(T),h[oe].add(T),h[se].add(T),f[W].add(D),f[oe].add(D),f[se].add(D))}let I=this.groups;I.length===0&&(I=[{start:0,count:n.length}]);for(let W=0,oe=I.length;W<oe;++W){const se=I[W],Y=se.start,q=se.count;for(let ie=Y,me=Y+q;ie<me;ie+=3)C(n[ie+0],n[ie+1],n[ie+2])}const N=new H,F=new H,G=new H,L=new H;function B(W){G.fromArray(a,W*3),L.copy(G);const oe=h[W];N.copy(oe),N.sub(G.multiplyScalar(G.dot(oe))).normalize(),F.crossVectors(L,oe);const se=F.dot(f[W])<0?-1:1;d[W*4]=N.x,d[W*4+1]=N.y,d[W*4+2]=N.z,d[W*4+3]=se}for(let W=0,oe=I.length;W<oe;++W){const se=I[W],Y=se.start,q=se.count;for(let ie=Y,me=Y+q;ie<me;ie+=3)B(n[ie+0]),B(n[ie+1]),B(n[ie+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new tI(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let g=0,b=n.count;g<b;g++)n.setXYZ(g,0,0,0);const o=new H,a=new H,r=new H,l=new H,d=new H,h=new H,f=new H,_=new H;if(e)for(let g=0,b=e.count;g<b;g+=3){const w=e.getX(g+0),x=e.getX(g+1),v=e.getX(g+2);o.fromBufferAttribute(t,w),a.fromBufferAttribute(t,x),r.fromBufferAttribute(t,v),f.subVectors(r,a),_.subVectors(o,a),f.cross(_),l.fromBufferAttribute(n,w),d.fromBufferAttribute(n,x),h.fromBufferAttribute(n,v),l.add(f),d.add(f),h.add(f),n.setXYZ(w,l.x,l.y,l.z),n.setXYZ(x,d.x,d.y,d.z),n.setXYZ(v,h.x,h.y,h.z)}else for(let g=0,b=t.count;g<b;g+=3)o.fromBufferAttribute(t,g+0),a.fromBufferAttribute(t,g+1),r.fromBufferAttribute(t,g+2),f.subVectors(r,a),_.subVectors(o,a),f.cross(_),n.setXYZ(g+0,f.x,f.y,f.z),n.setXYZ(g+1,f.x,f.y,f.z),n.setXYZ(g+2,f.x,f.y,f.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(){return console.error("THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeBufferGeometries() instead."),this}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)vI.fromBufferAttribute(e,t),vI.normalize(),e.setXYZ(t,vI.x,vI.y,vI.z)}toNonIndexed(){function e(l,d){const h=l.array,f=l.itemSize,_=l.normalized,g=new h.constructor(d.length*f);let b=0,w=0;for(let x=0,v=d.length;x<v;x++){l.isInterleavedBufferAttribute?b=d[x]*l.data.stride+l.offset:b=d[x]*f;for(let T=0;T<f;T++)g[w++]=h[b++]}return new tI(g,f,_)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new EI,n=this.index.array,o=this.attributes;for(const l in o){const d=o[l],h=e(d,n);t.setAttribute(l,h)}const a=this.morphAttributes;for(const l in a){const d=[],h=a[l];for(let f=0,_=h.length;f<_;f++){const g=h[f],b=e(g,n);d.push(b)}t.morphAttributes[l]=d}t.morphTargetsRelative=this.morphTargetsRelative;const r=this.groups;for(let l=0,d=r.length;l<d;l++){const h=r[l];t.addGroup(h.start,h.count,h.materialIndex)}return t}toJSON(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const d=this.parameters;for(const h in d)d[h]!==void 0&&(e[h]=d[h]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const d in n){const h=n[d];e.data.attributes[d]=h.toJSON(e.data)}const o={};let a=!1;for(const d in this.morphAttributes){const h=this.morphAttributes[d],f=[];for(let _=0,g=h.length;_<g;_++){const b=h[_];f.push(b.toJSON(e.data))}f.length>0&&(o[d]=f,a=!0)}a&&(e.data.morphAttributes=o,e.data.morphTargetsRelative=this.morphTargetsRelative);const r=this.groups;r.length>0&&(e.data.groups=JSON.parse(JSON.stringify(r)));const l=this.boundingSphere;return l!==null&&(e.data.boundingSphere={center:l.center.toArray(),radius:l.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const o=e.attributes;for(const h in o){const f=o[h];this.setAttribute(h,f.clone(t))}const a=e.morphAttributes;for(const h in a){const f=[],_=a[h];for(let g=0,b=_.length;g<b;g++)f.push(_[g].clone(t));this.morphAttributes[h]=f}this.morphTargetsRelative=e.morphTargetsRelative;const r=e.groups;for(let h=0,f=r.length;h<f;h++){const _=r[h];this.addGroup(_.start,_.count,_.materialIndex)}const l=e.boundingBox;l!==null&&(this.boundingBox=l.clone());const d=e.boundingSphere;return d!==null&&(this.boundingSphere=d.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const Ww=new gI,mg=new pQ,nE=new gB,Tw=new H,EQ=new H,iQ=new H,DQ=new H,sD=new H,JE=new H,YE=new DA,LE=new DA,qE=new DA,wD=new H,dE=new H;class zI extends aI{constructor(e=new EI,t=new iC){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const e=this.geometry.morphAttributes,t=Object.keys(e);if(t.length>0){const n=e[t[0]];if(n!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let o=0,a=n.length;o<a;o++){const r=n[o].name||String(o);this.morphTargetInfluences.push(0),this.morphTargetDictionary[r]=o}}}}getVertexPosition(e,t){const n=this.geometry,o=n.attributes.position,a=n.morphAttributes.position,r=n.morphTargetsRelative;t.fromBufferAttribute(o,e);const l=this.morphTargetInfluences;if(a&&l){JE.set(0,0,0);for(let d=0,h=a.length;d<h;d++){const f=l[d],_=a[d];f!==0&&(sD.fromBufferAttribute(_,e),r?JE.addScaledVector(sD,f):JE.addScaledVector(sD.sub(t),f))}t.add(JE)}return this.isSkinnedMesh&&this.boneTransform(e,t),t}raycast(e,t){const n=this.geometry,o=this.material,a=this.matrixWorld;if(o===void 0||(n.boundingSphere===null&&n.computeBoundingSphere(),nE.copy(n.boundingSphere),nE.applyMatrix4(a),mg.copy(e.ray).recast(e.near),nE.containsPoint(mg.origin)===!1&&(mg.intersectSphere(nE,Tw)===null||mg.origin.distanceToSquared(Tw)>(e.far-e.near)**2))||(Ww.copy(a).invert(),mg.copy(e.ray).applyMatrix4(Ww),n.boundingBox!==null&&mg.intersectsBox(n.boundingBox)===!1))return;let r;const l=n.index,d=n.attributes.position,h=n.attributes.uv,f=n.attributes.uv2,_=n.groups,g=n.drawRange;if(l!==null)if(Array.isArray(o))for(let b=0,w=_.length;b<w;b++){const x=_[b],v=o[x.materialIndex],T=Math.max(x.start,g.start),D=Math.min(l.count,Math.min(x.start+x.count,g.start+g.count));for(let C=T,I=D;C<I;C+=3){const N=l.getX(C),F=l.getX(C+1),G=l.getX(C+2);r=HE(this,v,e,mg,h,f,N,F,G),r&&(r.faceIndex=Math.floor(C/3),r.face.materialIndex=x.materialIndex,t.push(r))}}else{const b=Math.max(0,g.start),w=Math.min(l.count,g.start+g.count);for(let x=b,v=w;x<v;x+=3){const T=l.getX(x),D=l.getX(x+1),C=l.getX(x+2);r=HE(this,o,e,mg,h,f,T,D,C),r&&(r.faceIndex=Math.floor(x/3),t.push(r))}}else if(d!==void 0)if(Array.isArray(o))for(let b=0,w=_.length;b<w;b++){const x=_[b],v=o[x.materialIndex],T=Math.max(x.start,g.start),D=Math.min(d.count,Math.min(x.start+x.count,g.start+g.count));for(let C=T,I=D;C<I;C+=3){const N=C,F=C+1,G=C+2;r=HE(this,v,e,mg,h,f,N,F,G),r&&(r.faceIndex=Math.floor(C/3),r.face.materialIndex=x.materialIndex,t.push(r))}}else{const b=Math.max(0,g.start),w=Math.min(d.count,g.start+g.count);for(let x=b,v=w;x<v;x+=3){const T=x,D=x+1,C=x+2;r=HE(this,o,e,mg,h,f,T,D,C),r&&(r.faceIndex=Math.floor(x/3),t.push(r))}}}}function Q0(s,e,t,n,o,a,r,l){let d;if(e.side===Gg?d=n.intersectTriangle(r,a,o,!0,l):d=n.intersectTriangle(o,a,r,e.side===QC,l),d===null)return null;dE.copy(l),dE.applyMatrix4(s.matrixWorld);const h=t.ray.origin.distanceTo(dE);return h<t.near||h>t.far?null:{distance:h,point:dE.clone(),object:s}}function HE(s,e,t,n,o,a,r,l,d){s.getVertexPosition(r,EQ),s.getVertexPosition(l,iQ),s.getVertexPosition(d,DQ);const h=Q0(s,e,t,n,EQ,iQ,DQ,wD);if(h){o&&(YE.fromBufferAttribute(o,r),LE.fromBufferAttribute(o,l),qE.fromBufferAttribute(o,d),h.uv=Sg.getUV(wD,EQ,iQ,DQ,YE,LE,qE,new DA)),a&&(YE.fromBufferAttribute(a,r),LE.fromBufferAttribute(a,l),qE.fromBufferAttribute(a,d),h.uv2=Sg.getUV(wD,EQ,iQ,DQ,YE,LE,qE,new DA));const f={a:r,b:l,c:d,normal:new H,materialIndex:0};Sg.getNormal(EQ,iQ,DQ,f.normal),h.face=f}return h}class UC extends EI{constructor(e=1,t=1,n=1,o=1,a=1,r=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:o,heightSegments:a,depthSegments:r};const l=this;o=Math.floor(o),a=Math.floor(a),r=Math.floor(r);const d=[],h=[],f=[],_=[];let g=0,b=0;w("z","y","x",-1,-1,n,t,e,r,a,0),w("z","y","x",1,-1,n,t,-e,r,a,1),w("x","z","y",1,1,e,n,t,o,r,2),w("x","z","y",1,-1,e,n,-t,o,r,3),w("x","y","z",1,-1,e,t,n,o,a,4),w("x","y","z",-1,-1,e,t,-n,o,a,5),this.setIndex(d),this.setAttribute("position",new pA(h,3)),this.setAttribute("normal",new pA(f,3)),this.setAttribute("uv",new pA(_,2));function w(x,v,T,D,C,I,N,F,G,L,B){const W=I/G,oe=N/L,se=I/2,Y=N/2,q=F/2,ie=G+1,me=L+1;let Q=0,K=0;const le=new H;for(let de=0;de<me;de++){const ve=de*oe-Y;for(let $=0;$<ie;$++){const z=$*W-se;le[x]=z*D,le[v]=ve*C,le[T]=q,h.push(le.x,le.y,le.z),le[x]=0,le[v]=0,le[T]=F>0?1:-1,f.push(le.x,le.y,le.z),_.push($/G),_.push(1-de/L),Q+=1}}for(let de=0;de<L;de++)for(let ve=0;ve<G;ve++){const $=g+ve+ie*de,z=g+ve+ie*(de+1),ne=g+(ve+1)+ie*(de+1),V=g+(ve+1)+ie*de;d.push($,z,V),d.push(z,ne,V),K+=6}l.addGroup(b,K,B),b+=K,g+=Q}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new UC(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function mB(s){const e={};for(const t in s){e[t]={};for(const n in s[t]){const o=s[t][n];o&&(o.isColor||o.isMatrix3||o.isMatrix4||o.isVector2||o.isVector3||o.isVector4||o.isTexture||o.isQuaternion)?e[t][n]=o.clone():Array.isArray(o)?e[t][n]=o.slice():e[t][n]=o}}return e}function sg(s){const e={};for(let t=0;t<s.length;t++){const n=mB(s[t]);for(const o in n)e[o]=n[o]}return e}function E0(s){const e=[];for(let t=0;t<s.length;t++)e.push(s[t].clone());return e}function Ih(s){return s.getRenderTarget()===null&&s.outputEncoding===SI?Yg:pB}const gh={clone:mB,merge:sg};var i0=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,D0=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class ug extends Eg{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=i0,this.fragmentShader=D0,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=mB(e.uniforms),this.uniformsGroups=E0(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const o in this.uniforms){const a=this.uniforms[o].value;a&&a.isTexture?t.uniforms[o]={type:"t",value:a.toJSON(e).uuid}:a&&a.isColor?t.uniforms[o]={type:"c",value:a.getHex()}:a&&a.isVector2?t.uniforms[o]={type:"v2",value:a.toArray()}:a&&a.isVector3?t.uniforms[o]={type:"v3",value:a.toArray()}:a&&a.isVector4?t.uniforms[o]={type:"v4",value:a.toArray()}:a&&a.isMatrix3?t.uniforms[o]={type:"m3",value:a.toArray()}:a&&a.isMatrix4?t.uniforms[o]={type:"m4",value:a.toArray()}:t.uniforms[o]={value:a}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const n={};for(const o in this.extensions)this.extensions[o]===!0&&(n[o]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}let Fi=class extends aI{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new gI,this.projectionMatrix=new gI,this.projectionMatrixInverse=new gI}copy(s,e){return super.copy(s,e),this.matrixWorldInverse.copy(s.matrixWorldInverse),this.projectionMatrix.copy(s.projectionMatrix),this.projectionMatrixInverse.copy(s.projectionMatrixInverse),this}getWorldDirection(s){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return s.set(-e[8],-e[9],-e[10]).normalize()}updateMatrixWorld(s){super.updateMatrixWorld(s),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(s,e){super.updateWorldMatrix(s,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}};class $I extends Fi{constructor(e=50,t=1,n=.1,o=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=o,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=UQ*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(jC*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return UQ*2*Math.atan(Math.tan(jC*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,o,a,r){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=o,this.view.width=a,this.view.height=r,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(jC*.5*this.fov)/this.zoom,n=2*t,o=this.aspect*n,a=-.5*o;const r=this.view;if(this.view!==null&&this.view.enabled){const d=r.fullWidth,h=r.fullHeight;a+=r.offsetX*o/d,t-=r.offsetY*n/h,o*=r.width/d,n*=r.height/h}const l=this.filmOffset;l!==0&&(a+=e*l/this.getFilmWidth()),this.projectionMatrix.makePerspective(a,a+o,t,t-n,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const SB=-90,eB=1;class Ch extends aI{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n;const o=new $I(SB,eB,e,t);o.layers=this.layers,o.up.set(0,1,0),o.lookAt(1,0,0),this.add(o);const a=new $I(SB,eB,e,t);a.layers=this.layers,a.up.set(0,1,0),a.lookAt(-1,0,0),this.add(a);const r=new $I(SB,eB,e,t);r.layers=this.layers,r.up.set(0,0,-1),r.lookAt(0,1,0),this.add(r);const l=new $I(SB,eB,e,t);l.layers=this.layers,l.up.set(0,0,1),l.lookAt(0,-1,0),this.add(l);const d=new $I(SB,eB,e,t);d.layers=this.layers,d.up.set(0,1,0),d.lookAt(0,0,1),this.add(d);const h=new $I(SB,eB,e,t);h.layers=this.layers,h.up.set(0,1,0),h.lookAt(0,0,-1),this.add(h)}update(e,t){this.parent===null&&this.updateMatrixWorld();const n=this.renderTarget,[o,a,r,l,d,h]=this.children,f=e.getRenderTarget(),_=e.toneMapping,g=e.xr.enabled;e.toneMapping=Og,e.xr.enabled=!1;const b=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,o),e.setRenderTarget(n,1),e.render(t,a),e.setRenderTarget(n,2),e.render(t,r),e.setRenderTarget(n,3),e.render(t,l),e.setRenderTarget(n,4),e.render(t,d),n.texture.generateMipmaps=b,e.setRenderTarget(n,5),e.render(t,h),e.setRenderTarget(f),e.toneMapping=_,e.xr.enabled=g,n.texture.needsPMREMUpdate=!0}}class mQ extends bI{constructor(e,t,n,o,a,r,l,d,h,f){e=e!==void 0?e:[],t=t!==void 0?t:tC,super(e,t,n,o,a,r,l,d,h,f),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class Bh extends qg{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},o=[n,n,n,n,n,n];this.texture=new mQ(o,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:mI}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},o=new UC(5,5,5),a=new ug({name:"CubemapFromEquirect",uniforms:mB(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:Gg,blending:BC});a.uniforms.tEquirect.value=t;const r=new zI(o,a),l=t.minFilter;return t.minFilter===SC&&(t.minFilter=mI),new Ch(1,10,this).update(e,r),t.minFilter=l,r.geometry.dispose(),r.material.dispose(),this}clear(e,t,n,o){const a=e.getRenderTarget();for(let r=0;r<6;r++)e.setRenderTarget(this,r),e.clear(t,n,o);e.setRenderTarget(a)}}const aD=new H,o0=new H,s0=new Ag;class MC{constructor(e=new H(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,o){return this.normal.set(e,t,n),this.constant=o,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const o=aD.subVectors(n,t).cross(o0.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(o,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(aD),o=this.normal.dot(n);if(o===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const a=-(e.start.dot(this.normal)+this.constant)/o;return a<0||a>1?null:t.copy(e.start).addScaledVector(n,a)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||s0.getNormalMatrix(e),o=this.coplanarPoint(aD).applyMatrix4(e),a=this.normal.applyMatrix3(n).normalize();return this.constant=-o.dot(a),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const cB=new gB,lE=new H;class Si{constructor(e=new MC,t=new MC,n=new MC,o=new MC,a=new MC,r=new MC){this.planes=[e,t,n,o,a,r]}set(e,t,n,o,a,r){const l=this.planes;return l[0].copy(e),l[1].copy(t),l[2].copy(n),l[3].copy(o),l[4].copy(a),l[5].copy(r),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e){const t=this.planes,n=e.elements,o=n[0],a=n[1],r=n[2],l=n[3],d=n[4],h=n[5],f=n[6],_=n[7],g=n[8],b=n[9],w=n[10],x=n[11],v=n[12],T=n[13],D=n[14],C=n[15];return t[0].setComponents(l-o,_-d,x-g,C-v).normalize(),t[1].setComponents(l+o,_+d,x+g,C+v).normalize(),t[2].setComponents(l+a,_+h,x+b,C+T).normalize(),t[3].setComponents(l-a,_-h,x-b,C-T).normalize(),t[4].setComponents(l-r,_-f,x-w,C-D).normalize(),t[5].setComponents(l+r,_+f,x+w,C+D).normalize(),this}intersectsObject(e){const t=e.geometry;return t.boundingSphere===null&&t.computeBoundingSphere(),cB.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(cB)}intersectsSprite(e){return cB.center.set(0,0,0),cB.radius=.7071067811865476,cB.applyMatrix4(e.matrixWorld),this.intersectsSphere(cB)}intersectsSphere(e){const t=this.planes,n=e.center,o=-e.radius;for(let a=0;a<6;a++)if(t[a].distanceToPoint(n)<o)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const o=t[n];if(lE.x=o.normal.x>0?e.max.x:e.min.x,lE.y=o.normal.y>0?e.max.y:e.min.y,lE.z=o.normal.z>0?e.max.z:e.min.z,o.distanceToPoint(lE)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function Qh(){let s=null,e=!1,t=null,n=null;function o(a,r){t(a,r),n=s.requestAnimationFrame(o)}return{start:function(){e!==!0&&t!==null&&(n=s.requestAnimationFrame(o),e=!0)},stop:function(){s.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(a){t=a},setContext:function(a){s=a}}}function w0(s,e){const t=e.isWebGL2,n=new WeakMap;function o(h,f){const _=h.array,g=h.usage,b=s.createBuffer();s.bindBuffer(f,b),s.bufferData(f,_,g),h.onUploadCallback();let w;if(_ instanceof Float32Array)w=5126;else if(_ instanceof Uint16Array)if(h.isFloat16BufferAttribute)if(t)w=5131;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else w=5123;else if(_ instanceof Int16Array)w=5122;else if(_ instanceof Uint32Array)w=5125;else if(_ instanceof Int32Array)w=5124;else if(_ instanceof Int8Array)w=5120;else if(_ instanceof Uint8Array)w=5121;else if(_ instanceof Uint8ClampedArray)w=5121;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+_);return{buffer:b,type:w,bytesPerElement:_.BYTES_PER_ELEMENT,version:h.version}}function a(h,f,_){const g=f.array,b=f.updateRange;s.bindBuffer(_,h),b.count===-1?s.bufferSubData(_,0,g):(t?s.bufferSubData(_,b.offset*g.BYTES_PER_ELEMENT,g,b.offset,b.count):s.bufferSubData(_,b.offset*g.BYTES_PER_ELEMENT,g.subarray(b.offset,b.offset+b.count)),b.count=-1),f.onUploadCallback()}function r(h){return h.isInterleavedBufferAttribute&&(h=h.data),n.get(h)}function l(h){h.isInterleavedBufferAttribute&&(h=h.data);const f=n.get(h);f&&(s.deleteBuffer(f.buffer),n.delete(h))}function d(h,f){if(h.isGLBufferAttribute){const g=n.get(h);(!g||g.version<h.version)&&n.set(h,{buffer:h.buffer,type:h.type,bytesPerElement:h.elementSize,version:h.version});return}h.isInterleavedBufferAttribute&&(h=h.data);const _=n.get(h);_===void 0?n.set(h,o(h,f)):_.version<h.version&&(a(_.buffer,h,f),_.version=h.version)}return{get:r,remove:l,update:d}}class CB extends EI{constructor(e=1,t=1,n=1,o=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:o};const a=e/2,r=t/2,l=Math.floor(n),d=Math.floor(o),h=l+1,f=d+1,_=e/l,g=t/d,b=[],w=[],x=[],v=[];for(let T=0;T<f;T++){const D=T*g-r;for(let C=0;C<h;C++){const I=C*_-a;w.push(I,-D,0),x.push(0,0,1),v.push(C/l),v.push(1-T/d)}}for(let T=0;T<d;T++)for(let D=0;D<l;D++){const C=D+h*T,I=D+h*(T+1),N=D+1+h*(T+1),F=D+1+h*T;b.push(C,I,F),b.push(I,N,F)}this.setIndex(b),this.setAttribute("position",new pA(w,3)),this.setAttribute("normal",new pA(x,3)),this.setAttribute("uv",new pA(v,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new CB(e.width,e.height,e.widthSegments,e.heightSegments)}}var a0=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,G0=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,h0=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,K0=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,M0=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,N0=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,R0="vec3 transformed = vec3( position );",y0=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,t0=`vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( V * D );
}
#ifdef USE_IRIDESCENCE
	vec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = mix( F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif`,F0=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			 return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float R21 = R12;
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,S0=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = dFdx( surf_pos.xyz );
		vec3 vSigmaY = dFdy( surf_pos.xyz );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,e0=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,c0=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,r0=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,k0=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,U0=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,n0=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,J0=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,Y0=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,L0=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`,q0=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_v0 0.339
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_v1 0.276
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_v4 0.046
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_v5 0.016
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_v6 0.0038
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,d0=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,H0=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,l0=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,x0=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,f0=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,p0="gl_FragColor = linearToOutputTexel( gl_FragColor );",m0=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,O0=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,b0=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,u0=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,W0=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,T0=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,V0=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,Z0=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,X0=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,P0=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,j0=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,v0=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vUv2 );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,z0=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,_0=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,$0=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,AN=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( LEGACY_LIGHTS )
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#else
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,IN=`#if defined( USE_ENVMAP )
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
#endif`,gN=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,CN=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,BN=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,QN=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,EN=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULARINTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;
		#endif
		#ifdef USE_SPECULARCOLORMAP
			specularColorFactor *= texture2D( specularColorMap, vUv ).rgb;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEENCOLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEENROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;
	#endif
#endif`,iN=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	#ifdef USE_IRIDESCENCE
		reflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );
	#else
		reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,DN=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometry.viewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,oN=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,sN=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,wN=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,aN=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,GN=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,hN=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,KN=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,MN=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,NN=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,RN=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,yN=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,tN=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,FN=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,SN=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,eN=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,cN=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,rN=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * faceDirection;
			bitangent = bitangent * faceDirection;
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,kN=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,UN=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,nN=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,JN=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,YN=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );
		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );
	}
#endif`,LN=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,qN=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );
	#endif
#endif`,dN=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,HN=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,lN=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha + 0.1;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,xN=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,fN=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,pN=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,mN=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,ON=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,bN=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,uN=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,WN=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,TN=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,VN=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,ZN=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,XN=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,PN=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,jN=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,vN=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,zN=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,_N=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,$N=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,AR=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,IR=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmission = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmission.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmission.rgb, material.transmission );
#endif`,gR=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, vec2 fullSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		
		vec2 lodFudge = pow( 1.95, lod ) / fullSize;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec2 fullSize = vec2( textureSize( sampler, 0 ) );
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), fullSize, floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), fullSize, ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return radiance;
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
	}
#endif`,CR=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,BR=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,QR=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,ER=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,iR=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,DR=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,oR=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const sR=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,wR=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,aR=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,GR=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,hR=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,KR=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,MR=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,NR=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,RR=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,yR=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,tR=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,FR=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,SR=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,eR=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,cR=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,rR=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,kR=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,UR=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,nR=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,JR=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,YR=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,LR=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,qR=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,dR=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,HR=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,lR=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULARINTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
	#ifdef USE_SPECULARCOLORMAP
		uniform sampler2D specularColorMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEENCOLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEENROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,xR=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,fR=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,pR=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,mR=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,OR=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,bR=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,uR=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,WR=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,QI={alphamap_fragment:a0,alphamap_pars_fragment:G0,alphatest_fragment:h0,alphatest_pars_fragment:K0,aomap_fragment:M0,aomap_pars_fragment:N0,begin_vertex:R0,beginnormal_vertex:y0,bsdfs:t0,iridescence_fragment:F0,bumpmap_pars_fragment:S0,clipping_planes_fragment:e0,clipping_planes_pars_fragment:c0,clipping_planes_pars_vertex:r0,clipping_planes_vertex:k0,color_fragment:U0,color_pars_fragment:n0,color_pars_vertex:J0,color_vertex:Y0,common:L0,cube_uv_reflection_fragment:q0,defaultnormal_vertex:d0,displacementmap_pars_vertex:H0,displacementmap_vertex:l0,emissivemap_fragment:x0,emissivemap_pars_fragment:f0,encodings_fragment:p0,encodings_pars_fragment:m0,envmap_fragment:O0,envmap_common_pars_fragment:b0,envmap_pars_fragment:u0,envmap_pars_vertex:W0,envmap_physical_pars_fragment:IN,envmap_vertex:T0,fog_vertex:V0,fog_pars_vertex:Z0,fog_fragment:X0,fog_pars_fragment:P0,gradientmap_pars_fragment:j0,lightmap_fragment:v0,lightmap_pars_fragment:z0,lights_lambert_fragment:_0,lights_lambert_pars_fragment:$0,lights_pars_begin:AN,lights_toon_fragment:gN,lights_toon_pars_fragment:CN,lights_phong_fragment:BN,lights_phong_pars_fragment:QN,lights_physical_fragment:EN,lights_physical_pars_fragment:iN,lights_fragment_begin:DN,lights_fragment_maps:oN,lights_fragment_end:sN,logdepthbuf_fragment:wN,logdepthbuf_pars_fragment:aN,logdepthbuf_pars_vertex:GN,logdepthbuf_vertex:hN,map_fragment:KN,map_pars_fragment:MN,map_particle_fragment:NN,map_particle_pars_fragment:RN,metalnessmap_fragment:yN,metalnessmap_pars_fragment:tN,morphcolor_vertex:FN,morphnormal_vertex:SN,morphtarget_pars_vertex:eN,morphtarget_vertex:cN,normal_fragment_begin:rN,normal_fragment_maps:kN,normal_pars_fragment:UN,normal_pars_vertex:nN,normal_vertex:JN,normalmap_pars_fragment:YN,clearcoat_normal_fragment_begin:LN,clearcoat_normal_fragment_maps:qN,clearcoat_pars_fragment:dN,iridescence_pars_fragment:HN,output_fragment:lN,packing:xN,premultiplied_alpha_fragment:fN,project_vertex:pN,dithering_fragment:mN,dithering_pars_fragment:ON,roughnessmap_fragment:bN,roughnessmap_pars_fragment:uN,shadowmap_pars_fragment:WN,shadowmap_pars_vertex:TN,shadowmap_vertex:VN,shadowmask_pars_fragment:ZN,skinbase_vertex:XN,skinning_pars_vertex:PN,skinning_vertex:jN,skinnormal_vertex:vN,specularmap_fragment:zN,specularmap_pars_fragment:_N,tonemapping_fragment:$N,tonemapping_pars_fragment:AR,transmission_fragment:IR,transmission_pars_fragment:gR,uv_pars_fragment:CR,uv_pars_vertex:BR,uv_vertex:QR,uv2_pars_fragment:ER,uv2_pars_vertex:iR,uv2_vertex:DR,worldpos_vertex:oR,background_vert:sR,background_frag:wR,backgroundCube_vert:aR,backgroundCube_frag:GR,cube_vert:hR,cube_frag:KR,depth_vert:MR,depth_frag:NR,distanceRGBA_vert:RR,distanceRGBA_frag:yR,equirect_vert:tR,equirect_frag:FR,linedashed_vert:SR,linedashed_frag:eR,meshbasic_vert:cR,meshbasic_frag:rR,meshlambert_vert:kR,meshlambert_frag:UR,meshmatcap_vert:nR,meshmatcap_frag:JR,meshnormal_vert:YR,meshnormal_frag:LR,meshphong_vert:qR,meshphong_frag:dR,meshphysical_vert:HR,meshphysical_frag:lR,meshtoon_vert:xR,meshtoon_frag:fR,points_vert:pR,points_frag:mR,shadow_vert:OR,shadow_frag:bR,sprite_vert:uR,sprite_frag:WR},FA={common:{diffuse:{value:new YA(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new Ag},uv2Transform:{value:new Ag},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new DA(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new YA(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new YA(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Ag}},sprite:{diffuse:{value:new YA(16777215)},opacity:{value:1},center:{value:new DA(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Ag}}},Lg={basic:{uniforms:sg([FA.common,FA.specularmap,FA.envmap,FA.aomap,FA.lightmap,FA.fog]),vertexShader:QI.meshbasic_vert,fragmentShader:QI.meshbasic_frag},lambert:{uniforms:sg([FA.common,FA.specularmap,FA.envmap,FA.aomap,FA.lightmap,FA.emissivemap,FA.bumpmap,FA.normalmap,FA.displacementmap,FA.fog,FA.lights,{emissive:{value:new YA(0)}}]),vertexShader:QI.meshlambert_vert,fragmentShader:QI.meshlambert_frag},phong:{uniforms:sg([FA.common,FA.specularmap,FA.envmap,FA.aomap,FA.lightmap,FA.emissivemap,FA.bumpmap,FA.normalmap,FA.displacementmap,FA.fog,FA.lights,{emissive:{value:new YA(0)},specular:{value:new YA(1118481)},shininess:{value:30}}]),vertexShader:QI.meshphong_vert,fragmentShader:QI.meshphong_frag},standard:{uniforms:sg([FA.common,FA.envmap,FA.aomap,FA.lightmap,FA.emissivemap,FA.bumpmap,FA.normalmap,FA.displacementmap,FA.roughnessmap,FA.metalnessmap,FA.fog,FA.lights,{emissive:{value:new YA(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:QI.meshphysical_vert,fragmentShader:QI.meshphysical_frag},toon:{uniforms:sg([FA.common,FA.aomap,FA.lightmap,FA.emissivemap,FA.bumpmap,FA.normalmap,FA.displacementmap,FA.gradientmap,FA.fog,FA.lights,{emissive:{value:new YA(0)}}]),vertexShader:QI.meshtoon_vert,fragmentShader:QI.meshtoon_frag},matcap:{uniforms:sg([FA.common,FA.bumpmap,FA.normalmap,FA.displacementmap,FA.fog,{matcap:{value:null}}]),vertexShader:QI.meshmatcap_vert,fragmentShader:QI.meshmatcap_frag},points:{uniforms:sg([FA.points,FA.fog]),vertexShader:QI.points_vert,fragmentShader:QI.points_frag},dashed:{uniforms:sg([FA.common,FA.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:QI.linedashed_vert,fragmentShader:QI.linedashed_frag},depth:{uniforms:sg([FA.common,FA.displacementmap]),vertexShader:QI.depth_vert,fragmentShader:QI.depth_frag},normal:{uniforms:sg([FA.common,FA.bumpmap,FA.normalmap,FA.displacementmap,{opacity:{value:1}}]),vertexShader:QI.meshnormal_vert,fragmentShader:QI.meshnormal_frag},sprite:{uniforms:sg([FA.sprite,FA.fog]),vertexShader:QI.sprite_vert,fragmentShader:QI.sprite_frag},background:{uniforms:{uvTransform:{value:new Ag},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:QI.background_vert,fragmentShader:QI.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:QI.backgroundCube_vert,fragmentShader:QI.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:QI.cube_vert,fragmentShader:QI.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:QI.equirect_vert,fragmentShader:QI.equirect_frag},distanceRGBA:{uniforms:sg([FA.common,FA.displacementmap,{referencePosition:{value:new H},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:QI.distanceRGBA_vert,fragmentShader:QI.distanceRGBA_frag},shadow:{uniforms:sg([FA.lights,FA.fog,{color:{value:new YA(0)},opacity:{value:1}}]),vertexShader:QI.shadow_vert,fragmentShader:QI.shadow_frag}};Lg.physical={uniforms:sg([Lg.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new DA(1,1)},clearcoatNormalMap:{value:null},iridescence:{value:0},iridescenceMap:{value:null},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},sheen:{value:0},sheenColor:{value:new YA(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new DA},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new YA(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new YA(1,1,1)},specularColorMap:{value:null}}]),vertexShader:QI.meshphysical_vert,fragmentShader:QI.meshphysical_frag};const xE={r:0,b:0,g:0};function TR(s,e,t,n,o,a,r){const l=new YA(0);let d=a===!0?0:1,h,f,_=null,g=0,b=null;function w(v,T){let D=!1,C=T.isScene===!0?T.background:null;C&&C.isTexture&&(C=(T.backgroundBlurriness>0?t:e).get(C));const I=s.xr,N=I.getSession&&I.getSession();N&&N.environmentBlendMode==="additive"&&(C=null),C===null?x(l,d):C&&C.isColor&&(x(C,1),D=!0),(s.autoClear||D)&&s.clear(s.autoClearColor,s.autoClearDepth,s.autoClearStencil),C&&(C.isCubeTexture||C.mapping===bB)?(f===void 0&&(f=new zI(new UC(1,1,1),new ug({name:"BackgroundCubeMaterial",uniforms:mB(Lg.backgroundCube.uniforms),vertexShader:Lg.backgroundCube.vertexShader,fragmentShader:Lg.backgroundCube.fragmentShader,side:Gg,depthTest:!1,depthWrite:!1,fog:!1})),f.geometry.deleteAttribute("normal"),f.geometry.deleteAttribute("uv"),f.onBeforeRender=function(F,G,L){this.matrixWorld.copyPosition(L.matrixWorld)},Object.defineProperty(f.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),o.update(f)),f.material.uniforms.envMap.value=C,f.material.uniforms.flipEnvMap.value=C.isCubeTexture&&C.isRenderTargetTexture===!1?-1:1,f.material.uniforms.backgroundBlurriness.value=T.backgroundBlurriness,f.material.uniforms.backgroundIntensity.value=T.backgroundIntensity,f.material.toneMapped=C.encoding!==SI,(_!==C||g!==C.version||b!==s.toneMapping)&&(f.material.needsUpdate=!0,_=C,g=C.version,b=s.toneMapping),f.layers.enableAll(),v.unshift(f,f.geometry,f.material,0,0,null)):C&&C.isTexture&&(h===void 0&&(h=new zI(new CB(2,2),new ug({name:"BackgroundMaterial",uniforms:mB(Lg.background.uniforms),vertexShader:Lg.background.vertexShader,fragmentShader:Lg.background.fragmentShader,side:QC,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),Object.defineProperty(h.material,"map",{get:function(){return this.uniforms.t2D.value}}),o.update(h)),h.material.uniforms.t2D.value=C,h.material.uniforms.backgroundIntensity.value=T.backgroundIntensity,h.material.toneMapped=C.encoding!==SI,C.matrixAutoUpdate===!0&&C.updateMatrix(),h.material.uniforms.uvTransform.value.copy(C.matrix),(_!==C||g!==C.version||b!==s.toneMapping)&&(h.material.needsUpdate=!0,_=C,g=C.version,b=s.toneMapping),h.layers.enableAll(),v.unshift(h,h.geometry,h.material,0,0,null))}function x(v,T){v.getRGB(xE,Ih(s)),n.buffers.color.setClear(xE.r,xE.g,xE.b,T,r)}return{getClearColor:function(){return l},setClearColor:function(v,T=1){l.set(v),d=T,x(l,d)},getClearAlpha:function(){return d},setClearAlpha:function(v){d=v,x(l,d)},render:w}}function VR(s,e,t,n){const o=s.getParameter(34921),a=n.isWebGL2?null:e.get("OES_vertex_array_object"),r=n.isWebGL2||a!==null,l={},d=v(null);let h=d,f=!1;function _(q,ie,me,Q,K){let le=!1;if(r){const de=x(Q,me,ie);h!==de&&(h=de,b(h.object)),le=T(q,Q,me,K),le&&D(q,Q,me,K)}else{const de=ie.wireframe===!0;(h.geometry!==Q.id||h.program!==me.id||h.wireframe!==de)&&(h.geometry=Q.id,h.program=me.id,h.wireframe=de,le=!0)}K!==null&&t.update(K,34963),(le||f)&&(f=!1,L(q,ie,me,Q),K!==null&&s.bindBuffer(34963,t.get(K).buffer))}function g(){return n.isWebGL2?s.createVertexArray():a.createVertexArrayOES()}function b(q){return n.isWebGL2?s.bindVertexArray(q):a.bindVertexArrayOES(q)}function w(q){return n.isWebGL2?s.deleteVertexArray(q):a.deleteVertexArrayOES(q)}function x(q,ie,me){const Q=me.wireframe===!0;let K=l[q.id];K===void 0&&(K={},l[q.id]=K);let le=K[ie.id];le===void 0&&(le={},K[ie.id]=le);let de=le[Q];return de===void 0&&(de=v(g()),le[Q]=de),de}function v(q){const ie=[],me=[],Q=[];for(let K=0;K<o;K++)ie[K]=0,me[K]=0,Q[K]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:ie,enabledAttributes:me,attributeDivisors:Q,object:q,attributes:{},index:null}}function T(q,ie,me,Q){const K=h.attributes,le=ie.attributes;let de=0;const ve=me.getAttributes();for(const $ in ve)if(ve[$].location>=0){const z=K[$];let ne=le[$];if(ne===void 0&&($==="instanceMatrix"&&q.instanceMatrix&&(ne=q.instanceMatrix),$==="instanceColor"&&q.instanceColor&&(ne=q.instanceColor)),z===void 0||z.attribute!==ne||ne&&z.data!==ne.data)return!0;de++}return h.attributesNum!==de||h.index!==Q}function D(q,ie,me,Q){const K={},le=ie.attributes;let de=0;const ve=me.getAttributes();for(const $ in ve)if(ve[$].location>=0){let z=le[$];z===void 0&&($==="instanceMatrix"&&q.instanceMatrix&&(z=q.instanceMatrix),$==="instanceColor"&&q.instanceColor&&(z=q.instanceColor));const ne={};ne.attribute=z,z&&z.data&&(ne.data=z.data),K[$]=ne,de++}h.attributes=K,h.attributesNum=de,h.index=Q}function C(){const q=h.newAttributes;for(let ie=0,me=q.length;ie<me;ie++)q[ie]=0}function I(q){N(q,0)}function N(q,ie){const me=h.newAttributes,Q=h.enabledAttributes,K=h.attributeDivisors;me[q]=1,Q[q]===0&&(s.enableVertexAttribArray(q),Q[q]=1),K[q]!==ie&&((n.isWebGL2?s:e.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](q,ie),K[q]=ie)}function F(){const q=h.newAttributes,ie=h.enabledAttributes;for(let me=0,Q=ie.length;me<Q;me++)ie[me]!==q[me]&&(s.disableVertexAttribArray(me),ie[me]=0)}function G(q,ie,me,Q,K,le){n.isWebGL2===!0&&(me===5124||me===5125)?s.vertexAttribIPointer(q,ie,me,K,le):s.vertexAttribPointer(q,ie,me,Q,K,le)}function L(q,ie,me,Q){if(n.isWebGL2===!1&&(q.isInstancedMesh||Q.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;C();const K=Q.attributes,le=me.getAttributes(),de=ie.defaultAttributeValues;for(const ve in le){const $=le[ve];if($.location>=0){let z=K[ve];if(z===void 0&&(ve==="instanceMatrix"&&q.instanceMatrix&&(z=q.instanceMatrix),ve==="instanceColor"&&q.instanceColor&&(z=q.instanceColor)),z!==void 0){const ne=z.normalized,V=z.itemSize,ye=t.get(z);if(ye===void 0)continue;const Se=ye.buffer,Le=ye.type,De=ye.bytesPerElement;if(z.isInterleavedBufferAttribute){const Oe=z.data,ke=Oe.stride,Ve=z.offset;if(Oe.isInstancedInterleavedBuffer){for(let je=0;je<$.locationSize;je++)N($.location+je,Oe.meshPerAttribute);q.isInstancedMesh!==!0&&Q._maxInstanceCount===void 0&&(Q._maxInstanceCount=Oe.meshPerAttribute*Oe.count)}else for(let je=0;je<$.locationSize;je++)I($.location+je);s.bindBuffer(34962,Se);for(let je=0;je<$.locationSize;je++)G($.location+je,V/$.locationSize,Le,ne,ke*De,(Ve+V/$.locationSize*je)*De)}else{if(z.isInstancedBufferAttribute){for(let Oe=0;Oe<$.locationSize;Oe++)N($.location+Oe,z.meshPerAttribute);q.isInstancedMesh!==!0&&Q._maxInstanceCount===void 0&&(Q._maxInstanceCount=z.meshPerAttribute*z.count)}else for(let Oe=0;Oe<$.locationSize;Oe++)I($.location+Oe);s.bindBuffer(34962,Se);for(let Oe=0;Oe<$.locationSize;Oe++)G($.location+Oe,V/$.locationSize,Le,ne,V*De,V/$.locationSize*Oe*De)}}else if(de!==void 0){const ne=de[ve];if(ne!==void 0)switch(ne.length){case 2:s.vertexAttrib2fv($.location,ne);break;case 3:s.vertexAttrib3fv($.location,ne);break;case 4:s.vertexAttrib4fv($.location,ne);break;default:s.vertexAttrib1fv($.location,ne)}}}}F()}function B(){se();for(const q in l){const ie=l[q];for(const me in ie){const Q=ie[me];for(const K in Q)w(Q[K].object),delete Q[K];delete ie[me]}delete l[q]}}function W(q){if(l[q.id]===void 0)return;const ie=l[q.id];for(const me in ie){const Q=ie[me];for(const K in Q)w(Q[K].object),delete Q[K];delete ie[me]}delete l[q.id]}function oe(q){for(const ie in l){const me=l[ie];if(me[q.id]===void 0)continue;const Q=me[q.id];for(const K in Q)w(Q[K].object),delete Q[K];delete me[q.id]}}function se(){Y(),f=!0,h!==d&&(h=d,b(h.object))}function Y(){d.geometry=null,d.program=null,d.wireframe=!1}return{setup:_,reset:se,resetDefaultState:Y,dispose:B,releaseStatesOfGeometry:W,releaseStatesOfProgram:oe,initAttributes:C,enableAttribute:I,disableUnusedAttributes:F}}function ZR(s,e,t,n){const o=n.isWebGL2;let a;function r(h){a=h}function l(h,f){s.drawArrays(a,h,f),t.update(f,a,1)}function d(h,f,_){if(_===0)return;let g,b;if(o)g=s,b="drawArraysInstanced";else if(g=e.get("ANGLE_instanced_arrays"),b="drawArraysInstancedANGLE",g===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}g[b](a,h,f,_),t.update(f,a,_)}this.setMode=r,this.render=l,this.renderInstances=d}function XR(s,e,t){let n;function o(){if(n!==void 0)return n;if(e.has("EXT_texture_filter_anisotropic")===!0){const G=e.get("EXT_texture_filter_anisotropic");n=s.getParameter(G.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function a(G){if(G==="highp"){if(s.getShaderPrecisionFormat(35633,36338).precision>0&&s.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";G="mediump"}return G==="mediump"&&s.getShaderPrecisionFormat(35633,36337).precision>0&&s.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const r=typeof WebGL2RenderingContext<"u"&&s instanceof WebGL2RenderingContext;let l=t.precision!==void 0?t.precision:"highp";const d=a(l);d!==l&&(console.warn("THREE.WebGLRenderer:",l,"not supported, using",d,"instead."),l=d);const h=r||e.has("WEBGL_draw_buffers"),f=t.logarithmicDepthBuffer===!0,_=s.getParameter(34930),g=s.getParameter(35660),b=s.getParameter(3379),w=s.getParameter(34076),x=s.getParameter(34921),v=s.getParameter(36347),T=s.getParameter(36348),D=s.getParameter(36349),C=g>0,I=r||e.has("OES_texture_float"),N=C&&I,F=r?s.getParameter(36183):0;return{isWebGL2:r,drawBuffers:h,getMaxAnisotropy:o,getMaxPrecision:a,precision:l,logarithmicDepthBuffer:f,maxTextures:_,maxVertexTextures:g,maxTextureSize:b,maxCubemapSize:w,maxAttributes:x,maxVertexUniforms:v,maxVaryings:T,maxFragmentUniforms:D,vertexTextures:C,floatFragmentTextures:I,floatVertexTextures:N,maxSamples:F}}function PR(s){const e=this;let t=null,n=0,o=!1,a=!1;const r=new MC,l=new Ag,d={value:null,needsUpdate:!1};this.uniform=d,this.numPlanes=0,this.numIntersection=0,this.init=function(_,g){const b=_.length!==0||g||n!==0||o;return o=g,n=_.length,b},this.beginShadows=function(){a=!0,f(null)},this.endShadows=function(){a=!1},this.setGlobalState=function(_,g){t=f(_,g,0)},this.setState=function(_,g,b){const w=_.clippingPlanes,x=_.clipIntersection,v=_.clipShadows,T=s.get(_);if(!o||w===null||w.length===0||a&&!v)a?f(null):h();else{const D=a?0:n,C=D*4;let I=T.clippingState||null;d.value=I,I=f(w,g,C,b);for(let N=0;N!==C;++N)I[N]=t[N];T.clippingState=I,this.numIntersection=x?this.numPlanes:0,this.numPlanes+=D}};function h(){d.value!==t&&(d.value=t,d.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function f(_,g,b,w){const x=_!==null?_.length:0;let v=null;if(x!==0){if(v=d.value,w!==!0||v===null){const T=b+x*4,D=g.matrixWorldInverse;l.getNormalMatrix(D),(v===null||v.length<T)&&(v=new Float32Array(T));for(let C=0,I=b;C!==x;++C,I+=4)r.copy(_[C]).applyMatrix4(D,l),r.normal.toArray(v,I),v[I+3]=r.constant}d.value=v,d.needsUpdate=!0}return e.numPlanes=x,e.numIntersection=0,v}}function jR(s){let e=new WeakMap;function t(r,l){return l===yQ?r.mapping=tC:l===tQ&&(r.mapping=FC),r}function n(r){if(r&&r.isTexture&&r.isRenderTargetTexture===!1){const l=r.mapping;if(l===yQ||l===tQ)if(e.has(r)){const d=e.get(r).texture;return t(d,r.mapping)}else{const d=r.image;if(d&&d.height>0){const h=new Bh(d.height/2);return h.fromEquirectangularTexture(s,r),e.set(r,h),r.addEventListener("dispose",o),t(h.texture,r.mapping)}else return null}}return r}function o(r){const l=r.target;l.removeEventListener("dispose",o);const d=e.get(l);d!==void 0&&(e.delete(l),d.dispose())}function a(){e=new WeakMap}return{get:n,dispose:a}}class OQ extends Fi{constructor(e=-1,t=1,n=1,o=-1,a=.1,r=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=o,this.near=a,this.far=r,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,o,a,r){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=o,this.view.width=a,this.view.height=r,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,o=(this.top+this.bottom)/2;let a=n-e,r=n+e,l=o+t,d=o-t;if(this.view!==null&&this.view.enabled){const h=(this.right-this.left)/this.view.fullWidth/this.zoom,f=(this.top-this.bottom)/this.view.fullHeight/this.zoom;a+=h*this.view.offsetX,r=a+h*this.view.width,l-=f*this.view.offsetY,d=l-f*this.view.height}this.projectionMatrix.makeOrthographic(a,r,l,d,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}const qB=4,Vw=[.125,.215,.35,.446,.526,.582],uC=20,GD=new OQ,Zw=new YA;let hD=null;const OC=(1+Math.sqrt(5))/2,rB=1/OC,Xw=[new H(1,1,1),new H(-1,1,1),new H(1,1,-1),new H(-1,1,-1),new H(0,OC,rB),new H(0,OC,-rB),new H(rB,0,OC),new H(-rB,0,OC),new H(OC,rB,0),new H(-OC,rB,0)];class Qo{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,o=100){hD=this._renderer.getRenderTarget(),this._setSize(256);const a=this._allocateTargets();return a.depthBuffer=!0,this._sceneToCubeUV(e,n,o,a),t>0&&this._blur(a,0,0,t),this._applyPMREM(a),this._cleanup(a),a}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=vw(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=jw(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(hD),e.scissorTest=!1,fE(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===tC||e.mapping===FC?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),hD=this._renderer.getRenderTarget();const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:mI,minFilter:mI,generateMipmaps:!1,type:fB,format:Ng,encoding:cC,depthBuffer:!1},o=Pw(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=Pw(e,t,n);const{_lodMax:a}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=vR(a)),this._blurMaterial=zR(a,e,t)}return o}_compileMaterial(e){const t=new zI(this._lodPlanes[0],e);this._renderer.compile(t,GD)}_sceneToCubeUV(e,t,n,o){const a=new $I(90,1,t,n),r=[1,-1,1,1,1,1],l=[1,1,1,-1,-1,-1],d=this._renderer,h=d.autoClear,f=d.toneMapping;d.getClearColor(Zw),d.toneMapping=Og,d.autoClear=!1;const _=new iC({name:"PMREM.Background",side:Gg,depthWrite:!1,depthTest:!1}),g=new zI(new UC,_);let b=!1;const w=e.background;w?w.isColor&&(_.color.copy(w),e.background=null,b=!0):(_.color.copy(Zw),b=!0);for(let x=0;x<6;x++){const v=x%3;v===0?(a.up.set(0,r[x],0),a.lookAt(l[x],0,0)):v===1?(a.up.set(0,0,r[x]),a.lookAt(0,l[x],0)):(a.up.set(0,r[x],0),a.lookAt(0,0,l[x]));const T=this._cubeSize;fE(o,v*T,x>2?T:0,T,T),d.setRenderTarget(o),b&&d.render(g,a),d.render(e,a)}g.geometry.dispose(),g.material.dispose(),d.toneMapping=f,d.autoClear=h,e.background=w}_textureToCubeUV(e,t){const n=this._renderer,o=e.mapping===tC||e.mapping===FC;o?(this._cubemapMaterial===null&&(this._cubemapMaterial=vw()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=jw());const a=o?this._cubemapMaterial:this._equirectMaterial,r=new zI(this._lodPlanes[0],a),l=a.uniforms;l.envMap.value=e;const d=this._cubeSize;fE(t,0,0,3*d,2*d),n.setRenderTarget(t),n.render(r,GD)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let o=1;o<this._lodPlanes.length;o++){const a=Math.sqrt(this._sigmas[o]*this._sigmas[o]-this._sigmas[o-1]*this._sigmas[o-1]),r=Xw[(o-1)%Xw.length];this._blur(e,o-1,o,a,r)}t.autoClear=n}_blur(e,t,n,o,a){const r=this._pingPongRenderTarget;this._halfBlur(e,r,t,n,o,"latitudinal",a),this._halfBlur(r,e,n,n,o,"longitudinal",a)}_halfBlur(e,t,n,o,a,r,l){const d=this._renderer,h=this._blurMaterial;r!=="latitudinal"&&r!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const f=3,_=new zI(this._lodPlanes[o],h),g=h.uniforms,b=this._sizeLods[n]-1,w=isFinite(a)?Math.PI/(2*b):2*Math.PI/(2*uC-1),x=a/w,v=isFinite(a)?1+Math.floor(f*x):uC;v>uC&&console.warn(`sigmaRadians, ${a}, is too large and will clip, as it requested ${v} samples when the maximum is set to ${uC}`);const T=[];let D=0;for(let G=0;G<uC;++G){const L=G/x,B=Math.exp(-L*L/2);T.push(B),G===0?D+=B:G<v&&(D+=2*B)}for(let G=0;G<T.length;G++)T[G]=T[G]/D;g.envMap.value=e.texture,g.samples.value=v,g.weights.value=T,g.latitudinal.value=r==="latitudinal",l&&(g.poleAxis.value=l);const{_lodMax:C}=this;g.dTheta.value=w,g.mipInt.value=C-n;const I=this._sizeLods[o],N=3*I*(o>C-qB?o-C+qB:0),F=4*(this._cubeSize-I);fE(t,N,F,3*I,2*I),d.setRenderTarget(t),d.render(_,GD)}}function vR(s){const e=[],t=[],n=[];let o=s;const a=s-qB+1+Vw.length;for(let r=0;r<a;r++){const l=Math.pow(2,o);t.push(l);let d=1/l;r>s-qB?d=Vw[r-s+qB-1]:r===0&&(d=0),n.push(d);const h=1/(l-2),f=-h,_=1+h,g=[f,f,_,f,_,_,f,f,_,_,f,_],b=6,w=6,x=3,v=2,T=1,D=new Float32Array(x*w*b),C=new Float32Array(v*w*b),I=new Float32Array(T*w*b);for(let F=0;F<b;F++){const G=F%3*2/3-1,L=F>2?0:-1,B=[G,L,0,G+2/3,L,0,G+2/3,L+1,0,G,L,0,G+2/3,L+1,0,G,L+1,0];D.set(B,x*w*F),C.set(g,v*w*F);const W=[F,F,F,F,F,F];I.set(W,T*w*F)}const N=new EI;N.setAttribute("position",new tI(D,x)),N.setAttribute("uv",new tI(C,v)),N.setAttribute("faceIndex",new tI(I,T)),e.push(N),o>qB&&o--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function Pw(s,e,t){const n=new qg(s,e,t);return n.texture.mapping=bB,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function fE(s,e,t,n,o){s.viewport.set(e,t,n,o),s.scissor.set(e,t,n,o)}function zR(s,e,t){const n=new Float32Array(uC),o=new H(0,1,0);return new ug({name:"SphericalGaussianBlur",defines:{n:uC,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${s}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:o}},vertexShader:ko(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:BC,depthTest:!1,depthWrite:!1})}function jw(){return new ug({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:ko(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:BC,depthTest:!1,depthWrite:!1})}function vw(){return new ug({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:ko(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:BC,depthTest:!1,depthWrite:!1})}function ko(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function _R(s){let e=new WeakMap,t=null;function n(l){if(l&&l.isTexture){const d=l.mapping,h=d===yQ||d===tQ,f=d===tC||d===FC;if(h||f)if(l.isRenderTargetTexture&&l.needsPMREMUpdate===!0){l.needsPMREMUpdate=!1;let _=e.get(l);return t===null&&(t=new Qo(s)),_=h?t.fromEquirectangular(l,_):t.fromCubemap(l,_),e.set(l,_),_.texture}else{if(e.has(l))return e.get(l).texture;{const _=l.image;if(h&&_&&_.height>0||f&&_&&o(_)){t===null&&(t=new Qo(s));const g=h?t.fromEquirectangular(l):t.fromCubemap(l);return e.set(l,g),l.addEventListener("dispose",a),g.texture}else return null}}}return l}function o(l){let d=0;const h=6;for(let f=0;f<h;f++)l[f]!==void 0&&d++;return d===h}function a(l){const d=l.target;d.removeEventListener("dispose",a);const h=e.get(d);h!==void 0&&(e.delete(d),h.dispose())}function r(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:r}}function $R(s){const e={};function t(n){if(e[n]!==void 0)return e[n];let o;switch(n){case"WEBGL_depth_texture":o=s.getExtension("WEBGL_depth_texture")||s.getExtension("MOZ_WEBGL_depth_texture")||s.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":o=s.getExtension("EXT_texture_filter_anisotropic")||s.getExtension("MOZ_EXT_texture_filter_anisotropic")||s.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":o=s.getExtension("WEBGL_compressed_texture_s3tc")||s.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":o=s.getExtension("WEBGL_compressed_texture_pvrtc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:o=s.getExtension(n)}return e[n]=o,o}return{has:function(n){return t(n)!==null},init:function(n){n.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(n){const o=t(n);return o===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),o}}}function Ay(s,e,t,n){const o={},a=new WeakMap;function r(_){const g=_.target;g.index!==null&&e.remove(g.index);for(const w in g.attributes)e.remove(g.attributes[w]);g.removeEventListener("dispose",r),delete o[g.id];const b=a.get(g);b&&(e.remove(b),a.delete(g)),n.releaseStatesOfGeometry(g),g.isInstancedBufferGeometry===!0&&delete g._maxInstanceCount,t.memory.geometries--}function l(_,g){return o[g.id]===!0||(g.addEventListener("dispose",r),o[g.id]=!0,t.memory.geometries++),g}function d(_){const g=_.attributes;for(const w in g)e.update(g[w],34962);const b=_.morphAttributes;for(const w in b){const x=b[w];for(let v=0,T=x.length;v<T;v++)e.update(x[v],34962)}}function h(_){const g=[],b=_.index,w=_.attributes.position;let x=0;if(b!==null){const D=b.array;x=b.version;for(let C=0,I=D.length;C<I;C+=3){const N=D[C+0],F=D[C+1],G=D[C+2];g.push(N,F,F,G,G,N)}}else{const D=w.array;x=w.version;for(let C=0,I=D.length/3-1;C<I;C+=3){const N=C+0,F=C+1,G=C+2;g.push(N,F,F,G,G,N)}}const v=new($G(g)?ro:co)(g,1);v.version=x;const T=a.get(_);T&&e.remove(T),a.set(_,v)}function f(_){const g=a.get(_);if(g){const b=_.index;b!==null&&g.version<b.version&&h(_)}else h(_);return a.get(_)}return{get:l,update:d,getWireframeAttribute:f}}function Iy(s,e,t,n){const o=n.isWebGL2;let a;function r(g){a=g}let l,d;function h(g){l=g.type,d=g.bytesPerElement}function f(g,b){s.drawElements(a,b,l,g*d),t.update(b,a,1)}function _(g,b,w){if(w===0)return;let x,v;if(o)x=s,v="drawElementsInstanced";else if(x=e.get("ANGLE_instanced_arrays"),v="drawElementsInstancedANGLE",x===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}x[v](a,b,l,g*d,w),t.update(b,a,w)}this.setMode=r,this.setIndex=h,this.render=f,this.renderInstances=_}function gy(s){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(a,r,l){switch(t.calls++,r){case 4:t.triangles+=l*(a/3);break;case 1:t.lines+=l*(a/2);break;case 3:t.lines+=l*(a-1);break;case 2:t.lines+=l*a;break;case 0:t.points+=l*a;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",r);break}}function o(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:o,update:n}}function Cy(s,e){return s[0]-e[0]}function By(s,e){return Math.abs(e[1])-Math.abs(s[1])}function Qy(s,e,t){const n={},o=new Float32Array(8),a=new WeakMap,r=new KI,l=[];for(let h=0;h<8;h++)l[h]=[h,0];function d(h,f,_){const g=h.morphTargetInfluences;if(e.isWebGL2===!0){const b=f.morphAttributes.position||f.morphAttributes.normal||f.morphAttributes.color,w=b!==void 0?b.length:0;let x=a.get(f);if(x===void 0||x.count!==w){let D=function(){Y.dispose(),a.delete(f),f.removeEventListener("dispose",D)};x!==void 0&&x.texture.dispose();const C=f.morphAttributes.position!==void 0,I=f.morphAttributes.normal!==void 0,N=f.morphAttributes.color!==void 0,F=f.morphAttributes.position||[],G=f.morphAttributes.normal||[],L=f.morphAttributes.color||[];let B=0;C===!0&&(B=1),I===!0&&(B=2),N===!0&&(B=3);let W=f.attributes.position.count*B,oe=1;W>e.maxTextureSize&&(oe=Math.ceil(W/e.maxTextureSize),W=e.maxTextureSize);const se=new Float32Array(W*oe*4*w),Y=new yi(se,W,oe,w);Y.type=IC,Y.needsUpdate=!0;const q=B*4;for(let ie=0;ie<w;ie++){const me=F[ie],Q=G[ie],K=L[ie],le=W*oe*4*ie;for(let de=0;de<me.count;de++){const ve=de*q;C===!0&&(r.fromBufferAttribute(me,de),se[le+ve+0]=r.x,se[le+ve+1]=r.y,se[le+ve+2]=r.z,se[le+ve+3]=0),I===!0&&(r.fromBufferAttribute(Q,de),se[le+ve+4]=r.x,se[le+ve+5]=r.y,se[le+ve+6]=r.z,se[le+ve+7]=0),N===!0&&(r.fromBufferAttribute(K,de),se[le+ve+8]=r.x,se[le+ve+9]=r.y,se[le+ve+10]=r.z,se[le+ve+11]=K.itemSize===4?r.w:1)}}x={count:w,texture:Y,size:new DA(W,oe)},a.set(f,x),f.addEventListener("dispose",D)}let v=0;for(let D=0;D<g.length;D++)v+=g[D];const T=f.morphTargetsRelative?1:1-v;_.getUniforms().setValue(s,"morphTargetBaseInfluence",T),_.getUniforms().setValue(s,"morphTargetInfluences",g),_.getUniforms().setValue(s,"morphTargetsTexture",x.texture,t),_.getUniforms().setValue(s,"morphTargetsTextureSize",x.size)}else{const b=g===void 0?0:g.length;let w=n[f.id];if(w===void 0||w.length!==b){w=[];for(let C=0;C<b;C++)w[C]=[C,0];n[f.id]=w}for(let C=0;C<b;C++){const I=w[C];I[0]=C,I[1]=g[C]}w.sort(By);for(let C=0;C<8;C++)C<b&&w[C][1]?(l[C][0]=w[C][0],l[C][1]=w[C][1]):(l[C][0]=Number.MAX_SAFE_INTEGER,l[C][1]=0);l.sort(Cy);const x=f.morphAttributes.position,v=f.morphAttributes.normal;let T=0;for(let C=0;C<8;C++){const I=l[C],N=I[0],F=I[1];N!==Number.MAX_SAFE_INTEGER&&F?(x&&f.getAttribute("morphTarget"+C)!==x[N]&&f.setAttribute("morphTarget"+C,x[N]),v&&f.getAttribute("morphNormal"+C)!==v[N]&&f.setAttribute("morphNormal"+C,v[N]),o[C]=F,T+=F):(x&&f.hasAttribute("morphTarget"+C)===!0&&f.deleteAttribute("morphTarget"+C),v&&f.hasAttribute("morphNormal"+C)===!0&&f.deleteAttribute("morphNormal"+C),o[C]=0)}const D=f.morphTargetsRelative?1:1-T;_.getUniforms().setValue(s,"morphTargetBaseInfluence",D),_.getUniforms().setValue(s,"morphTargetInfluences",o)}}return{update:d}}function Ey(s,e,t,n){let o=new WeakMap;function a(d){const h=n.render.frame,f=d.geometry,_=e.get(d,f);return o.get(_)!==h&&(e.update(_),o.set(_,h)),d.isInstancedMesh&&(d.hasEventListener("dispose",l)===!1&&d.addEventListener("dispose",l),t.update(d.instanceMatrix,34962),d.instanceColor!==null&&t.update(d.instanceColor,34962)),_}function r(){o=new WeakMap}function l(d){const h=d.target;h.removeEventListener("dispose",l),t.remove(h.instanceMatrix),h.instanceColor!==null&&t.remove(h.instanceColor)}return{update:a,dispose:r}}const Eh=new bI,ih=new yi,Dh=new eo,oh=new mQ,zw=[],_w=[],$w=new Float32Array(16),Aa=new Float32Array(9),Ia=new Float32Array(4);function WB(s,e,t){const n=s[0];if(n<=0||n>0)return s;const o=e*t;let a=zw[o];if(a===void 0&&(a=new Float32Array(o),zw[o]=a),e!==0){n.toArray(a,0);for(let r=1,l=0;r!==e;++r)l+=t,s[r].toArray(a,l)}return a}function XI(s,e){if(s.length!==e.length)return!1;for(let t=0,n=s.length;t<n;t++)if(s[t]!==e[t])return!1;return!0}function PI(s,e){for(let t=0,n=e.length;t<n;t++)s[t]=e[t]}function ei(s,e){let t=_w[e];t===void 0&&(t=new Int32Array(e),_w[e]=t);for(let n=0;n!==e;++n)t[n]=s.allocateTextureUnit();return t}function iy(s,e){const t=this.cache;t[0]!==e&&(s.uniform1f(this.addr,e),t[0]=e)}function Dy(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(XI(t,e))return;s.uniform2fv(this.addr,e),PI(t,e)}}function oy(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(s.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(XI(t,e))return;s.uniform3fv(this.addr,e),PI(t,e)}}function sy(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(XI(t,e))return;s.uniform4fv(this.addr,e),PI(t,e)}}function wy(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(XI(t,e))return;s.uniformMatrix2fv(this.addr,!1,e),PI(t,e)}else{if(XI(t,n))return;Ia.set(n),s.uniformMatrix2fv(this.addr,!1,Ia),PI(t,n)}}function ay(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(XI(t,e))return;s.uniformMatrix3fv(this.addr,!1,e),PI(t,e)}else{if(XI(t,n))return;Aa.set(n),s.uniformMatrix3fv(this.addr,!1,Aa),PI(t,n)}}function Gy(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(XI(t,e))return;s.uniformMatrix4fv(this.addr,!1,e),PI(t,e)}else{if(XI(t,n))return;$w.set(n),s.uniformMatrix4fv(this.addr,!1,$w),PI(t,n)}}function hy(s,e){const t=this.cache;t[0]!==e&&(s.uniform1i(this.addr,e),t[0]=e)}function Ky(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(XI(t,e))return;s.uniform2iv(this.addr,e),PI(t,e)}}function My(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(XI(t,e))return;s.uniform3iv(this.addr,e),PI(t,e)}}function Ny(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(XI(t,e))return;s.uniform4iv(this.addr,e),PI(t,e)}}function Ry(s,e){const t=this.cache;t[0]!==e&&(s.uniform1ui(this.addr,e),t[0]=e)}function yy(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(XI(t,e))return;s.uniform2uiv(this.addr,e),PI(t,e)}}function ty(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(XI(t,e))return;s.uniform3uiv(this.addr,e),PI(t,e)}}function Fy(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(XI(t,e))return;s.uniform4uiv(this.addr,e),PI(t,e)}}function Sy(s,e,t){const n=this.cache,o=t.allocateTextureUnit();n[0]!==o&&(s.uniform1i(this.addr,o),n[0]=o),t.setTexture2D(e||Eh,o)}function ey(s,e,t){const n=this.cache,o=t.allocateTextureUnit();n[0]!==o&&(s.uniform1i(this.addr,o),n[0]=o),t.setTexture3D(e||Dh,o)}function cy(s,e,t){const n=this.cache,o=t.allocateTextureUnit();n[0]!==o&&(s.uniform1i(this.addr,o),n[0]=o),t.setTextureCube(e||oh,o)}function ry(s,e,t){const n=this.cache,o=t.allocateTextureUnit();n[0]!==o&&(s.uniform1i(this.addr,o),n[0]=o),t.setTexture2DArray(e||ih,o)}function ky(s){switch(s){case 5126:return iy;case 35664:return Dy;case 35665:return oy;case 35666:return sy;case 35674:return wy;case 35675:return ay;case 35676:return Gy;case 5124:case 35670:return hy;case 35667:case 35671:return Ky;case 35668:case 35672:return My;case 35669:case 35673:return Ny;case 5125:return Ry;case 36294:return yy;case 36295:return ty;case 36296:return Fy;case 35678:case 36198:case 36298:case 36306:case 35682:return Sy;case 35679:case 36299:case 36307:return ey;case 35680:case 36300:case 36308:case 36293:return cy;case 36289:case 36303:case 36311:case 36292:return ry}}function Uy(s,e){s.uniform1fv(this.addr,e)}function ny(s,e){const t=WB(e,this.size,2);s.uniform2fv(this.addr,t)}function Jy(s,e){const t=WB(e,this.size,3);s.uniform3fv(this.addr,t)}function Yy(s,e){const t=WB(e,this.size,4);s.uniform4fv(this.addr,t)}function Ly(s,e){const t=WB(e,this.size,4);s.uniformMatrix2fv(this.addr,!1,t)}function qy(s,e){const t=WB(e,this.size,9);s.uniformMatrix3fv(this.addr,!1,t)}function dy(s,e){const t=WB(e,this.size,16);s.uniformMatrix4fv(this.addr,!1,t)}function Hy(s,e){s.uniform1iv(this.addr,e)}function ly(s,e){s.uniform2iv(this.addr,e)}function xy(s,e){s.uniform3iv(this.addr,e)}function fy(s,e){s.uniform4iv(this.addr,e)}function py(s,e){s.uniform1uiv(this.addr,e)}function my(s,e){s.uniform2uiv(this.addr,e)}function Oy(s,e){s.uniform3uiv(this.addr,e)}function by(s,e){s.uniform4uiv(this.addr,e)}function uy(s,e,t){const n=this.cache,o=e.length,a=ei(t,o);XI(n,a)||(s.uniform1iv(this.addr,a),PI(n,a));for(let r=0;r!==o;++r)t.setTexture2D(e[r]||Eh,a[r])}function Wy(s,e,t){const n=this.cache,o=e.length,a=ei(t,o);XI(n,a)||(s.uniform1iv(this.addr,a),PI(n,a));for(let r=0;r!==o;++r)t.setTexture3D(e[r]||Dh,a[r])}function Ty(s,e,t){const n=this.cache,o=e.length,a=ei(t,o);XI(n,a)||(s.uniform1iv(this.addr,a),PI(n,a));for(let r=0;r!==o;++r)t.setTextureCube(e[r]||oh,a[r])}function Vy(s,e,t){const n=this.cache,o=e.length,a=ei(t,o);XI(n,a)||(s.uniform1iv(this.addr,a),PI(n,a));for(let r=0;r!==o;++r)t.setTexture2DArray(e[r]||ih,a[r])}function Zy(s){switch(s){case 5126:return Uy;case 35664:return ny;case 35665:return Jy;case 35666:return Yy;case 35674:return Ly;case 35675:return qy;case 35676:return dy;case 5124:case 35670:return Hy;case 35667:case 35671:return ly;case 35668:case 35672:return xy;case 35669:case 35673:return fy;case 5125:return py;case 36294:return my;case 36295:return Oy;case 36296:return by;case 35678:case 36198:case 36298:case 36306:case 35682:return uy;case 35679:case 36299:case 36307:return Wy;case 35680:case 36300:case 36308:case 36293:return Ty;case 36289:case 36303:case 36311:case 36292:return Vy}}class Xy{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.setValue=ky(t.type)}}class Py{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.size=t.size,this.setValue=Zy(t.type)}}class jy{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const o=this.seq;for(let a=0,r=o.length;a!==r;++a){const l=o[a];l.setValue(e,t[l.id],n)}}}const KD=/(\w+)(\])?(\[|\.)?/g;function ga(s,e){s.seq.push(e),s.map[e.id]=e}function vy(s,e,t){const n=s.name,o=n.length;for(KD.lastIndex=0;;){const a=KD.exec(n),r=KD.lastIndex;let l=a[1];const d=a[2]==="]",h=a[3];if(d&&(l=l|0),h===void 0||h==="["&&r+2===o){ga(t,h===void 0?new Xy(l,s,e):new Py(l,s,e));break}else{let f=t.map[l];f===void 0&&(f=new jy(l),ga(t,f)),t=f}}}class ai{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,35718);for(let o=0;o<n;++o){const a=e.getActiveUniform(t,o),r=e.getUniformLocation(t,a.name);vy(a,r,this)}}setValue(e,t,n,o){const a=this.map[t];a!==void 0&&a.setValue(e,n,o)}setOptional(e,t,n){const o=t[n];o!==void 0&&this.setValue(e,n,o)}static upload(e,t,n,o){for(let a=0,r=t.length;a!==r;++a){const l=t[a],d=n[l.id];d.needsUpdate!==!1&&l.setValue(e,d.value,o)}}static seqWithValue(e,t){const n=[];for(let o=0,a=e.length;o!==a;++o){const r=e[o];r.id in t&&n.push(r)}return n}}function Ca(s,e,t){const n=s.createShader(e);return s.shaderSource(n,t),s.compileShader(n),n}let zy=0;function _y$1(s,e){const t=s.split(`
`),n=[],o=Math.max(e-6,0),a=Math.min(e+6,t.length);for(let r=o;r<a;r++){const l=r+1;n.push(`${l===e?">":" "} ${l}: ${t[r]}`)}return n.join(`
`)}function $y(s){switch(s){case cC:return["Linear","( value )"];case SI:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",s),["Linear","( value )"]}}function Ba(s,e,t){const n=s.getShaderParameter(e,35713),o=s.getShaderInfoLog(e).trim();if(n&&o==="")return"";const a=/ERROR: 0:(\d+)/.exec(o);if(a){const r=parseInt(a[1]);return t.toUpperCase()+`

`+o+`

`+_y$1(s.getShaderSource(e),r)}else return o}function At(s,e){const t=$y(e);return"vec4 "+s+"( vec4 value ) { return LinearTo"+t[0]+t[1]+"; }"}function It(s,e){let t;switch(e){case cG:t="Linear";break;case rG:t="Reinhard";break;case kG:t="OptimizedCineon";break;case UG:t="ACESFilmic";break;case nG:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+s+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function gt(s){return[s.extensionDerivatives||s.envMapCubeUVHeight||s.bumpMap||s.tangentSpaceNormalMap||s.clearcoatNormalMap||s.flatShading||s.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(s.extensionFragDepth||s.logarithmicDepthBuffer)&&s.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",s.extensionDrawBuffers&&s.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(s.extensionShaderTextureLOD||s.envMap||s.transmission)&&s.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(hQ).join(`
`)}function Ct(s){const e=[];for(const t in s){const n=s[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function Bt(s,e){const t={},n=s.getProgramParameter(e,35721);for(let o=0;o<n;o++){const a=s.getActiveAttrib(e,o),r=a.name;let l=1;a.type===35674&&(l=2),a.type===35675&&(l=3),a.type===35676&&(l=4),t[r]={type:a.type,location:s.getAttribLocation(e,r),locationSize:l}}return t}function hQ(s){return s!==""}function Qa(s,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return s.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Ea(s,e){return s.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const Qt=/^[ \t]*#include +<([\w\d./]+)>/gm;function Eo(s){return s.replace(Qt,Et)}function Et(s,e){const t=QI[e];if(t===void 0)throw new Error("Can not resolve #include <"+e+">");return Eo(t)}const it=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function ia(s){return s.replace(it,Dt)}function Dt(s,e,t,n){let o="";for(let a=parseInt(e);a<parseInt(t);a++)o+=n.replace(/\[\s*i\s*\]/g,"[ "+a+" ]").replace(/UNROLLED_LOOP_INDEX/g,a);return o}function Da(s){let e="precision "+s.precision+` float;
precision `+s.precision+" int;";return s.precision==="highp"?e+=`
#define HIGH_PRECISION`:s.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:s.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function ot(s){let e="SHADOWMAP_TYPE_BASIC";return s.shadowMapType===ho?e="SHADOWMAP_TYPE_PCF":s.shadowMapType===gG?e="SHADOWMAP_TYPE_PCF_SOFT":s.shadowMapType===YB&&(e="SHADOWMAP_TYPE_VSM"),e}function st(s){let e="ENVMAP_TYPE_CUBE";if(s.envMap)switch(s.envMapMode){case tC:case FC:e="ENVMAP_TYPE_CUBE";break;case bB:e="ENVMAP_TYPE_CUBE_UV";break}return e}function wt(s){let e="ENVMAP_MODE_REFLECTION";if(s.envMap)switch(s.envMapMode){case FC:e="ENVMAP_MODE_REFRACTION";break}return e}function at(s){let e="ENVMAP_BLENDING_NONE";if(s.envMap)switch(s.combine){case fQ:e="ENVMAP_BLENDING_MULTIPLY";break;case SG:e="ENVMAP_BLENDING_MIX";break;case eG:e="ENVMAP_BLENDING_ADD";break}return e}function Gt(s){const e=s.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function ht(s,e,t,n){const o=s.getContext(),a=t.defines;let r=t.vertexShader,l=t.fragmentShader;const d=ot(t),h=st(t),f=wt(t),_=at(t),g=Gt(t),b=t.isWebGL2?"":gt(t),w=Ct(a),x=o.createProgram();let v,T,D=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(v=[w].filter(hQ).join(`
`),v.length>0&&(v+=`
`),T=[b,w].filter(hQ).join(`
`),T.length>0&&(T+=`
`)):(v=[Da(t),"#define SHADER_NAME "+t.shaderName,w,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.supportsVertexTextures?"#define VERTEX_TEXTURES":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+f:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.displacementMap&&t.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+d:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(hQ).join(`
`),T=[b,Da(t),"#define SHADER_NAME "+t.shaderName,w,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.envMap?"#define "+f:"",t.envMap?"#define "+_:"",g?"#define CUBEUV_TEXEL_WIDTH "+g.texelWidth:"",g?"#define CUBEUV_TEXEL_HEIGHT "+g.texelHeight:"",g?"#define CUBEUV_MAX_MIP "+g.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+d:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==Og?"#define TONE_MAPPING":"",t.toneMapping!==Og?QI.tonemapping_pars_fragment:"",t.toneMapping!==Og?It("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",QI.encodings_pars_fragment,At("linearToOutputTexel",t.outputEncoding),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(hQ).join(`
`)),r=Eo(r),r=Qa(r,t),r=Ea(r,t),l=Eo(l),l=Qa(l,t),l=Ea(l,t),r=ia(r),l=ia(l),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(D=`#version 300 es
`,v=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+v,T=["#define varying in",t.glslVersion===Co?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===Co?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+T);const C=D+v+r,I=D+T+l,N=Ca(o,35633,C),F=Ca(o,35632,I);if(o.attachShader(x,N),o.attachShader(x,F),t.index0AttributeName!==void 0?o.bindAttribLocation(x,0,t.index0AttributeName):t.morphTargets===!0&&o.bindAttribLocation(x,0,"position"),o.linkProgram(x),s.debug.checkShaderErrors){const B=o.getProgramInfoLog(x).trim(),W=o.getShaderInfoLog(N).trim(),oe=o.getShaderInfoLog(F).trim();let se=!0,Y=!0;if(o.getProgramParameter(x,35714)===!1){se=!1;const q=Ba(o,N,"vertex"),ie=Ba(o,F,"fragment");console.error("THREE.WebGLProgram: Shader Error "+o.getError()+" - VALIDATE_STATUS "+o.getProgramParameter(x,35715)+`

Program Info Log: `+B+`
`+q+`
`+ie)}else B!==""?console.warn("THREE.WebGLProgram: Program Info Log:",B):(W===""||oe==="")&&(Y=!1);Y&&(this.diagnostics={runnable:se,programLog:B,vertexShader:{log:W,prefix:v},fragmentShader:{log:oe,prefix:T}})}o.deleteShader(N),o.deleteShader(F);let G;this.getUniforms=function(){return G===void 0&&(G=new ai(o,x)),G};let L;return this.getAttributes=function(){return L===void 0&&(L=Bt(o,x)),L},this.destroy=function(){n.releaseStatesOfProgram(this),o.deleteProgram(x),this.program=void 0},this.name=t.shaderName,this.id=zy++,this.cacheKey=e,this.usedTimes=1,this.program=x,this.vertexShader=N,this.fragmentShader=F,this}let Kt=0;class Mt{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,o=this._getShaderStage(t),a=this._getShaderStage(n),r=this._getShaderCacheForMaterial(e);return r.has(o)===!1&&(r.add(o),o.usedTimes++),r.has(a)===!1&&(r.add(a),a.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return n===void 0&&(n=new Nt(e),t.set(e,n)),n}}class Nt{constructor(e){this.id=Kt++,this.code=e,this.usedTimes=0}}function Rt(s,e,t,n,o,a,r){const l=new ti,d=new Mt,h=[],f=o.isWebGL2,_=o.logarithmicDepthBuffer,g=o.vertexTextures;let b=o.precision;const w={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function x(L,B,W,oe,se){const Y=oe.fog,q=se.geometry,ie=L.isMeshStandardMaterial?oe.environment:null,me=(L.isMeshStandardMaterial?t:e).get(L.envMap||ie),Q=me&&me.mapping===bB?me.image.height:null,K=w[L.type];L.precision!==null&&(b=o.getMaxPrecision(L.precision),b!==L.precision&&console.warn("THREE.WebGLProgram.getParameters:",L.precision,"not supported, using",b,"instead."));const le=q.morphAttributes.position||q.morphAttributes.normal||q.morphAttributes.color,de=le!==void 0?le.length:0;let ve=0;q.morphAttributes.position!==void 0&&(ve=1),q.morphAttributes.normal!==void 0&&(ve=2),q.morphAttributes.color!==void 0&&(ve=3);let $,z,ne,V;if(K){const Oe=Lg[K];$=Oe.vertexShader,z=Oe.fragmentShader}else $=L.vertexShader,z=L.fragmentShader,d.update(L),ne=d.getVertexShaderID(L),V=d.getFragmentShaderID(L);const ye=s.getRenderTarget(),Se=L.alphaTest>0,Le=L.clearcoat>0,De=L.iridescence>0;return{isWebGL2:f,shaderID:K,shaderName:L.type,vertexShader:$,fragmentShader:z,defines:L.defines,customVertexShaderID:ne,customFragmentShaderID:V,isRawShaderMaterial:L.isRawShaderMaterial===!0,glslVersion:L.glslVersion,precision:b,instancing:se.isInstancedMesh===!0,instancingColor:se.isInstancedMesh===!0&&se.instanceColor!==null,supportsVertexTextures:g,outputEncoding:ye===null?s.outputEncoding:ye.isXRRenderTarget===!0?ye.texture.encoding:cC,map:!!L.map,matcap:!!L.matcap,envMap:!!me,envMapMode:me&&me.mapping,envMapCubeUVHeight:Q,lightMap:!!L.lightMap,aoMap:!!L.aoMap,emissiveMap:!!L.emissiveMap,bumpMap:!!L.bumpMap,normalMap:!!L.normalMap,objectSpaceNormalMap:L.normalMapType===jG,tangentSpaceNormalMap:L.normalMapType===kC,decodeVideoTexture:!!L.map&&L.map.isVideoTexture===!0&&L.map.encoding===SI,clearcoat:Le,clearcoatMap:Le&&!!L.clearcoatMap,clearcoatRoughnessMap:Le&&!!L.clearcoatRoughnessMap,clearcoatNormalMap:Le&&!!L.clearcoatNormalMap,iridescence:De,iridescenceMap:De&&!!L.iridescenceMap,iridescenceThicknessMap:De&&!!L.iridescenceThicknessMap,displacementMap:!!L.displacementMap,roughnessMap:!!L.roughnessMap,metalnessMap:!!L.metalnessMap,specularMap:!!L.specularMap,specularIntensityMap:!!L.specularIntensityMap,specularColorMap:!!L.specularColorMap,opaque:L.transparent===!1&&L.blending===XC,alphaMap:!!L.alphaMap,alphaTest:Se,gradientMap:!!L.gradientMap,sheen:L.sheen>0,sheenColorMap:!!L.sheenColorMap,sheenRoughnessMap:!!L.sheenRoughnessMap,transmission:L.transmission>0,transmissionMap:!!L.transmissionMap,thicknessMap:!!L.thicknessMap,combine:L.combine,vertexTangents:!!L.normalMap&&!!q.attributes.tangent,vertexColors:L.vertexColors,vertexAlphas:L.vertexColors===!0&&!!q.attributes.color&&q.attributes.color.itemSize===4,vertexUvs:!!L.map||!!L.bumpMap||!!L.normalMap||!!L.specularMap||!!L.alphaMap||!!L.emissiveMap||!!L.roughnessMap||!!L.metalnessMap||!!L.clearcoatMap||!!L.clearcoatRoughnessMap||!!L.clearcoatNormalMap||!!L.iridescenceMap||!!L.iridescenceThicknessMap||!!L.displacementMap||!!L.transmissionMap||!!L.thicknessMap||!!L.specularIntensityMap||!!L.specularColorMap||!!L.sheenColorMap||!!L.sheenRoughnessMap,uvsVertexOnly:!(L.map||L.bumpMap||L.normalMap||L.specularMap||L.alphaMap||L.emissiveMap||L.roughnessMap||L.metalnessMap||L.clearcoatNormalMap||L.iridescenceMap||L.iridescenceThicknessMap||L.transmission>0||L.transmissionMap||L.thicknessMap||L.specularIntensityMap||L.specularColorMap||L.sheen>0||L.sheenColorMap||L.sheenRoughnessMap)&&!!L.displacementMap,fog:!!Y,useFog:L.fog===!0,fogExp2:Y&&Y.isFogExp2,flatShading:!!L.flatShading,sizeAttenuation:L.sizeAttenuation,logarithmicDepthBuffer:_,skinning:se.isSkinnedMesh===!0,morphTargets:q.morphAttributes.position!==void 0,morphNormals:q.morphAttributes.normal!==void 0,morphColors:q.morphAttributes.color!==void 0,morphTargetsCount:de,morphTextureStride:ve,numDirLights:B.directional.length,numPointLights:B.point.length,numSpotLights:B.spot.length,numSpotLightMaps:B.spotLightMap.length,numRectAreaLights:B.rectArea.length,numHemiLights:B.hemi.length,numDirLightShadows:B.directionalShadowMap.length,numPointLightShadows:B.pointShadowMap.length,numSpotLightShadows:B.spotShadowMap.length,numSpotLightShadowsWithMaps:B.numSpotLightShadowsWithMaps,numClippingPlanes:r.numPlanes,numClipIntersection:r.numIntersection,dithering:L.dithering,shadowMapEnabled:s.shadowMap.enabled&&W.length>0,shadowMapType:s.shadowMap.type,toneMapping:L.toneMapped?s.toneMapping:Og,useLegacyLights:s.useLegacyLights,premultipliedAlpha:L.premultipliedAlpha,doubleSided:L.side===AC,flipSided:L.side===Gg,useDepthPacking:!!L.depthPacking,depthPacking:L.depthPacking||0,index0AttributeName:L.index0AttributeName,extensionDerivatives:L.extensions&&L.extensions.derivatives,extensionFragDepth:L.extensions&&L.extensions.fragDepth,extensionDrawBuffers:L.extensions&&L.extensions.drawBuffers,extensionShaderTextureLOD:L.extensions&&L.extensions.shaderTextureLOD,rendererExtensionFragDepth:f||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:f||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:f||n.has("EXT_shader_texture_lod"),customProgramCacheKey:L.customProgramCacheKey()}}function v(L){const B=[];if(L.shaderID?B.push(L.shaderID):(B.push(L.customVertexShaderID),B.push(L.customFragmentShaderID)),L.defines!==void 0)for(const W in L.defines)B.push(W),B.push(L.defines[W]);return L.isRawShaderMaterial===!1&&(T(B,L),D(B,L),B.push(s.outputEncoding)),B.push(L.customProgramCacheKey),B.join()}function T(L,B){L.push(B.precision),L.push(B.outputEncoding),L.push(B.envMapMode),L.push(B.envMapCubeUVHeight),L.push(B.combine),L.push(B.vertexUvs),L.push(B.fogExp2),L.push(B.sizeAttenuation),L.push(B.morphTargetsCount),L.push(B.morphAttributeCount),L.push(B.numDirLights),L.push(B.numPointLights),L.push(B.numSpotLights),L.push(B.numSpotLightMaps),L.push(B.numHemiLights),L.push(B.numRectAreaLights),L.push(B.numDirLightShadows),L.push(B.numPointLightShadows),L.push(B.numSpotLightShadows),L.push(B.numSpotLightShadowsWithMaps),L.push(B.shadowMapType),L.push(B.toneMapping),L.push(B.numClippingPlanes),L.push(B.numClipIntersection),L.push(B.depthPacking)}function D(L,B){l.disableAll(),B.isWebGL2&&l.enable(0),B.supportsVertexTextures&&l.enable(1),B.instancing&&l.enable(2),B.instancingColor&&l.enable(3),B.map&&l.enable(4),B.matcap&&l.enable(5),B.envMap&&l.enable(6),B.lightMap&&l.enable(7),B.aoMap&&l.enable(8),B.emissiveMap&&l.enable(9),B.bumpMap&&l.enable(10),B.normalMap&&l.enable(11),B.objectSpaceNormalMap&&l.enable(12),B.tangentSpaceNormalMap&&l.enable(13),B.clearcoat&&l.enable(14),B.clearcoatMap&&l.enable(15),B.clearcoatRoughnessMap&&l.enable(16),B.clearcoatNormalMap&&l.enable(17),B.iridescence&&l.enable(18),B.iridescenceMap&&l.enable(19),B.iridescenceThicknessMap&&l.enable(20),B.displacementMap&&l.enable(21),B.specularMap&&l.enable(22),B.roughnessMap&&l.enable(23),B.metalnessMap&&l.enable(24),B.gradientMap&&l.enable(25),B.alphaMap&&l.enable(26),B.alphaTest&&l.enable(27),B.vertexColors&&l.enable(28),B.vertexAlphas&&l.enable(29),B.vertexUvs&&l.enable(30),B.vertexTangents&&l.enable(31),B.uvsVertexOnly&&l.enable(32),L.push(l.mask),l.disableAll(),B.fog&&l.enable(0),B.useFog&&l.enable(1),B.flatShading&&l.enable(2),B.logarithmicDepthBuffer&&l.enable(3),B.skinning&&l.enable(4),B.morphTargets&&l.enable(5),B.morphNormals&&l.enable(6),B.morphColors&&l.enable(7),B.premultipliedAlpha&&l.enable(8),B.shadowMapEnabled&&l.enable(9),B.useLegacyLights&&l.enable(10),B.doubleSided&&l.enable(11),B.flipSided&&l.enable(12),B.useDepthPacking&&l.enable(13),B.dithering&&l.enable(14),B.specularIntensityMap&&l.enable(15),B.specularColorMap&&l.enable(16),B.transmission&&l.enable(17),B.transmissionMap&&l.enable(18),B.thicknessMap&&l.enable(19),B.sheen&&l.enable(20),B.sheenColorMap&&l.enable(21),B.sheenRoughnessMap&&l.enable(22),B.decodeVideoTexture&&l.enable(23),B.opaque&&l.enable(24),L.push(l.mask)}function C(L){const B=w[L.type];let W;if(B){const oe=Lg[B];W=gh.clone(oe.uniforms)}else W=L.uniforms;return W}function I(L,B){let W;for(let oe=0,se=h.length;oe<se;oe++){const Y=h[oe];if(Y.cacheKey===B){W=Y,++W.usedTimes;break}}return W===void 0&&(W=new ht(s,B,L,a),h.push(W)),W}function N(L){if(--L.usedTimes===0){const B=h.indexOf(L);h[B]=h[h.length-1],h.pop(),L.destroy()}}function F(L){d.remove(L)}function G(){d.dispose()}return{getParameters:x,getProgramCacheKey:v,getUniforms:C,acquireProgram:I,releaseProgram:N,releaseShaderCache:F,programs:h,dispose:G}}function yt(){let s=new WeakMap;function e(a){let r=s.get(a);return r===void 0&&(r={},s.set(a,r)),r}function t(a){s.delete(a)}function n(a,r,l){s.get(a)[r]=l}function o(){s=new WeakMap}return{get:e,remove:t,update:n,dispose:o}}function tt(s,e){return s.groupOrder!==e.groupOrder?s.groupOrder-e.groupOrder:s.renderOrder!==e.renderOrder?s.renderOrder-e.renderOrder:s.material.id!==e.material.id?s.material.id-e.material.id:s.z!==e.z?s.z-e.z:s.id-e.id}function oa(s,e){return s.groupOrder!==e.groupOrder?s.groupOrder-e.groupOrder:s.renderOrder!==e.renderOrder?s.renderOrder-e.renderOrder:s.z!==e.z?e.z-s.z:s.id-e.id}function sa(){const s=[];let e=0;const t=[],n=[],o=[];function a(){e=0,t.length=0,n.length=0,o.length=0}function r(_,g,b,w,x,v){let T=s[e];return T===void 0?(T={id:_.id,object:_,geometry:g,material:b,groupOrder:w,renderOrder:_.renderOrder,z:x,group:v},s[e]=T):(T.id=_.id,T.object=_,T.geometry=g,T.material=b,T.groupOrder=w,T.renderOrder=_.renderOrder,T.z=x,T.group=v),e++,T}function l(_,g,b,w,x,v){const T=r(_,g,b,w,x,v);b.transmission>0?n.push(T):b.transparent===!0?o.push(T):t.push(T)}function d(_,g,b,w,x,v){const T=r(_,g,b,w,x,v);b.transmission>0?n.unshift(T):b.transparent===!0?o.unshift(T):t.unshift(T)}function h(_,g){t.length>1&&t.sort(_||tt),n.length>1&&n.sort(g||oa),o.length>1&&o.sort(g||oa)}function f(){for(let _=e,g=s.length;_<g;_++){const b=s[_];if(b.id===null)break;b.id=null,b.object=null,b.geometry=null,b.material=null,b.group=null}}return{opaque:t,transmissive:n,transparent:o,init:a,push:l,unshift:d,finish:f,sort:h}}function Ft(){let s=new WeakMap;function e(n,o){const a=s.get(n);let r;return a===void 0?(r=new sa,s.set(n,[r])):o>=a.length?(r=new sa,a.push(r)):r=a[o],r}function t(){s=new WeakMap}return{get:e,dispose:t}}function St(){const s={};return{get:function(e){if(s[e.id]!==void 0)return s[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new H,color:new YA};break;case"SpotLight":t={position:new H,direction:new H,color:new YA,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new H,color:new YA,distance:0,decay:0};break;case"HemisphereLight":t={direction:new H,skyColor:new YA,groundColor:new YA};break;case"RectAreaLight":t={color:new YA,position:new H,halfWidth:new H,halfHeight:new H};break}return s[e.id]=t,t}}}function et(){const s={};return{get:function(e){if(s[e.id]!==void 0)return s[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new DA};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new DA};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new DA,shadowCameraNear:1,shadowCameraFar:1e3};break}return s[e.id]=t,t}}}let ct=0;function rt(s,e){return(e.castShadow?2:0)-(s.castShadow?2:0)+(e.map?1:0)-(s.map?1:0)}function kt(s,e){const t=new St,n=et(),o={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0};for(let f=0;f<9;f++)o.probe.push(new H);const a=new H,r=new gI,l=new gI;function d(f,_){let g=0,b=0,w=0;for(let oe=0;oe<9;oe++)o.probe[oe].set(0,0,0);let x=0,v=0,T=0,D=0,C=0,I=0,N=0,F=0,G=0,L=0;f.sort(rt);const B=_===!0?Math.PI:1;for(let oe=0,se=f.length;oe<se;oe++){const Y=f[oe],q=Y.color,ie=Y.intensity,me=Y.distance,Q=Y.shadow&&Y.shadow.map?Y.shadow.map.texture:null;if(Y.isAmbientLight)g+=q.r*ie*B,b+=q.g*ie*B,w+=q.b*ie*B;else if(Y.isLightProbe)for(let K=0;K<9;K++)o.probe[K].addScaledVector(Y.sh.coefficients[K],ie);else if(Y.isDirectionalLight){const K=t.get(Y);if(K.color.copy(Y.color).multiplyScalar(Y.intensity*B),Y.castShadow){const le=Y.shadow,de=n.get(Y);de.shadowBias=le.bias,de.shadowNormalBias=le.normalBias,de.shadowRadius=le.radius,de.shadowMapSize=le.mapSize,o.directionalShadow[x]=de,o.directionalShadowMap[x]=Q,o.directionalShadowMatrix[x]=Y.shadow.matrix,I++}o.directional[x]=K,x++}else if(Y.isSpotLight){const K=t.get(Y);K.position.setFromMatrixPosition(Y.matrixWorld),K.color.copy(q).multiplyScalar(ie*B),K.distance=me,K.coneCos=Math.cos(Y.angle),K.penumbraCos=Math.cos(Y.angle*(1-Y.penumbra)),K.decay=Y.decay,o.spot[T]=K;const le=Y.shadow;if(Y.map&&(o.spotLightMap[G]=Y.map,G++,le.updateMatrices(Y),Y.castShadow&&L++),o.spotLightMatrix[T]=le.matrix,Y.castShadow){const de=n.get(Y);de.shadowBias=le.bias,de.shadowNormalBias=le.normalBias,de.shadowRadius=le.radius,de.shadowMapSize=le.mapSize,o.spotShadow[T]=de,o.spotShadowMap[T]=Q,F++}T++}else if(Y.isRectAreaLight){const K=t.get(Y);K.color.copy(q).multiplyScalar(ie),K.halfWidth.set(Y.width*.5,0,0),K.halfHeight.set(0,Y.height*.5,0),o.rectArea[D]=K,D++}else if(Y.isPointLight){const K=t.get(Y);if(K.color.copy(Y.color).multiplyScalar(Y.intensity*B),K.distance=Y.distance,K.decay=Y.decay,Y.castShadow){const le=Y.shadow,de=n.get(Y);de.shadowBias=le.bias,de.shadowNormalBias=le.normalBias,de.shadowRadius=le.radius,de.shadowMapSize=le.mapSize,de.shadowCameraNear=le.camera.near,de.shadowCameraFar=le.camera.far,o.pointShadow[v]=de,o.pointShadowMap[v]=Q,o.pointShadowMatrix[v]=Y.shadow.matrix,N++}o.point[v]=K,v++}else if(Y.isHemisphereLight){const K=t.get(Y);K.skyColor.copy(Y.color).multiplyScalar(ie*B),K.groundColor.copy(Y.groundColor).multiplyScalar(ie*B),o.hemi[C]=K,C++}}D>0&&(e.isWebGL2||s.has("OES_texture_float_linear")===!0?(o.rectAreaLTC1=FA.LTC_FLOAT_1,o.rectAreaLTC2=FA.LTC_FLOAT_2):s.has("OES_texture_half_float_linear")===!0?(o.rectAreaLTC1=FA.LTC_HALF_1,o.rectAreaLTC2=FA.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),o.ambient[0]=g,o.ambient[1]=b,o.ambient[2]=w;const W=o.hash;(W.directionalLength!==x||W.pointLength!==v||W.spotLength!==T||W.rectAreaLength!==D||W.hemiLength!==C||W.numDirectionalShadows!==I||W.numPointShadows!==N||W.numSpotShadows!==F||W.numSpotMaps!==G)&&(o.directional.length=x,o.spot.length=T,o.rectArea.length=D,o.point.length=v,o.hemi.length=C,o.directionalShadow.length=I,o.directionalShadowMap.length=I,o.pointShadow.length=N,o.pointShadowMap.length=N,o.spotShadow.length=F,o.spotShadowMap.length=F,o.directionalShadowMatrix.length=I,o.pointShadowMatrix.length=N,o.spotLightMatrix.length=F+G-L,o.spotLightMap.length=G,o.numSpotLightShadowsWithMaps=L,W.directionalLength=x,W.pointLength=v,W.spotLength=T,W.rectAreaLength=D,W.hemiLength=C,W.numDirectionalShadows=I,W.numPointShadows=N,W.numSpotShadows=F,W.numSpotMaps=G,o.version=ct++)}function h(f,_){let g=0,b=0,w=0,x=0,v=0;const T=_.matrixWorldInverse;for(let D=0,C=f.length;D<C;D++){const I=f[D];if(I.isDirectionalLight){const N=o.directional[g];N.direction.setFromMatrixPosition(I.matrixWorld),a.setFromMatrixPosition(I.target.matrixWorld),N.direction.sub(a),N.direction.transformDirection(T),g++}else if(I.isSpotLight){const N=o.spot[w];N.position.setFromMatrixPosition(I.matrixWorld),N.position.applyMatrix4(T),N.direction.setFromMatrixPosition(I.matrixWorld),a.setFromMatrixPosition(I.target.matrixWorld),N.direction.sub(a),N.direction.transformDirection(T),w++}else if(I.isRectAreaLight){const N=o.rectArea[x];N.position.setFromMatrixPosition(I.matrixWorld),N.position.applyMatrix4(T),l.identity(),r.copy(I.matrixWorld),r.premultiply(T),l.extractRotation(r),N.halfWidth.set(I.width*.5,0,0),N.halfHeight.set(0,I.height*.5,0),N.halfWidth.applyMatrix4(l),N.halfHeight.applyMatrix4(l),x++}else if(I.isPointLight){const N=o.point[b];N.position.setFromMatrixPosition(I.matrixWorld),N.position.applyMatrix4(T),b++}else if(I.isHemisphereLight){const N=o.hemi[v];N.direction.setFromMatrixPosition(I.matrixWorld),N.direction.transformDirection(T),v++}}}return{setup:d,setupView:h,state:o}}function wa(s,e){const t=new kt(s,e),n=[],o=[];function a(){n.length=0,o.length=0}function r(f){n.push(f)}function l(f){o.push(f)}function d(f){t.setup(n,f)}function h(f){t.setupView(n,f)}return{init:a,state:{lightsArray:n,shadowsArray:o,lights:t},setupLights:d,setupLightsView:h,pushLight:r,pushShadow:l}}function Ut(s,e){let t=new WeakMap;function n(a,r=0){const l=t.get(a);let d;return l===void 0?(d=new wa(s,e),t.set(a,[d])):r>=l.length?(d=new wa(s,e),l.push(d)):d=l[r],d}function o(){t=new WeakMap}return{get:n,dispose:o}}class Uo extends Eg{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=XG,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class no extends Eg{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.referencePosition=new H,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const nt=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,Jt=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function Yt(s,e,t){let n=new Si;const o=new DA,a=new DA,r=new KI,l=new Uo({depthPacking:PG}),d=new no,h={},f=t.maxTextureSize,_={[QC]:Gg,[Gg]:QC,[AC]:AC},g=new ug({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new DA},radius:{value:4}},vertexShader:nt,fragmentShader:Jt}),b=g.clone();b.defines.HORIZONTAL_PASS=1;const w=new EI;w.setAttribute("position",new tI(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const x=new zI(w,g),v=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=ho,this.render=function(I,N,F){if(v.enabled===!1||v.autoUpdate===!1&&v.needsUpdate===!1||I.length===0)return;const G=s.getRenderTarget(),L=s.getActiveCubeFace(),B=s.getActiveMipmapLevel(),W=s.state;W.setBlending(BC),W.buffers.color.setClear(1,1,1,1),W.buffers.depth.setTest(!0),W.setScissorTest(!1);for(let oe=0,se=I.length;oe<se;oe++){const Y=I[oe],q=Y.shadow;if(q===void 0){console.warn("THREE.WebGLShadowMap:",Y,"has no shadow.");continue}if(q.autoUpdate===!1&&q.needsUpdate===!1)continue;o.copy(q.mapSize);const ie=q.getFrameExtents();if(o.multiply(ie),a.copy(q.mapSize),(o.x>f||o.y>f)&&(o.x>f&&(a.x=Math.floor(f/ie.x),o.x=a.x*ie.x,q.mapSize.x=a.x),o.y>f&&(a.y=Math.floor(f/ie.y),o.y=a.y*ie.y,q.mapSize.y=a.y)),q.map===null){const Q=this.type!==YB?{minFilter:pI,magFilter:pI}:{};q.map=new qg(o.x,o.y,Q),q.map.texture.name=Y.name+".shadowMap",q.camera.updateProjectionMatrix()}s.setRenderTarget(q.map),s.clear();const me=q.getViewportCount();for(let Q=0;Q<me;Q++){const K=q.getViewport(Q);r.set(a.x*K.x,a.y*K.y,a.x*K.z,a.y*K.w),W.viewport(r),q.updateMatrices(Y,Q),n=q.getFrustum(),C(N,F,q.camera,Y,this.type)}q.isPointLightShadow!==!0&&this.type===YB&&T(q,F),q.needsUpdate=!1}v.needsUpdate=!1,s.setRenderTarget(G,L,B)};function T(I,N){const F=e.update(x);g.defines.VSM_SAMPLES!==I.blurSamples&&(g.defines.VSM_SAMPLES=I.blurSamples,b.defines.VSM_SAMPLES=I.blurSamples,g.needsUpdate=!0,b.needsUpdate=!0),I.mapPass===null&&(I.mapPass=new qg(o.x,o.y)),g.uniforms.shadow_pass.value=I.map.texture,g.uniforms.resolution.value=I.mapSize,g.uniforms.radius.value=I.radius,s.setRenderTarget(I.mapPass),s.clear(),s.renderBufferDirect(N,null,F,g,x,null),b.uniforms.shadow_pass.value=I.mapPass.texture,b.uniforms.resolution.value=I.mapSize,b.uniforms.radius.value=I.radius,s.setRenderTarget(I.map),s.clear(),s.renderBufferDirect(N,null,F,b,x,null)}function D(I,N,F,G,L,B){let W=null;const oe=F.isPointLight===!0?I.customDistanceMaterial:I.customDepthMaterial;if(oe!==void 0)W=oe;else if(W=F.isPointLight===!0?d:l,s.localClippingEnabled&&N.clipShadows===!0&&Array.isArray(N.clippingPlanes)&&N.clippingPlanes.length!==0||N.displacementMap&&N.displacementScale!==0||N.alphaMap&&N.alphaTest>0||N.map&&N.alphaTest>0){const se=W.uuid,Y=N.uuid;let q=h[se];q===void 0&&(q={},h[se]=q);let ie=q[Y];ie===void 0&&(ie=W.clone(),q[Y]=ie),W=ie}return W.visible=N.visible,W.wireframe=N.wireframe,B===YB?W.side=N.shadowSide!==null?N.shadowSide:N.side:W.side=N.shadowSide!==null?N.shadowSide:_[N.side],W.alphaMap=N.alphaMap,W.alphaTest=N.alphaTest,W.map=N.map,W.clipShadows=N.clipShadows,W.clippingPlanes=N.clippingPlanes,W.clipIntersection=N.clipIntersection,W.displacementMap=N.displacementMap,W.displacementScale=N.displacementScale,W.displacementBias=N.displacementBias,W.wireframeLinewidth=N.wireframeLinewidth,W.linewidth=N.linewidth,F.isPointLight===!0&&W.isMeshDistanceMaterial===!0&&(W.referencePosition.setFromMatrixPosition(F.matrixWorld),W.nearDistance=G,W.farDistance=L),W}function C(I,N,F,G,L){if(I.visible===!1)return;if(I.layers.test(N.layers)&&(I.isMesh||I.isLine||I.isPoints)&&(I.castShadow||I.receiveShadow&&L===YB)&&(!I.frustumCulled||n.intersectsObject(I))){I.modelViewMatrix.multiplyMatrices(F.matrixWorldInverse,I.matrixWorld);const W=e.update(I),oe=I.material;if(Array.isArray(oe)){const se=W.groups;for(let Y=0,q=se.length;Y<q;Y++){const ie=se[Y],me=oe[ie.materialIndex];if(me&&me.visible){const Q=D(I,me,G,F.near,F.far,L);s.renderBufferDirect(F,null,W,Q,I,ie)}}}else if(oe.visible){const se=D(I,oe,G,F.near,F.far,L);s.renderBufferDirect(F,null,W,se,I,null)}}const B=I.children;for(let W=0,oe=B.length;W<oe;W++)C(B[W],N,F,G,L)}}function Lt(s,e,t){const n=t.isWebGL2;function o(){let O=!1;const X=new KI;let Z=null;const ae=new KI(0,0,0,0);return{setMask:function(xe){Z!==xe&&!O&&(s.colorMask(xe,xe,xe,xe),Z=xe)},setLocked:function(xe){O=xe},setClear:function(xe,He,Ze,nn,pn){pn===!0&&(xe*=nn,He*=nn,Ze*=nn),X.set(xe,He,Ze,nn),ae.equals(X)===!1&&(s.clearColor(xe,He,Ze,nn),ae.copy(X))},reset:function(){O=!1,Z=null,ae.set(-1,0,0,0)}}}function a(){let O=!1,X=null,Z=null,ae=null;return{setTest:function(xe){xe?Se(2929):Le(2929)},setMask:function(xe){X!==xe&&!O&&(s.depthMask(xe),X=xe)},setFunc:function(xe){if(Z!==xe){switch(xe){case KG:s.depthFunc(512);break;case MG:s.depthFunc(519);break;case NG:s.depthFunc(513);break;case Gi:s.depthFunc(515);break;case RG:s.depthFunc(514);break;case yG:s.depthFunc(518);break;case tG:s.depthFunc(516);break;case FG:s.depthFunc(517);break;default:s.depthFunc(515)}Z=xe}},setLocked:function(xe){O=xe},setClear:function(xe){ae!==xe&&(s.clearDepth(xe),ae=xe)},reset:function(){O=!1,X=null,Z=null,ae=null}}}function r(){let O=!1,X=null,Z=null,ae=null,xe=null,He=null,Ze=null,nn=null,pn=null;return{setTest:function(Tt){O||(Tt?Se(2960):Le(2960))},setMask:function(Tt){X!==Tt&&!O&&(s.stencilMask(Tt),X=Tt)},setFunc:function(Tt,xn,Cn){(Z!==Tt||ae!==xn||xe!==Cn)&&(s.stencilFunc(Tt,xn,Cn),Z=Tt,ae=xn,xe=Cn)},setOp:function(Tt,xn,Cn){(He!==Tt||Ze!==xn||nn!==Cn)&&(s.stencilOp(Tt,xn,Cn),He=Tt,Ze=xn,nn=Cn)},setLocked:function(Tt){O=Tt},setClear:function(Tt){pn!==Tt&&(s.clearStencil(Tt),pn=Tt)},reset:function(){O=!1,X=null,Z=null,ae=null,xe=null,He=null,Ze=null,nn=null,pn=null}}}const l=new o,d=new a,h=new r,f=new WeakMap,_=new WeakMap;let g={},b={},w=new WeakMap,x=[],v=null,T=!1,D=null,C=null,I=null,N=null,F=null,G=null,L=null,B=!1,W=null,oe=null,se=null,Y=null,q=null;const ie=s.getParameter(35661);let me=!1,Q=0;const K=s.getParameter(7938);K.indexOf("WebGL")!==-1?(Q=parseFloat(/^WebGL (\d)/.exec(K)[1]),me=Q>=1):K.indexOf("OpenGL ES")!==-1&&(Q=parseFloat(/^OpenGL ES (\d)/.exec(K)[1]),me=Q>=2);let le=null,de={};const ve=s.getParameter(3088),$=s.getParameter(2978),z=new KI().fromArray(ve),ne=new KI().fromArray($);function V(O,X,Z){const ae=new Uint8Array(4),xe=s.createTexture();s.bindTexture(O,xe),s.texParameteri(O,10241,9728),s.texParameteri(O,10240,9728);for(let He=0;He<Z;He++)s.texImage2D(X+He,0,6408,1,1,0,6408,5121,ae);return xe}const ye={};ye[3553]=V(3553,3553,1),ye[34067]=V(34067,34069,6),l.setClear(0,0,0,1),d.setClear(1),h.setClear(0),Se(2929),d.setFunc(Gi),Ot(!1),_t(nD),Se(2884),$t(BC);function Se(O){g[O]!==!0&&(s.enable(O),g[O]=!0)}function Le(O){g[O]!==!1&&(s.disable(O),g[O]=!1)}function De(O,X){return b[O]!==X?(s.bindFramebuffer(O,X),b[O]=X,n&&(O===36009&&(b[36160]=X),O===36160&&(b[36009]=X)),!0):!1}function Oe(O,X){let Z=x,ae=!1;if(O)if(Z=w.get(X),Z===void 0&&(Z=[],w.set(X,Z)),O.isWebGLMultipleRenderTargets){const xe=O.texture;if(Z.length!==xe.length||Z[0]!==36064){for(let He=0,Ze=xe.length;He<Ze;He++)Z[He]=36064+He;Z.length=xe.length,ae=!0}}else Z[0]!==36064&&(Z[0]=36064,ae=!0);else Z[0]!==1029&&(Z[0]=1029,ae=!0);ae&&(t.isWebGL2?s.drawBuffers(Z):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(Z))}function ke(O){return v!==O?(s.useProgram(O),v=O,!0):!1}const Ve={[bC]:32774,[BG]:32778,[QG]:32779};if(n)Ve[qD]=32775,Ve[dD]=32776;else{const O=e.get("EXT_blend_minmax");O!==null&&(Ve[qD]=O.MIN_EXT,Ve[dD]=O.MAX_EXT)}const je={[EG]:0,[iG]:1,[DG]:768,[Ko]:770,[hG]:776,[aG]:774,[sG]:772,[oG]:769,[Mo]:771,[GG]:775,[wG]:773};function $t(O,X,Z,ae,xe,He,Ze,nn){if(O===BC){T===!0&&(Le(3042),T=!1);return}if(T===!1&&(Se(3042),T=!0),O!==CG){if(O!==D||nn!==B){if((C!==bC||F!==bC)&&(s.blendEquation(32774),C=bC,F=bC),nn)switch(O){case XC:s.blendFuncSeparate(1,771,1,771);break;case JD:s.blendFunc(1,1);break;case YD:s.blendFuncSeparate(0,769,0,1);break;case LD:s.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",O);break}else switch(O){case XC:s.blendFuncSeparate(770,771,1,771);break;case JD:s.blendFunc(770,1);break;case YD:s.blendFuncSeparate(0,769,0,1);break;case LD:s.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",O);break}I=null,N=null,G=null,L=null,D=O,B=nn}return}xe=xe||X,He=He||Z,Ze=Ze||ae,(X!==C||xe!==F)&&(s.blendEquationSeparate(Ve[X],Ve[xe]),C=X,F=xe),(Z!==I||ae!==N||He!==G||Ze!==L)&&(s.blendFuncSeparate(je[Z],je[ae],je[He],je[Ze]),I=Z,N=ae,G=He,L=Ze),D=O,B=!1}function jt(O,X){O.side===AC?Le(2884):Se(2884);let Z=O.side===Gg;X&&(Z=!Z),Ot(Z),O.blending===XC&&O.transparent===!1?$t(BC):$t(O.blending,O.blendEquation,O.blendSrc,O.blendDst,O.blendEquationAlpha,O.blendSrcAlpha,O.blendDstAlpha,O.premultipliedAlpha),d.setFunc(O.depthFunc),d.setTest(O.depthTest),d.setMask(O.depthWrite),l.setMask(O.colorWrite);const ae=O.stencilWrite;h.setTest(ae),ae&&(h.setMask(O.stencilWriteMask),h.setFunc(O.stencilFunc,O.stencilRef,O.stencilFuncMask),h.setOp(O.stencilFail,O.stencilZFail,O.stencilZPass)),vt(O.polygonOffset,O.polygonOffsetFactor,O.polygonOffsetUnits),O.alphaToCoverage===!0?Se(32926):Le(32926)}function Ot(O){W!==O&&(O?s.frontFace(2304):s.frontFace(2305),W=O)}function _t(O){O!==AG?(Se(2884),O!==oe&&(O===nD?s.cullFace(1029):O===IG?s.cullFace(1028):s.cullFace(1032))):Le(2884),oe=O}function pt(O){O!==se&&(me&&s.lineWidth(O),se=O)}function vt(O,X,Z){O?(Se(32823),(Y!==X||q!==Z)&&(s.polygonOffset(X,Z),Y=X,q=Z)):Le(32823)}function cn(O){O?Se(3089):Le(3089)}function Mn(O){O===void 0&&(O=33984+ie-1),le!==O&&(s.activeTexture(O),le=O)}function U(O,X,Z){Z===void 0&&(le===null?Z=33984+ie-1:Z=le);let ae=de[Z];ae===void 0&&(ae={type:void 0,texture:void 0},de[Z]=ae),(ae.type!==O||ae.texture!==X)&&(le!==Z&&(s.activeTexture(Z),le=Z),s.bindTexture(O,X||ye[O]),ae.type=O,ae.texture=X)}function R(){const O=de[le];O!==void 0&&O.type!==void 0&&(s.bindTexture(O.type,null),O.type=void 0,O.texture=void 0)}function ce(){try{s.compressedTexImage2D.apply(s,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function we(){try{s.compressedTexImage3D.apply(s,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function be(){try{s.texSubImage2D.apply(s,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function Re(){try{s.texSubImage3D.apply(s,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function Fe(){try{s.compressedTexSubImage2D.apply(s,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function Ie(){try{s.compressedTexSubImage3D.apply(s,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function pe(){try{s.texStorage2D.apply(s,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function ze(){try{s.texStorage3D.apply(s,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function ge(){try{s.texImage2D.apply(s,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function Ee(){try{s.texImage3D.apply(s,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function Ce(O){z.equals(O)===!1&&(s.scissor(O.x,O.y,O.z,O.w),z.copy(O))}function Pe(O){ne.equals(O)===!1&&(s.viewport(O.x,O.y,O.z,O.w),ne.copy(O))}function $e(O,X){let Z=_.get(X);Z===void 0&&(Z=new WeakMap,_.set(X,Z));let ae=Z.get(O);ae===void 0&&(ae=s.getUniformBlockIndex(X,O.name),Z.set(O,ae))}function mt(O,X){const Z=_.get(X).get(O);f.get(X)!==Z&&(s.uniformBlockBinding(X,Z,O.__bindingPointIndex),f.set(X,Z))}function en(){s.disable(3042),s.disable(2884),s.disable(2929),s.disable(32823),s.disable(3089),s.disable(2960),s.disable(32926),s.blendEquation(32774),s.blendFunc(1,0),s.blendFuncSeparate(1,0,1,0),s.colorMask(!0,!0,!0,!0),s.clearColor(0,0,0,0),s.depthMask(!0),s.depthFunc(513),s.clearDepth(1),s.stencilMask(4294967295),s.stencilFunc(519,0,4294967295),s.stencilOp(7680,7680,7680),s.clearStencil(0),s.cullFace(1029),s.frontFace(2305),s.polygonOffset(0,0),s.activeTexture(33984),s.bindFramebuffer(36160,null),n===!0&&(s.bindFramebuffer(36009,null),s.bindFramebuffer(36008,null)),s.useProgram(null),s.lineWidth(1),s.scissor(0,0,s.canvas.width,s.canvas.height),s.viewport(0,0,s.canvas.width,s.canvas.height),g={},le=null,de={},b={},w=new WeakMap,x=[],v=null,T=!1,D=null,C=null,I=null,N=null,F=null,G=null,L=null,B=!1,W=null,oe=null,se=null,Y=null,q=null,z.set(0,0,s.canvas.width,s.canvas.height),ne.set(0,0,s.canvas.width,s.canvas.height),l.reset(),d.reset(),h.reset()}return{buffers:{color:l,depth:d,stencil:h},enable:Se,disable:Le,bindFramebuffer:De,drawBuffers:Oe,useProgram:ke,setBlending:$t,setMaterial:jt,setFlipSided:Ot,setCullFace:_t,setLineWidth:pt,setPolygonOffset:vt,setScissorTest:cn,activeTexture:Mn,bindTexture:U,unbindTexture:R,compressedTexImage2D:ce,compressedTexImage3D:we,texImage2D:ge,texImage3D:Ee,updateUBOMapping:$e,uniformBlockBinding:mt,texStorage2D:pe,texStorage3D:ze,texSubImage2D:be,texSubImage3D:Re,compressedTexSubImage2D:Fe,compressedTexSubImage3D:Ie,scissor:Ce,viewport:Pe,reset:en}}function qt(s,e,t,n,o,a,r){const l=o.isWebGL2,d=o.maxTextures,h=o.maxCubemapSize,f=o.maxTextureSize,_=o.maxSamples,g=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,b=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),w=new WeakMap;let x;const v=new WeakMap;let T=!1;try{T=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function D(U,R){return T?new OffscreenCanvas(U,R):nQ("canvas")}function C(U,R,ce,we){let be=1;if((U.width>we||U.height>we)&&(be=we/Math.max(U.width,U.height)),be<1||R===!0)if(typeof HTMLImageElement<"u"&&U instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&U instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&U instanceof ImageBitmap){const Re=R?_G:Math.floor,Fe=Re(be*U.width),Ie=Re(be*U.height);x===void 0&&(x=D(Fe,Ie));const pe=ce?D(Fe,Ie):x;return pe.width=Fe,pe.height=Ie,pe.getContext("2d").drawImage(U,0,0,Fe,Ie),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+U.width+"x"+U.height+") to ("+Fe+"x"+Ie+")."),pe}else return"data"in U&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+U.width+"x"+U.height+")."),U;return U}function I(U){return Bo(U.width)&&Bo(U.height)}function N(U){return l?!1:U.wrapS!==Qg||U.wrapT!==Qg||U.minFilter!==pI&&U.minFilter!==mI}function F(U,R){return U.generateMipmaps&&R&&U.minFilter!==pI&&U.minFilter!==mI}function G(U){s.generateMipmap(U)}function L(U,R,ce,we,be=!1){if(l===!1)return R;if(U!==null){if(s[U]!==void 0)return s[U];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+U+"'")}let Re=R;return R===6403&&(ce===5126&&(Re=33326),ce===5131&&(Re=33325),ce===5121&&(Re=33321)),R===33319&&(ce===5126&&(Re=33328),ce===5131&&(Re=33327),ce===5121&&(Re=33323)),R===6408&&(ce===5126&&(Re=34836),ce===5131&&(Re=34842),ce===5121&&(Re=we===SI&&be===!1?35907:32856),ce===32819&&(Re=32854),ce===32820&&(Re=32855)),(Re===33325||Re===33326||Re===33327||Re===33328||Re===34842||Re===34836)&&e.get("EXT_color_buffer_float"),Re}function B(U,R,ce){return F(U,ce)===!0||U.isFramebufferTexture&&U.minFilter!==pI&&U.minFilter!==mI?Math.log2(Math.max(R.width,R.height))+1:U.mipmaps!==void 0&&U.mipmaps.length>0?U.mipmaps.length:U.isCompressedTexture&&Array.isArray(U.image)?R.mipmaps.length:1}function W(U){return U===pI||U===hi||U===KQ?9728:9729}function oe(U){const R=U.target;R.removeEventListener("dispose",oe),Y(R),R.isVideoTexture&&w.delete(R)}function se(U){const R=U.target;R.removeEventListener("dispose",se),ie(R)}function Y(U){const R=n.get(U);if(R.__webglInit===void 0)return;const ce=U.source,we=v.get(ce);if(we){const be=we[R.__cacheKey];be.usedTimes--,be.usedTimes===0&&q(U),Object.keys(we).length===0&&v.delete(ce)}n.remove(U)}function q(U){const R=n.get(U);s.deleteTexture(R.__webglTexture);const ce=U.source,we=v.get(ce);delete we[R.__cacheKey],r.memory.textures--}function ie(U){const R=U.texture,ce=n.get(U),we=n.get(R);if(we.__webglTexture!==void 0&&(s.deleteTexture(we.__webglTexture),r.memory.textures--),U.depthTexture&&U.depthTexture.dispose(),U.isWebGLCubeRenderTarget)for(let be=0;be<6;be++)s.deleteFramebuffer(ce.__webglFramebuffer[be]),ce.__webglDepthbuffer&&s.deleteRenderbuffer(ce.__webglDepthbuffer[be]);else{if(s.deleteFramebuffer(ce.__webglFramebuffer),ce.__webglDepthbuffer&&s.deleteRenderbuffer(ce.__webglDepthbuffer),ce.__webglMultisampledFramebuffer&&s.deleteFramebuffer(ce.__webglMultisampledFramebuffer),ce.__webglColorRenderbuffer)for(let be=0;be<ce.__webglColorRenderbuffer.length;be++)ce.__webglColorRenderbuffer[be]&&s.deleteRenderbuffer(ce.__webglColorRenderbuffer[be]);ce.__webglDepthRenderbuffer&&s.deleteRenderbuffer(ce.__webglDepthRenderbuffer)}if(U.isWebGLMultipleRenderTargets)for(let be=0,Re=R.length;be<Re;be++){const Fe=n.get(R[be]);Fe.__webglTexture&&(s.deleteTexture(Fe.__webglTexture),r.memory.textures--),n.remove(R[be])}n.remove(R),n.remove(U)}let me=0;function Q(){me=0}function K(){const U=me;return U>=d&&console.warn("THREE.WebGLTextures: Trying to use "+U+" texture units while this GPU supports only "+d),me+=1,U}function le(U){const R=[];return R.push(U.wrapS),R.push(U.wrapT),R.push(U.wrapR||0),R.push(U.magFilter),R.push(U.minFilter),R.push(U.anisotropy),R.push(U.internalFormat),R.push(U.format),R.push(U.type),R.push(U.generateMipmaps),R.push(U.premultiplyAlpha),R.push(U.flipY),R.push(U.unpackAlignment),R.push(U.encoding),R.join()}function de(U,R){const ce=n.get(U);if(U.isVideoTexture&&cn(U),U.isRenderTargetTexture===!1&&U.version>0&&ce.__version!==U.version){const we=U.image;if(we===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(we.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Le(ce,U,R);return}}t.bindTexture(3553,ce.__webglTexture,33984+R)}function ve(U,R){const ce=n.get(U);if(U.version>0&&ce.__version!==U.version){Le(ce,U,R);return}t.bindTexture(35866,ce.__webglTexture,33984+R)}function $(U,R){const ce=n.get(U);if(U.version>0&&ce.__version!==U.version){Le(ce,U,R);return}t.bindTexture(32879,ce.__webglTexture,33984+R)}function z(U,R){const ce=n.get(U);if(U.version>0&&ce.__version!==U.version){De(ce,U,R);return}t.bindTexture(34067,ce.__webglTexture,33984+R)}const ne={[FQ]:10497,[Qg]:33071,[SQ]:33648},V={[pI]:9728,[hi]:9984,[KQ]:9986,[mI]:9729,[No]:9985,[SC]:9987};function ye(U,R,ce){if(ce?(s.texParameteri(U,10242,ne[R.wrapS]),s.texParameteri(U,10243,ne[R.wrapT]),(U===32879||U===35866)&&s.texParameteri(U,32882,ne[R.wrapR]),s.texParameteri(U,10240,V[R.magFilter]),s.texParameteri(U,10241,V[R.minFilter])):(s.texParameteri(U,10242,33071),s.texParameteri(U,10243,33071),(U===32879||U===35866)&&s.texParameteri(U,32882,33071),(R.wrapS!==Qg||R.wrapT!==Qg)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),s.texParameteri(U,10240,W(R.magFilter)),s.texParameteri(U,10241,W(R.minFilter)),R.minFilter!==pI&&R.minFilter!==mI&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),e.has("EXT_texture_filter_anisotropic")===!0){const we=e.get("EXT_texture_filter_anisotropic");if(R.magFilter===pI||R.minFilter!==KQ&&R.minFilter!==SC||R.type===IC&&e.has("OES_texture_float_linear")===!1||l===!1&&R.type===fB&&e.has("OES_texture_half_float_linear")===!1)return;(R.anisotropy>1||n.get(R).__currentAnisotropy)&&(s.texParameterf(U,we.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(R.anisotropy,o.getMaxAnisotropy())),n.get(R).__currentAnisotropy=R.anisotropy)}}function Se(U,R){let ce=!1;U.__webglInit===void 0&&(U.__webglInit=!0,R.addEventListener("dispose",oe));const we=R.source;let be=v.get(we);be===void 0&&(be={},v.set(we,be));const Re=le(R);if(Re!==U.__cacheKey){be[Re]===void 0&&(be[Re]={texture:s.createTexture(),usedTimes:0},r.memory.textures++,ce=!0),be[Re].usedTimes++;const Fe=be[U.__cacheKey];Fe!==void 0&&(be[U.__cacheKey].usedTimes--,Fe.usedTimes===0&&q(R)),U.__cacheKey=Re,U.__webglTexture=be[Re].texture}return ce}function Le(U,R,ce){let we=3553;(R.isDataArrayTexture||R.isCompressedArrayTexture)&&(we=35866),R.isData3DTexture&&(we=32879);const be=Se(U,R),Re=R.source;t.bindTexture(we,U.__webglTexture,33984+ce);const Fe=n.get(Re);if(Re.version!==Fe.__version||be===!0){t.activeTexture(33984+ce),s.pixelStorei(37440,R.flipY),s.pixelStorei(37441,R.premultiplyAlpha),s.pixelStorei(3317,R.unpackAlignment),s.pixelStorei(37443,0);const Ie=N(R)&&I(R.image)===!1;let pe=C(R.image,Ie,!1,f);pe=Mn(R,pe);const ze=I(pe)||l,ge=a.convert(R.format,R.encoding);let Ee=a.convert(R.type),Ce=L(R.internalFormat,ge,Ee,R.encoding,R.isVideoTexture);ye(we,R,ze);let Pe;const $e=R.mipmaps,mt=l&&R.isVideoTexture!==!0,en=Fe.__version===void 0||be===!0,O=B(R,pe,ze);if(R.isDepthTexture)Ce=6402,l?R.type===IC?Ce=36012:R.type===NC?Ce=33190:R.type===PC?Ce=35056:Ce=33189:R.type===IC&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),R.format===yC&&Ce===6402&&R.type!==Ro&&R.type!==NC&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),R.type=NC,Ee=a.convert(R.type)),R.format===zC&&Ce===6402&&(Ce=34041,R.type!==PC&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),R.type=PC,Ee=a.convert(R.type))),en&&(mt?t.texStorage2D(3553,1,Ce,pe.width,pe.height):t.texImage2D(3553,0,Ce,pe.width,pe.height,0,ge,Ee,null));else if(R.isDataTexture)if($e.length>0&&ze){mt&&en&&t.texStorage2D(3553,O,Ce,$e[0].width,$e[0].height);for(let X=0,Z=$e.length;X<Z;X++)Pe=$e[X],mt?t.texSubImage2D(3553,X,0,0,Pe.width,Pe.height,ge,Ee,Pe.data):t.texImage2D(3553,X,Ce,Pe.width,Pe.height,0,ge,Ee,Pe.data);R.generateMipmaps=!1}else mt?(en&&t.texStorage2D(3553,O,Ce,pe.width,pe.height),t.texSubImage2D(3553,0,0,0,pe.width,pe.height,ge,Ee,pe.data)):t.texImage2D(3553,0,Ce,pe.width,pe.height,0,ge,Ee,pe.data);else if(R.isCompressedTexture)if(R.isCompressedArrayTexture){mt&&en&&t.texStorage3D(35866,O,Ce,$e[0].width,$e[0].height,pe.depth);for(let X=0,Z=$e.length;X<Z;X++)Pe=$e[X],R.format!==Ng?ge!==null?mt?t.compressedTexSubImage3D(35866,X,0,0,0,Pe.width,Pe.height,pe.depth,ge,Pe.data,0,0):t.compressedTexImage3D(35866,X,Ce,Pe.width,Pe.height,pe.depth,0,Pe.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):mt?t.texSubImage3D(35866,X,0,0,0,Pe.width,Pe.height,pe.depth,ge,Ee,Pe.data):t.texImage3D(35866,X,Ce,Pe.width,Pe.height,pe.depth,0,ge,Ee,Pe.data)}else{mt&&en&&t.texStorage2D(3553,O,Ce,$e[0].width,$e[0].height);for(let X=0,Z=$e.length;X<Z;X++)Pe=$e[X],R.format!==Ng?ge!==null?mt?t.compressedTexSubImage2D(3553,X,0,0,Pe.width,Pe.height,ge,Pe.data):t.compressedTexImage2D(3553,X,Ce,Pe.width,Pe.height,0,Pe.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):mt?t.texSubImage2D(3553,X,0,0,Pe.width,Pe.height,ge,Ee,Pe.data):t.texImage2D(3553,X,Ce,Pe.width,Pe.height,0,ge,Ee,Pe.data)}else if(R.isDataArrayTexture)mt?(en&&t.texStorage3D(35866,O,Ce,pe.width,pe.height,pe.depth),t.texSubImage3D(35866,0,0,0,0,pe.width,pe.height,pe.depth,ge,Ee,pe.data)):t.texImage3D(35866,0,Ce,pe.width,pe.height,pe.depth,0,ge,Ee,pe.data);else if(R.isData3DTexture)mt?(en&&t.texStorage3D(32879,O,Ce,pe.width,pe.height,pe.depth),t.texSubImage3D(32879,0,0,0,0,pe.width,pe.height,pe.depth,ge,Ee,pe.data)):t.texImage3D(32879,0,Ce,pe.width,pe.height,pe.depth,0,ge,Ee,pe.data);else if(R.isFramebufferTexture){if(en)if(mt)t.texStorage2D(3553,O,Ce,pe.width,pe.height);else{let X=pe.width,Z=pe.height;for(let ae=0;ae<O;ae++)t.texImage2D(3553,ae,Ce,X,Z,0,ge,Ee,null),X>>=1,Z>>=1}}else if($e.length>0&&ze){mt&&en&&t.texStorage2D(3553,O,Ce,$e[0].width,$e[0].height);for(let X=0,Z=$e.length;X<Z;X++)Pe=$e[X],mt?t.texSubImage2D(3553,X,0,0,ge,Ee,Pe):t.texImage2D(3553,X,Ce,ge,Ee,Pe);R.generateMipmaps=!1}else mt?(en&&t.texStorage2D(3553,O,Ce,pe.width,pe.height),t.texSubImage2D(3553,0,0,0,ge,Ee,pe)):t.texImage2D(3553,0,Ce,ge,Ee,pe);F(R,ze)&&G(we),Fe.__version=Re.version,R.onUpdate&&R.onUpdate(R)}U.__version=R.version}function De(U,R,ce){if(R.image.length!==6)return;const we=Se(U,R),be=R.source;t.bindTexture(34067,U.__webglTexture,33984+ce);const Re=n.get(be);if(be.version!==Re.__version||we===!0){t.activeTexture(33984+ce),s.pixelStorei(37440,R.flipY),s.pixelStorei(37441,R.premultiplyAlpha),s.pixelStorei(3317,R.unpackAlignment),s.pixelStorei(37443,0);const Fe=R.isCompressedTexture||R.image[0].isCompressedTexture,Ie=R.image[0]&&R.image[0].isDataTexture,pe=[];for(let X=0;X<6;X++)!Fe&&!Ie?pe[X]=C(R.image[X],!1,!0,h):pe[X]=Ie?R.image[X].image:R.image[X],pe[X]=Mn(R,pe[X]);const ze=pe[0],ge=I(ze)||l,Ee=a.convert(R.format,R.encoding),Ce=a.convert(R.type),Pe=L(R.internalFormat,Ee,Ce,R.encoding),$e=l&&R.isVideoTexture!==!0,mt=Re.__version===void 0||we===!0;let en=B(R,ze,ge);ye(34067,R,ge);let O;if(Fe){$e&&mt&&t.texStorage2D(34067,en,Pe,ze.width,ze.height);for(let X=0;X<6;X++){O=pe[X].mipmaps;for(let Z=0;Z<O.length;Z++){const ae=O[Z];R.format!==Ng?Ee!==null?$e?t.compressedTexSubImage2D(34069+X,Z,0,0,ae.width,ae.height,Ee,ae.data):t.compressedTexImage2D(34069+X,Z,Pe,ae.width,ae.height,0,ae.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):$e?t.texSubImage2D(34069+X,Z,0,0,ae.width,ae.height,Ee,Ce,ae.data):t.texImage2D(34069+X,Z,Pe,ae.width,ae.height,0,Ee,Ce,ae.data)}}}else{O=R.mipmaps,$e&&mt&&(O.length>0&&en++,t.texStorage2D(34067,en,Pe,pe[0].width,pe[0].height));for(let X=0;X<6;X++)if(Ie){$e?t.texSubImage2D(34069+X,0,0,0,pe[X].width,pe[X].height,Ee,Ce,pe[X].data):t.texImage2D(34069+X,0,Pe,pe[X].width,pe[X].height,0,Ee,Ce,pe[X].data);for(let Z=0;Z<O.length;Z++){const ae=O[Z].image[X].image;$e?t.texSubImage2D(34069+X,Z+1,0,0,ae.width,ae.height,Ee,Ce,ae.data):t.texImage2D(34069+X,Z+1,Pe,ae.width,ae.height,0,Ee,Ce,ae.data)}}else{$e?t.texSubImage2D(34069+X,0,0,0,Ee,Ce,pe[X]):t.texImage2D(34069+X,0,Pe,Ee,Ce,pe[X]);for(let Z=0;Z<O.length;Z++){const ae=O[Z];$e?t.texSubImage2D(34069+X,Z+1,0,0,Ee,Ce,ae.image[X]):t.texImage2D(34069+X,Z+1,Pe,Ee,Ce,ae.image[X])}}}F(R,ge)&&G(34067),Re.__version=be.version,R.onUpdate&&R.onUpdate(R)}U.__version=R.version}function Oe(U,R,ce,we,be){const Re=a.convert(ce.format,ce.encoding),Fe=a.convert(ce.type),Ie=L(ce.internalFormat,Re,Fe,ce.encoding);n.get(R).__hasExternalTextures||(be===32879||be===35866?t.texImage3D(be,0,Ie,R.width,R.height,R.depth,0,Re,Fe,null):t.texImage2D(be,0,Ie,R.width,R.height,0,Re,Fe,null)),t.bindFramebuffer(36160,U),vt(R)?g.framebufferTexture2DMultisampleEXT(36160,we,be,n.get(ce).__webglTexture,0,pt(R)):(be===3553||be>=34069&&be<=34074)&&s.framebufferTexture2D(36160,we,be,n.get(ce).__webglTexture,0),t.bindFramebuffer(36160,null)}function ke(U,R,ce){if(s.bindRenderbuffer(36161,U),R.depthBuffer&&!R.stencilBuffer){let we=33189;if(ce||vt(R)){const be=R.depthTexture;be&&be.isDepthTexture&&(be.type===IC?we=36012:be.type===NC&&(we=33190));const Re=pt(R);vt(R)?g.renderbufferStorageMultisampleEXT(36161,Re,we,R.width,R.height):s.renderbufferStorageMultisample(36161,Re,we,R.width,R.height)}else s.renderbufferStorage(36161,we,R.width,R.height);s.framebufferRenderbuffer(36160,36096,36161,U)}else if(R.depthBuffer&&R.stencilBuffer){const we=pt(R);ce&&vt(R)===!1?s.renderbufferStorageMultisample(36161,we,35056,R.width,R.height):vt(R)?g.renderbufferStorageMultisampleEXT(36161,we,35056,R.width,R.height):s.renderbufferStorage(36161,34041,R.width,R.height),s.framebufferRenderbuffer(36160,33306,36161,U)}else{const we=R.isWebGLMultipleRenderTargets===!0?R.texture:[R.texture];for(let be=0;be<we.length;be++){const Re=we[be],Fe=a.convert(Re.format,Re.encoding),Ie=a.convert(Re.type),pe=L(Re.internalFormat,Fe,Ie,Re.encoding),ze=pt(R);ce&&vt(R)===!1?s.renderbufferStorageMultisample(36161,ze,pe,R.width,R.height):vt(R)?g.renderbufferStorageMultisampleEXT(36161,ze,pe,R.width,R.height):s.renderbufferStorage(36161,pe,R.width,R.height)}}s.bindRenderbuffer(36161,null)}function Ve(U,R){if(R&&R.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(36160,U),!(R.depthTexture&&R.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(R.depthTexture).__webglTexture||R.depthTexture.image.width!==R.width||R.depthTexture.image.height!==R.height)&&(R.depthTexture.image.width=R.width,R.depthTexture.image.height=R.height,R.depthTexture.needsUpdate=!0),de(R.depthTexture,0);const ce=n.get(R.depthTexture).__webglTexture,we=pt(R);if(R.depthTexture.format===yC)vt(R)?g.framebufferTexture2DMultisampleEXT(36160,36096,3553,ce,0,we):s.framebufferTexture2D(36160,36096,3553,ce,0);else if(R.depthTexture.format===zC)vt(R)?g.framebufferTexture2DMultisampleEXT(36160,33306,3553,ce,0,we):s.framebufferTexture2D(36160,33306,3553,ce,0);else throw new Error("Unknown depthTexture format")}function je(U){const R=n.get(U),ce=U.isWebGLCubeRenderTarget===!0;if(U.depthTexture&&!R.__autoAllocateDepthBuffer){if(ce)throw new Error("target.depthTexture not supported in Cube render targets");Ve(R.__webglFramebuffer,U)}else if(ce){R.__webglDepthbuffer=[];for(let we=0;we<6;we++)t.bindFramebuffer(36160,R.__webglFramebuffer[we]),R.__webglDepthbuffer[we]=s.createRenderbuffer(),ke(R.__webglDepthbuffer[we],U,!1)}else t.bindFramebuffer(36160,R.__webglFramebuffer),R.__webglDepthbuffer=s.createRenderbuffer(),ke(R.__webglDepthbuffer,U,!1);t.bindFramebuffer(36160,null)}function $t(U,R,ce){const we=n.get(U);R!==void 0&&Oe(we.__webglFramebuffer,U,U.texture,36064,3553),ce!==void 0&&je(U)}function jt(U){const R=U.texture,ce=n.get(U),we=n.get(R);U.addEventListener("dispose",se),U.isWebGLMultipleRenderTargets!==!0&&(we.__webglTexture===void 0&&(we.__webglTexture=s.createTexture()),we.__version=R.version,r.memory.textures++);const be=U.isWebGLCubeRenderTarget===!0,Re=U.isWebGLMultipleRenderTargets===!0,Fe=I(U)||l;if(be){ce.__webglFramebuffer=[];for(let Ie=0;Ie<6;Ie++)ce.__webglFramebuffer[Ie]=s.createFramebuffer()}else{if(ce.__webglFramebuffer=s.createFramebuffer(),Re)if(o.drawBuffers){const Ie=U.texture;for(let pe=0,ze=Ie.length;pe<ze;pe++){const ge=n.get(Ie[pe]);ge.__webglTexture===void 0&&(ge.__webglTexture=s.createTexture(),r.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(l&&U.samples>0&&vt(U)===!1){const Ie=Re?R:[R];ce.__webglMultisampledFramebuffer=s.createFramebuffer(),ce.__webglColorRenderbuffer=[],t.bindFramebuffer(36160,ce.__webglMultisampledFramebuffer);for(let pe=0;pe<Ie.length;pe++){const ze=Ie[pe];ce.__webglColorRenderbuffer[pe]=s.createRenderbuffer(),s.bindRenderbuffer(36161,ce.__webglColorRenderbuffer[pe]);const ge=a.convert(ze.format,ze.encoding),Ee=a.convert(ze.type),Ce=L(ze.internalFormat,ge,Ee,ze.encoding,U.isXRRenderTarget===!0),Pe=pt(U);s.renderbufferStorageMultisample(36161,Pe,Ce,U.width,U.height),s.framebufferRenderbuffer(36160,36064+pe,36161,ce.__webglColorRenderbuffer[pe])}s.bindRenderbuffer(36161,null),U.depthBuffer&&(ce.__webglDepthRenderbuffer=s.createRenderbuffer(),ke(ce.__webglDepthRenderbuffer,U,!0)),t.bindFramebuffer(36160,null)}}if(be){t.bindTexture(34067,we.__webglTexture),ye(34067,R,Fe);for(let Ie=0;Ie<6;Ie++)Oe(ce.__webglFramebuffer[Ie],U,R,36064,34069+Ie);F(R,Fe)&&G(34067),t.unbindTexture()}else if(Re){const Ie=U.texture;for(let pe=0,ze=Ie.length;pe<ze;pe++){const ge=Ie[pe],Ee=n.get(ge);t.bindTexture(3553,Ee.__webglTexture),ye(3553,ge,Fe),Oe(ce.__webglFramebuffer,U,ge,36064+pe,3553),F(ge,Fe)&&G(3553)}t.unbindTexture()}else{let Ie=3553;(U.isWebGL3DRenderTarget||U.isWebGLArrayRenderTarget)&&(l?Ie=U.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(Ie,we.__webglTexture),ye(Ie,R,Fe),Oe(ce.__webglFramebuffer,U,R,36064,Ie),F(R,Fe)&&G(Ie),t.unbindTexture()}U.depthBuffer&&je(U)}function Ot(U){const R=I(U)||l,ce=U.isWebGLMultipleRenderTargets===!0?U.texture:[U.texture];for(let we=0,be=ce.length;we<be;we++){const Re=ce[we];if(F(Re,R)){const Fe=U.isWebGLCubeRenderTarget?34067:3553,Ie=n.get(Re).__webglTexture;t.bindTexture(Fe,Ie),G(Fe),t.unbindTexture()}}}function _t(U){if(l&&U.samples>0&&vt(U)===!1){const R=U.isWebGLMultipleRenderTargets?U.texture:[U.texture],ce=U.width,we=U.height;let be=16384;const Re=[],Fe=U.stencilBuffer?33306:36096,Ie=n.get(U),pe=U.isWebGLMultipleRenderTargets===!0;if(pe)for(let ze=0;ze<R.length;ze++)t.bindFramebuffer(36160,Ie.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(36160,36064+ze,36161,null),t.bindFramebuffer(36160,Ie.__webglFramebuffer),s.framebufferTexture2D(36009,36064+ze,3553,null,0);t.bindFramebuffer(36008,Ie.__webglMultisampledFramebuffer),t.bindFramebuffer(36009,Ie.__webglFramebuffer);for(let ze=0;ze<R.length;ze++){Re.push(36064+ze),U.depthBuffer&&Re.push(Fe);const ge=Ie.__ignoreDepthValues!==void 0?Ie.__ignoreDepthValues:!1;if(ge===!1&&(U.depthBuffer&&(be|=256),U.stencilBuffer&&(be|=1024)),pe&&s.framebufferRenderbuffer(36008,36064,36161,Ie.__webglColorRenderbuffer[ze]),ge===!0&&(s.invalidateFramebuffer(36008,[Fe]),s.invalidateFramebuffer(36009,[Fe])),pe){const Ee=n.get(R[ze]).__webglTexture;s.framebufferTexture2D(36009,36064,3553,Ee,0)}s.blitFramebuffer(0,0,ce,we,0,0,ce,we,be,9728),b&&s.invalidateFramebuffer(36008,Re)}if(t.bindFramebuffer(36008,null),t.bindFramebuffer(36009,null),pe)for(let ze=0;ze<R.length;ze++){t.bindFramebuffer(36160,Ie.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(36160,36064+ze,36161,Ie.__webglColorRenderbuffer[ze]);const ge=n.get(R[ze]).__webglTexture;t.bindFramebuffer(36160,Ie.__webglFramebuffer),s.framebufferTexture2D(36009,36064+ze,3553,ge,0)}t.bindFramebuffer(36009,Ie.__webglMultisampledFramebuffer)}}function pt(U){return Math.min(_,U.samples)}function vt(U){const R=n.get(U);return l&&U.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&R.__useRenderToTexture!==!1}function cn(U){const R=r.render.frame;w.get(U)!==R&&(w.set(U,R),U.update())}function Mn(U,R){const ce=U.encoding,we=U.format,be=U.type;return U.isCompressedTexture===!0||U.isVideoTexture===!0||U.format===Ki||ce!==cC&&(ce===SI?l===!1?e.has("EXT_sRGB")===!0&&we===Ng?(U.format=Ki,U.minFilter=mI,U.generateMipmaps=!1):R=So.sRGBToLinear(R):(we!==Ng||be!==eC)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",ce)),R}this.allocateTextureUnit=K,this.resetTextureUnits=Q,this.setTexture2D=de,this.setTexture2DArray=ve,this.setTexture3D=$,this.setTextureCube=z,this.rebindTextures=$t,this.setupRenderTarget=jt,this.updateRenderTargetMipmap=Ot,this.updateMultisampleRenderTarget=_t,this.setupDepthRenderbuffer=je,this.setupFrameBufferTexture=Oe,this.useMultisampledRTT=vt}function sh(s,e,t){const n=t.isWebGL2;function o(a,r=null){let l;if(a===eC)return 5121;if(a===qG)return 32819;if(a===dG)return 32820;if(a===JG)return 5120;if(a===YG)return 5122;if(a===Ro)return 5123;if(a===LG)return 5124;if(a===NC)return 5125;if(a===IC)return 5126;if(a===fB)return n?5131:(l=e.get("OES_texture_half_float"),l!==null?l.HALF_FLOAT_OES:null);if(a===HG)return 6406;if(a===Ng)return 6408;if(a===lG)return 6409;if(a===xG)return 6410;if(a===yC)return 6402;if(a===zC)return 34041;if(a===Ki)return l=e.get("EXT_sRGB"),l!==null?l.SRGB_ALPHA_EXT:null;if(a===fG)return 6403;if(a===pG)return 36244;if(a===mG)return 33319;if(a===OG)return 33320;if(a===bG)return 36249;if(a===Qi||a===Ei||a===ii||a===Di)if(r===SI)if(l=e.get("WEBGL_compressed_texture_s3tc_srgb"),l!==null){if(a===Qi)return l.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(a===Ei)return l.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(a===ii)return l.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(a===Di)return l.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(l=e.get("WEBGL_compressed_texture_s3tc"),l!==null){if(a===Qi)return l.COMPRESSED_RGB_S3TC_DXT1_EXT;if(a===Ei)return l.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(a===ii)return l.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(a===Di)return l.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(a===HD||a===lD||a===xD||a===fD)if(l=e.get("WEBGL_compressed_texture_pvrtc"),l!==null){if(a===HD)return l.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(a===lD)return l.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(a===xD)return l.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(a===fD)return l.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(a===uG)return l=e.get("WEBGL_compressed_texture_etc1"),l!==null?l.COMPRESSED_RGB_ETC1_WEBGL:null;if(a===pD||a===mD)if(l=e.get("WEBGL_compressed_texture_etc"),l!==null){if(a===pD)return r===SI?l.COMPRESSED_SRGB8_ETC2:l.COMPRESSED_RGB8_ETC2;if(a===mD)return r===SI?l.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:l.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(a===OD||a===bD||a===uD||a===WD||a===TD||a===VD||a===ZD||a===XD||a===PD||a===jD||a===vD||a===zD||a===_D||a===$D)if(l=e.get("WEBGL_compressed_texture_astc"),l!==null){if(a===OD)return r===SI?l.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:l.COMPRESSED_RGBA_ASTC_4x4_KHR;if(a===bD)return r===SI?l.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:l.COMPRESSED_RGBA_ASTC_5x4_KHR;if(a===uD)return r===SI?l.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:l.COMPRESSED_RGBA_ASTC_5x5_KHR;if(a===WD)return r===SI?l.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:l.COMPRESSED_RGBA_ASTC_6x5_KHR;if(a===TD)return r===SI?l.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:l.COMPRESSED_RGBA_ASTC_6x6_KHR;if(a===VD)return r===SI?l.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:l.COMPRESSED_RGBA_ASTC_8x5_KHR;if(a===ZD)return r===SI?l.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:l.COMPRESSED_RGBA_ASTC_8x6_KHR;if(a===XD)return r===SI?l.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:l.COMPRESSED_RGBA_ASTC_8x8_KHR;if(a===PD)return r===SI?l.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:l.COMPRESSED_RGBA_ASTC_10x5_KHR;if(a===jD)return r===SI?l.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:l.COMPRESSED_RGBA_ASTC_10x6_KHR;if(a===vD)return r===SI?l.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:l.COMPRESSED_RGBA_ASTC_10x8_KHR;if(a===zD)return r===SI?l.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:l.COMPRESSED_RGBA_ASTC_10x10_KHR;if(a===_D)return r===SI?l.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:l.COMPRESSED_RGBA_ASTC_12x10_KHR;if(a===$D)return r===SI?l.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:l.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(a===oi)if(l=e.get("EXT_texture_compression_bptc"),l!==null){if(a===oi)return r===SI?l.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:l.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;if(a===WG||a===Ao||a===Io||a===go)if(l=e.get("EXT_texture_compression_rgtc"),l!==null){if(a===oi)return l.COMPRESSED_RED_RGTC1_EXT;if(a===Ao)return l.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(a===Io)return l.COMPRESSED_RED_GREEN_RGTC2_EXT;if(a===go)return l.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return a===PC?n?34042:(l=e.get("WEBGL_depth_texture"),l!==null?l.UNSIGNED_INT_24_8_WEBGL:null):s[a]!==void 0?s[a]:null}return{convert:o}}class wh extends $I{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class dB extends aI{constructor(){super(),this.isGroup=!0,this.type="Group"}}const dt={type:"move"};class MD{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new dB,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new dB,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new H,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new H),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new dB,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new H,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new H),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let o=null,a=null,r=null;const l=this._targetRay,d=this._grip,h=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(h&&e.hand){r=!0;for(const x of e.hand.values()){const v=t.getJointPose(x,n),T=this._getHandJoint(h,x);v!==null&&(T.matrix.fromArray(v.transform.matrix),T.matrix.decompose(T.position,T.rotation,T.scale),T.jointRadius=v.radius),T.visible=v!==null}const f=h.joints["index-finger-tip"],_=h.joints["thumb-tip"],g=f.position.distanceTo(_.position),b=.02,w=.005;h.inputState.pinching&&g>b+w?(h.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!h.inputState.pinching&&g<=b-w&&(h.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else d!==null&&e.gripSpace&&(a=t.getPose(e.gripSpace,n),a!==null&&(d.matrix.fromArray(a.transform.matrix),d.matrix.decompose(d.position,d.rotation,d.scale),a.linearVelocity?(d.hasLinearVelocity=!0,d.linearVelocity.copy(a.linearVelocity)):d.hasLinearVelocity=!1,a.angularVelocity?(d.hasAngularVelocity=!0,d.angularVelocity.copy(a.angularVelocity)):d.hasAngularVelocity=!1));l!==null&&(o=t.getPose(e.targetRaySpace,n),o===null&&a!==null&&(o=a),o!==null&&(l.matrix.fromArray(o.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),o.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(o.linearVelocity)):l.hasLinearVelocity=!1,o.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(o.angularVelocity)):l.hasAngularVelocity=!1,this.dispatchEvent(dt)))}return l!==null&&(l.visible=o!==null),d!==null&&(d.visible=a!==null),h!==null&&(h.visible=r!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const n=new dB;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}class ah extends bI{constructor(e,t,n,o,a,r,l,d,h,f){if(f=f!==void 0?f:yC,f!==yC&&f!==zC)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&f===yC&&(n=NC),n===void 0&&f===zC&&(n=PC),super(null,o,a,r,l,d,f,n,h),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=l!==void 0?l:pI,this.minFilter=d!==void 0?d:pI,this.flipY=!1,this.generateMipmaps=!1}}class Ht extends Wg{constructor(e,t){super();const n=this;let o=null,a=1,r=null,l="local-floor",d=1,h=null,f=null,_=null,g=null,b=null,w=null;const x=t.getContextAttributes();let v=null,T=null;const D=[],C=[],I=new Set,N=new Map,F=new $I;F.layers.enable(1),F.viewport=new KI;const G=new $I;G.layers.enable(2),G.viewport=new KI;const L=[F,G],B=new wh;B.layers.enable(1),B.layers.enable(2);let W=null,oe=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function($){let z=D[$];return z===void 0&&(z=new MD,D[$]=z),z.getTargetRaySpace()},this.getControllerGrip=function($){let z=D[$];return z===void 0&&(z=new MD,D[$]=z),z.getGripSpace()},this.getHand=function($){let z=D[$];return z===void 0&&(z=new MD,D[$]=z),z.getHandSpace()};function se($){const z=C.indexOf($.inputSource);if(z===-1)return;const ne=D[z];ne!==void 0&&ne.dispatchEvent({type:$.type,data:$.inputSource})}function Y(){o.removeEventListener("select",se),o.removeEventListener("selectstart",se),o.removeEventListener("selectend",se),o.removeEventListener("squeeze",se),o.removeEventListener("squeezestart",se),o.removeEventListener("squeezeend",se),o.removeEventListener("end",Y),o.removeEventListener("inputsourceschange",q);for(let $=0;$<D.length;$++){const z=C[$];z!==null&&(C[$]=null,D[$].disconnect(z))}W=null,oe=null,e.setRenderTarget(v),b=null,g=null,_=null,o=null,T=null,ve.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function($){a=$,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function($){l=$,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return h||r},this.setReferenceSpace=function($){h=$},this.getBaseLayer=function(){return g!==null?g:b},this.getBinding=function(){return _},this.getFrame=function(){return w},this.getSession=function(){return o},this.setSession=async function($){if(o=$,o!==null){if(v=e.getRenderTarget(),o.addEventListener("select",se),o.addEventListener("selectstart",se),o.addEventListener("selectend",se),o.addEventListener("squeeze",se),o.addEventListener("squeezestart",se),o.addEventListener("squeezeend",se),o.addEventListener("end",Y),o.addEventListener("inputsourceschange",q),x.xrCompatible!==!0&&await t.makeXRCompatible(),o.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const z={antialias:o.renderState.layers===void 0?x.antialias:!0,alpha:x.alpha,depth:x.depth,stencil:x.stencil,framebufferScaleFactor:a};b=new XRWebGLLayer(o,t,z),o.updateRenderState({baseLayer:b}),T=new qg(b.framebufferWidth,b.framebufferHeight,{format:Ng,type:eC,encoding:e.outputEncoding,stencilBuffer:x.stencil})}else{let z=null,ne=null,V=null;x.depth&&(V=x.stencil?35056:33190,z=x.stencil?zC:yC,ne=x.stencil?PC:NC);const ye={colorFormat:32856,depthFormat:V,scaleFactor:a};_=new XRWebGLBinding(o,t),g=_.createProjectionLayer(ye),o.updateRenderState({layers:[g]}),T=new qg(g.textureWidth,g.textureHeight,{format:Ng,type:eC,depthTexture:new ah(g.textureWidth,g.textureHeight,ne,void 0,void 0,void 0,void 0,void 0,void 0,z),stencilBuffer:x.stencil,encoding:e.outputEncoding,samples:x.antialias?4:0});const Se=e.properties.get(T);Se.__ignoreDepthValues=g.ignoreDepthValues}T.isXRRenderTarget=!0,this.setFoveation(d),h=null,r=await o.requestReferenceSpace(l),ve.setContext(o),ve.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};function q($){for(let z=0;z<$.removed.length;z++){const ne=$.removed[z],V=C.indexOf(ne);V>=0&&(C[V]=null,D[V].disconnect(ne))}for(let z=0;z<$.added.length;z++){const ne=$.added[z];let V=C.indexOf(ne);if(V===-1){for(let Se=0;Se<D.length;Se++)if(Se>=C.length){C.push(ne),V=Se;break}else if(C[Se]===null){C[Se]=ne,V=Se;break}if(V===-1)break}const ye=D[V];ye&&ye.connect(ne)}}const ie=new H,me=new H;function Q($,z,ne){ie.setFromMatrixPosition(z.matrixWorld),me.setFromMatrixPosition(ne.matrixWorld);const V=ie.distanceTo(me),ye=z.projectionMatrix.elements,Se=ne.projectionMatrix.elements,Le=ye[14]/(ye[10]-1),De=ye[14]/(ye[10]+1),Oe=(ye[9]+1)/ye[5],ke=(ye[9]-1)/ye[5],Ve=(ye[8]-1)/ye[0],je=(Se[8]+1)/Se[0],$t=Le*Ve,jt=Le*je,Ot=V/(-Ve+je),_t=Ot*-Ve;z.matrixWorld.decompose($.position,$.quaternion,$.scale),$.translateX(_t),$.translateZ(Ot),$.matrixWorld.compose($.position,$.quaternion,$.scale),$.matrixWorldInverse.copy($.matrixWorld).invert();const pt=Le+Ot,vt=De+Ot,cn=$t-_t,Mn=jt+(V-_t),U=Oe*De/vt*pt,R=ke*De/vt*pt;$.projectionMatrix.makePerspective(cn,Mn,U,R,pt,vt)}function K($,z){z===null?$.matrixWorld.copy($.matrix):$.matrixWorld.multiplyMatrices(z.matrixWorld,$.matrix),$.matrixWorldInverse.copy($.matrixWorld).invert()}this.updateCamera=function($){if(o===null)return;B.near=G.near=F.near=$.near,B.far=G.far=F.far=$.far,(W!==B.near||oe!==B.far)&&(o.updateRenderState({depthNear:B.near,depthFar:B.far}),W=B.near,oe=B.far);const z=$.parent,ne=B.cameras;K(B,z);for(let ye=0;ye<ne.length;ye++)K(ne[ye],z);B.matrixWorld.decompose(B.position,B.quaternion,B.scale),$.matrix.copy(B.matrix),$.matrix.decompose($.position,$.quaternion,$.scale);const V=$.children;for(let ye=0,Se=V.length;ye<Se;ye++)V[ye].updateMatrixWorld(!0);ne.length===2?Q(B,F,G):B.projectionMatrix.copy(F.projectionMatrix)},this.getCamera=function(){return B},this.getFoveation=function(){if(!(g===null&&b===null))return d},this.setFoveation=function($){d=$,g!==null&&(g.fixedFoveation=$),b!==null&&b.fixedFoveation!==void 0&&(b.fixedFoveation=$)},this.getPlanes=function(){return I};let le=null;function de($,z){if(f=z.getViewerPose(h||r),w=z,f!==null){const ne=f.views;b!==null&&(e.setRenderTargetFramebuffer(T,b.framebuffer),e.setRenderTarget(T));let V=!1;ne.length!==B.cameras.length&&(B.cameras.length=0,V=!0);for(let ye=0;ye<ne.length;ye++){const Se=ne[ye];let Le=null;if(b!==null)Le=b.getViewport(Se);else{const Oe=_.getViewSubImage(g,Se);Le=Oe.viewport,ye===0&&(e.setRenderTargetTextures(T,Oe.colorTexture,g.ignoreDepthValues?void 0:Oe.depthStencilTexture),e.setRenderTarget(T))}let De=L[ye];De===void 0&&(De=new $I,De.layers.enable(ye),De.viewport=new KI,L[ye]=De),De.matrix.fromArray(Se.transform.matrix),De.projectionMatrix.fromArray(Se.projectionMatrix),De.viewport.set(Le.x,Le.y,Le.width,Le.height),ye===0&&B.matrix.copy(De.matrix),V===!0&&B.cameras.push(De)}}for(let ne=0;ne<D.length;ne++){const V=C[ne],ye=D[ne];V!==null&&ye!==void 0&&ye.update(V,z,h||r)}if(le&&le($,z),z.detectedPlanes){n.dispatchEvent({type:"planesdetected",data:z.detectedPlanes});let ne=null;for(const V of I)z.detectedPlanes.has(V)||(ne===null&&(ne=[]),ne.push(V));if(ne!==null)for(const V of ne)I.delete(V),N.delete(V),n.dispatchEvent({type:"planeremoved",data:V});for(const V of z.detectedPlanes)if(!I.has(V))I.add(V),N.set(V,z.lastChangedTime),n.dispatchEvent({type:"planeadded",data:V});else{const ye=N.get(V);V.lastChangedTime>ye&&(N.set(V,V.lastChangedTime),n.dispatchEvent({type:"planechanged",data:V}))}}w=null}const ve=new Qh;ve.setAnimationLoop(de),this.setAnimationLoop=function($){le=$},this.dispose=function(){}}}function lt(s,e){function t(x,v){v.color.getRGB(x.fogColor.value,Ih(s)),v.isFog?(x.fogNear.value=v.near,x.fogFar.value=v.far):v.isFogExp2&&(x.fogDensity.value=v.density)}function n(x,v,T,D,C){v.isMeshBasicMaterial||v.isMeshLambertMaterial?o(x,v):v.isMeshToonMaterial?(o(x,v),f(x,v)):v.isMeshPhongMaterial?(o(x,v),h(x,v)):v.isMeshStandardMaterial?(o(x,v),_(x,v),v.isMeshPhysicalMaterial&&g(x,v,C)):v.isMeshMatcapMaterial?(o(x,v),b(x,v)):v.isMeshDepthMaterial?o(x,v):v.isMeshDistanceMaterial?(o(x,v),w(x,v)):v.isMeshNormalMaterial?o(x,v):v.isLineBasicMaterial?(a(x,v),v.isLineDashedMaterial&&r(x,v)):v.isPointsMaterial?l(x,v,T,D):v.isSpriteMaterial?d(x,v):v.isShadowMaterial?(x.color.value.copy(v.color),x.opacity.value=v.opacity):v.isShaderMaterial&&(v.uniformsNeedUpdate=!1)}function o(x,v){x.opacity.value=v.opacity,v.color&&x.diffuse.value.copy(v.color),v.emissive&&x.emissive.value.copy(v.emissive).multiplyScalar(v.emissiveIntensity),v.map&&(x.map.value=v.map),v.alphaMap&&(x.alphaMap.value=v.alphaMap),v.bumpMap&&(x.bumpMap.value=v.bumpMap,x.bumpScale.value=v.bumpScale,v.side===Gg&&(x.bumpScale.value*=-1)),v.displacementMap&&(x.displacementMap.value=v.displacementMap,x.displacementScale.value=v.displacementScale,x.displacementBias.value=v.displacementBias),v.emissiveMap&&(x.emissiveMap.value=v.emissiveMap),v.normalMap&&(x.normalMap.value=v.normalMap,x.normalScale.value.copy(v.normalScale),v.side===Gg&&x.normalScale.value.negate()),v.specularMap&&(x.specularMap.value=v.specularMap),v.alphaTest>0&&(x.alphaTest.value=v.alphaTest);const T=e.get(v).envMap;if(T&&(x.envMap.value=T,x.flipEnvMap.value=T.isCubeTexture&&T.isRenderTargetTexture===!1?-1:1,x.reflectivity.value=v.reflectivity,x.ior.value=v.ior,x.refractionRatio.value=v.refractionRatio),v.lightMap){x.lightMap.value=v.lightMap;const I=s.useLegacyLights===!0?Math.PI:1;x.lightMapIntensity.value=v.lightMapIntensity*I}v.aoMap&&(x.aoMap.value=v.aoMap,x.aoMapIntensity.value=v.aoMapIntensity);let D;v.map?D=v.map:v.specularMap?D=v.specularMap:v.displacementMap?D=v.displacementMap:v.normalMap?D=v.normalMap:v.bumpMap?D=v.bumpMap:v.roughnessMap?D=v.roughnessMap:v.metalnessMap?D=v.metalnessMap:v.alphaMap?D=v.alphaMap:v.emissiveMap?D=v.emissiveMap:v.clearcoatMap?D=v.clearcoatMap:v.clearcoatNormalMap?D=v.clearcoatNormalMap:v.clearcoatRoughnessMap?D=v.clearcoatRoughnessMap:v.iridescenceMap?D=v.iridescenceMap:v.iridescenceThicknessMap?D=v.iridescenceThicknessMap:v.specularIntensityMap?D=v.specularIntensityMap:v.specularColorMap?D=v.specularColorMap:v.transmissionMap?D=v.transmissionMap:v.thicknessMap?D=v.thicknessMap:v.sheenColorMap?D=v.sheenColorMap:v.sheenRoughnessMap&&(D=v.sheenRoughnessMap),D!==void 0&&(D.isWebGLRenderTarget&&(D=D.texture),D.matrixAutoUpdate===!0&&D.updateMatrix(),x.uvTransform.value.copy(D.matrix));let C;v.aoMap?C=v.aoMap:v.lightMap&&(C=v.lightMap),C!==void 0&&(C.isWebGLRenderTarget&&(C=C.texture),C.matrixAutoUpdate===!0&&C.updateMatrix(),x.uv2Transform.value.copy(C.matrix))}function a(x,v){x.diffuse.value.copy(v.color),x.opacity.value=v.opacity}function r(x,v){x.dashSize.value=v.dashSize,x.totalSize.value=v.dashSize+v.gapSize,x.scale.value=v.scale}function l(x,v,T,D){x.diffuse.value.copy(v.color),x.opacity.value=v.opacity,x.size.value=v.size*T,x.scale.value=D*.5,v.map&&(x.map.value=v.map),v.alphaMap&&(x.alphaMap.value=v.alphaMap),v.alphaTest>0&&(x.alphaTest.value=v.alphaTest);let C;v.map?C=v.map:v.alphaMap&&(C=v.alphaMap),C!==void 0&&(C.matrixAutoUpdate===!0&&C.updateMatrix(),x.uvTransform.value.copy(C.matrix))}function d(x,v){x.diffuse.value.copy(v.color),x.opacity.value=v.opacity,x.rotation.value=v.rotation,v.map&&(x.map.value=v.map),v.alphaMap&&(x.alphaMap.value=v.alphaMap),v.alphaTest>0&&(x.alphaTest.value=v.alphaTest);let T;v.map?T=v.map:v.alphaMap&&(T=v.alphaMap),T!==void 0&&(T.matrixAutoUpdate===!0&&T.updateMatrix(),x.uvTransform.value.copy(T.matrix))}function h(x,v){x.specular.value.copy(v.specular),x.shininess.value=Math.max(v.shininess,1e-4)}function f(x,v){v.gradientMap&&(x.gradientMap.value=v.gradientMap)}function _(x,v){x.roughness.value=v.roughness,x.metalness.value=v.metalness,v.roughnessMap&&(x.roughnessMap.value=v.roughnessMap),v.metalnessMap&&(x.metalnessMap.value=v.metalnessMap),e.get(v).envMap&&(x.envMapIntensity.value=v.envMapIntensity)}function g(x,v,T){x.ior.value=v.ior,v.sheen>0&&(x.sheenColor.value.copy(v.sheenColor).multiplyScalar(v.sheen),x.sheenRoughness.value=v.sheenRoughness,v.sheenColorMap&&(x.sheenColorMap.value=v.sheenColorMap),v.sheenRoughnessMap&&(x.sheenRoughnessMap.value=v.sheenRoughnessMap)),v.clearcoat>0&&(x.clearcoat.value=v.clearcoat,x.clearcoatRoughness.value=v.clearcoatRoughness,v.clearcoatMap&&(x.clearcoatMap.value=v.clearcoatMap),v.clearcoatRoughnessMap&&(x.clearcoatRoughnessMap.value=v.clearcoatRoughnessMap),v.clearcoatNormalMap&&(x.clearcoatNormalScale.value.copy(v.clearcoatNormalScale),x.clearcoatNormalMap.value=v.clearcoatNormalMap,v.side===Gg&&x.clearcoatNormalScale.value.negate())),v.iridescence>0&&(x.iridescence.value=v.iridescence,x.iridescenceIOR.value=v.iridescenceIOR,x.iridescenceThicknessMinimum.value=v.iridescenceThicknessRange[0],x.iridescenceThicknessMaximum.value=v.iridescenceThicknessRange[1],v.iridescenceMap&&(x.iridescenceMap.value=v.iridescenceMap),v.iridescenceThicknessMap&&(x.iridescenceThicknessMap.value=v.iridescenceThicknessMap)),v.transmission>0&&(x.transmission.value=v.transmission,x.transmissionSamplerMap.value=T.texture,x.transmissionSamplerSize.value.set(T.width,T.height),v.transmissionMap&&(x.transmissionMap.value=v.transmissionMap),x.thickness.value=v.thickness,v.thicknessMap&&(x.thicknessMap.value=v.thicknessMap),x.attenuationDistance.value=v.attenuationDistance,x.attenuationColor.value.copy(v.attenuationColor)),x.specularIntensity.value=v.specularIntensity,x.specularColor.value.copy(v.specularColor),v.specularIntensityMap&&(x.specularIntensityMap.value=v.specularIntensityMap),v.specularColorMap&&(x.specularColorMap.value=v.specularColorMap)}function b(x,v){v.matcap&&(x.matcap.value=v.matcap)}function w(x,v){x.referencePosition.value.copy(v.referencePosition),x.nearDistance.value=v.nearDistance,x.farDistance.value=v.farDistance}return{refreshFogUniforms:t,refreshMaterialUniforms:n}}function xt(s,e,t,n){let o={},a={},r=[];const l=t.isWebGL2?s.getParameter(35375):0;function d(D,C){const I=C.program;n.uniformBlockBinding(D,I)}function h(D,C){let I=o[D.id];I===void 0&&(w(D),I=f(D),o[D.id]=I,D.addEventListener("dispose",v));const N=C.program;n.updateUBOMapping(D,N);const F=e.render.frame;a[D.id]!==F&&(g(D),a[D.id]=F)}function f(D){const C=_();D.__bindingPointIndex=C;const I=s.createBuffer(),N=D.__size,F=D.usage;return s.bindBuffer(35345,I),s.bufferData(35345,N,F),s.bindBuffer(35345,null),s.bindBufferBase(35345,C,I),I}function _(){for(let D=0;D<l;D++)if(r.indexOf(D)===-1)return r.push(D),D;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function g(D){const C=o[D.id],I=D.uniforms,N=D.__cache;s.bindBuffer(35345,C);for(let F=0,G=I.length;F<G;F++){const L=I[F];if(b(L,F,N)===!0){const B=L.__offset,W=Array.isArray(L.value)?L.value:[L.value];let oe=0;for(let se=0;se<W.length;se++){const Y=W[se],q=x(Y);typeof Y=="number"?(L.__data[0]=Y,s.bufferSubData(35345,B+oe,L.__data)):Y.isMatrix3?(L.__data[0]=Y.elements[0],L.__data[1]=Y.elements[1],L.__data[2]=Y.elements[2],L.__data[3]=Y.elements[0],L.__data[4]=Y.elements[3],L.__data[5]=Y.elements[4],L.__data[6]=Y.elements[5],L.__data[7]=Y.elements[0],L.__data[8]=Y.elements[6],L.__data[9]=Y.elements[7],L.__data[10]=Y.elements[8],L.__data[11]=Y.elements[0]):(Y.toArray(L.__data,oe),oe+=q.storage/Float32Array.BYTES_PER_ELEMENT)}s.bufferSubData(35345,B,L.__data)}}s.bindBuffer(35345,null)}function b(D,C,I){const N=D.value;if(I[C]===void 0){if(typeof N=="number")I[C]=N;else{const F=Array.isArray(N)?N:[N],G=[];for(let L=0;L<F.length;L++)G.push(F[L].clone());I[C]=G}return!0}else if(typeof N=="number"){if(I[C]!==N)return I[C]=N,!0}else{const F=Array.isArray(I[C])?I[C]:[I[C]],G=Array.isArray(N)?N:[N];for(let L=0;L<F.length;L++){const B=F[L];if(B.equals(G[L])===!1)return B.copy(G[L]),!0}}return!1}function w(D){const C=D.uniforms;let I=0;const N=16;let F=0;for(let G=0,L=C.length;G<L;G++){const B=C[G],W={boundary:0,storage:0},oe=Array.isArray(B.value)?B.value:[B.value];for(let se=0,Y=oe.length;se<Y;se++){const q=oe[se],ie=x(q);W.boundary+=ie.boundary,W.storage+=ie.storage}if(B.__data=new Float32Array(W.storage/Float32Array.BYTES_PER_ELEMENT),B.__offset=I,G>0){F=I%N;const se=N-F;F!==0&&se-W.boundary<0&&(I+=N-F,B.__offset=I)}I+=W.storage}return F=I%N,F>0&&(I+=N-F),D.__size=I,D.__cache={},this}function x(D){const C={boundary:0,storage:0};return typeof D=="number"?(C.boundary=4,C.storage=4):D.isVector2?(C.boundary=8,C.storage=8):D.isVector3||D.isColor?(C.boundary=16,C.storage=12):D.isVector4?(C.boundary=16,C.storage=16):D.isMatrix3?(C.boundary=48,C.storage=48):D.isMatrix4?(C.boundary=64,C.storage=64):D.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",D),C}function v(D){const C=D.target;C.removeEventListener("dispose",v);const I=r.indexOf(C.__bindingPointIndex);r.splice(I,1),s.deleteBuffer(o[C.id]),delete o[C.id],delete a[C.id]}function T(){for(const D in o)s.deleteBuffer(o[D]);r=[],o={},a={}}return{bind:d,update:h,dispose:T}}function ft(){const s=nQ("canvas");return s.style.display="block",s}function Jo(s={}){this.isWebGLRenderer=!0;const e=s.canvas!==void 0?s.canvas:ft(),t=s.context!==void 0?s.context:null,n=s.depth!==void 0?s.depth:!0,o=s.stencil!==void 0?s.stencil:!0,a=s.antialias!==void 0?s.antialias:!1,r=s.premultipliedAlpha!==void 0?s.premultipliedAlpha:!0,l=s.preserveDrawingBuffer!==void 0?s.preserveDrawingBuffer:!1,d=s.powerPreference!==void 0?s.powerPreference:"default",h=s.failIfMajorPerformanceCaveat!==void 0?s.failIfMajorPerformanceCaveat:!1;let f;t!==null?f=t.getContextAttributes().alpha:f=s.alpha!==void 0?s.alpha:!1;let _=null,g=null;const b=[],w=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=cC,this.useLegacyLights=!0,this.toneMapping=Og,this.toneMappingExposure=1;const x=this;let v=!1,T=0,D=0,C=null,I=-1,N=null;const F=new KI,G=new KI;let L=null,B=e.width,W=e.height,oe=1,se=null,Y=null;const q=new KI(0,0,B,W),ie=new KI(0,0,B,W);let me=!1;const Q=new Si;let K=!1,le=!1,de=null;const ve=new gI,$=new H,z={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function ne(){return C===null?oe:1}let V=t;function ye(A,ee){for(let ue=0;ue<A.length;ue++){const J=A[ue],he=e.getContext(J,ee);if(he!==null)return he}return null}try{const A={alpha:!0,depth:n,stencil:o,antialias:a,premultipliedAlpha:r,preserveDrawingBuffer:l,powerPreference:d,failIfMajorPerformanceCaveat:h};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${Mi}`),e.addEventListener("webglcontextlost",Ee,!1),e.addEventListener("webglcontextrestored",Ce,!1),e.addEventListener("webglcontextcreationerror",Pe,!1),V===null){const ee=["webgl2","webgl","experimental-webgl"];if(x.isWebGL1Renderer===!0&&ee.shift(),V=ye(ee,A),V===null)throw ye(ee)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}V.getShaderPrecisionFormat===void 0&&(V.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(A){throw console.error("THREE.WebGLRenderer: "+A.message),A}let Se,Le,De,Oe,ke,Ve,je,$t,jt,Ot,_t,pt,vt,cn,Mn,U,R,ce,we,be,Re,Fe,Ie,pe;function ze(){Se=new $R(V),Le=new XR(V,Se,s),Se.init(Le),Fe=new sh(V,Se,Le),De=new Lt(V,Se,Le),Oe=new gy,ke=new yt,Ve=new qt(V,Se,De,ke,Le,Fe,Oe),je=new jR(x),$t=new _R(x),jt=new w0(V,Le),Ie=new VR(V,Se,jt,Le),Ot=new Ay(V,jt,Oe,Ie),_t=new Ey(V,Ot,jt,Oe),we=new Qy(V,Le,Ve),U=new PR(ke),pt=new Rt(x,je,$t,Se,Le,Ie,U),vt=new lt(x,ke),cn=new Ft,Mn=new Ut(Se,Le),ce=new TR(x,je,$t,De,_t,f,r),R=new Yt(x,_t,Le),pe=new xt(V,Oe,Le,De),be=new ZR(V,Se,Oe,Le),Re=new Iy(V,Se,Oe,Le),Oe.programs=pt.programs,x.capabilities=Le,x.extensions=Se,x.properties=ke,x.renderLists=cn,x.shadowMap=R,x.state=De,x.info=Oe}ze();const ge=new Ht(x,V);this.xr=ge,this.getContext=function(){return V},this.getContextAttributes=function(){return V.getContextAttributes()},this.forceContextLoss=function(){const A=Se.get("WEBGL_lose_context");A&&A.loseContext()},this.forceContextRestore=function(){const A=Se.get("WEBGL_lose_context");A&&A.restoreContext()},this.getPixelRatio=function(){return oe},this.setPixelRatio=function(A){A!==void 0&&(oe=A,this.setSize(B,W,!1))},this.getSize=function(A){return A.set(B,W)},this.setSize=function(A,ee,ue=!0){if(ge.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}B=A,W=ee,e.width=Math.floor(A*oe),e.height=Math.floor(ee*oe),ue===!0&&(e.style.width=A+"px",e.style.height=ee+"px"),this.setViewport(0,0,A,ee)},this.getDrawingBufferSize=function(A){return A.set(B*oe,W*oe).floor()},this.setDrawingBufferSize=function(A,ee,ue){B=A,W=ee,oe=ue,e.width=Math.floor(A*ue),e.height=Math.floor(ee*ue),this.setViewport(0,0,A,ee)},this.getCurrentViewport=function(A){return A.copy(F)},this.getViewport=function(A){return A.copy(q)},this.setViewport=function(A,ee,ue,J){A.isVector4?q.set(A.x,A.y,A.z,A.w):q.set(A,ee,ue,J),De.viewport(F.copy(q).multiplyScalar(oe).floor())},this.getScissor=function(A){return A.copy(ie)},this.setScissor=function(A,ee,ue,J){A.isVector4?ie.set(A.x,A.y,A.z,A.w):ie.set(A,ee,ue,J),De.scissor(G.copy(ie).multiplyScalar(oe).floor())},this.getScissorTest=function(){return me},this.setScissorTest=function(A){De.setScissorTest(me=A)},this.setOpaqueSort=function(A){se=A},this.setTransparentSort=function(A){Y=A},this.getClearColor=function(A){return A.copy(ce.getClearColor())},this.setClearColor=function(){ce.setClearColor.apply(ce,arguments)},this.getClearAlpha=function(){return ce.getClearAlpha()},this.setClearAlpha=function(){ce.setClearAlpha.apply(ce,arguments)},this.clear=function(A=!0,ee=!0,ue=!0){let J=0;A&&(J|=16384),ee&&(J|=256),ue&&(J|=1024),V.clear(J)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",Ee,!1),e.removeEventListener("webglcontextrestored",Ce,!1),e.removeEventListener("webglcontextcreationerror",Pe,!1),cn.dispose(),Mn.dispose(),ke.dispose(),je.dispose(),$t.dispose(),_t.dispose(),Ie.dispose(),pe.dispose(),pt.dispose(),ge.dispose(),ge.removeEventListener("sessionstart",Z),ge.removeEventListener("sessionend",ae),de&&(de.dispose(),de=null),xe.stop()};function Ee(A){A.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),v=!0}function Ce(){console.log("THREE.WebGLRenderer: Context Restored."),v=!1;const A=Oe.autoReset,ee=R.enabled,ue=R.autoUpdate,J=R.needsUpdate,he=R.type;ze(),Oe.autoReset=A,R.enabled=ee,R.autoUpdate=ue,R.needsUpdate=J,R.type=he}function Pe(A){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",A.statusMessage)}function $e(A){const ee=A.target;ee.removeEventListener("dispose",$e),mt(ee)}function mt(A){en(A),ke.remove(A)}function en(A){const ee=ke.get(A).programs;ee!==void 0&&(ee.forEach(function(ue){pt.releaseProgram(ue)}),A.isShaderMaterial&&pt.releaseShaderCache(A))}this.renderBufferDirect=function(A,ee,ue,J,he,Be){ee===null&&(ee=z);const We=he.isMesh&&he.matrixWorld.determinant()<0,qe=Vn(A,ee,ue,J,he);De.setMaterial(J,We);let Ke=ue.index,Pt=1;J.wireframe===!0&&(Ke=Ot.getWireframeAttribute(ue),Pt=2);const Ye=ue.drawRange,Qe=ue.attributes.position;let an=Ye.start*Pt,yn=(Ye.start+Ye.count)*Pt;Be!==null&&(an=Math.max(an,Be.start*Pt),yn=Math.min(yn,(Be.start+Be.count)*Pt)),Ke!==null?(an=Math.max(an,0),yn=Math.min(yn,Ke.count)):Qe!=null&&(an=Math.max(an,0),yn=Math.min(yn,Qe.count));const In=yn-an;if(In<0||In===1/0)return;Ie.setup(he,J,qe,ue,Ke);let Bn,un=be;if(Ke!==null&&(Bn=jt.get(Ke),un=Re,un.setIndex(Bn)),he.isMesh)J.wireframe===!0?(De.setLineWidth(J.wireframeLinewidth*ne()),un.setMode(1)):un.setMode(4);else if(he.isLine){let ut=J.linewidth;ut===void 0&&(ut=1),De.setLineWidth(ut*ne()),he.isLineSegments?un.setMode(1):he.isLineLoop?un.setMode(2):un.setMode(3)}else he.isPoints?un.setMode(0):he.isSprite&&un.setMode(4);if(he.isInstancedMesh)un.renderInstances(an,In,he.count);else if(ue.isInstancedBufferGeometry){const ut=ue._maxInstanceCount!==void 0?ue._maxInstanceCount:1/0,bi=Math.min(ue.instanceCount,ut);un.renderInstances(an,In,bi)}else un.render(an,In)},this.compile=function(A,ee){function ue(J,he,Be){J.transparent===!0&&J.side===AC&&J.forceSinglePass===!1?(J.side=Gg,J.needsUpdate=!0,xn(J,he,Be),J.side=QC,J.needsUpdate=!0,xn(J,he,Be),J.side=AC):xn(J,he,Be)}g=Mn.get(A),g.init(),w.push(g),A.traverseVisible(function(J){J.isLight&&J.layers.test(ee.layers)&&(g.pushLight(J),J.castShadow&&g.pushShadow(J))}),g.setupLights(x.useLegacyLights),A.traverse(function(J){const he=J.material;if(he)if(Array.isArray(he))for(let Be=0;Be<he.length;Be++){const We=he[Be];ue(We,A,J)}else ue(he,A,J)}),w.pop(),g=null};let O=null;function X(A){O&&O(A)}function Z(){xe.stop()}function ae(){xe.start()}const xe=new Qh;xe.setAnimationLoop(X),typeof self<"u"&&xe.setContext(self),this.setAnimationLoop=function(A){O=A,ge.setAnimationLoop(A),A===null?xe.stop():xe.start()},ge.addEventListener("sessionstart",Z),ge.addEventListener("sessionend",ae),this.render=function(A,ee){if(ee!==void 0&&ee.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(v===!0)return;A.matrixWorldAutoUpdate===!0&&A.updateMatrixWorld(),ee.parent===null&&ee.matrixWorldAutoUpdate===!0&&ee.updateMatrixWorld(),ge.enabled===!0&&ge.isPresenting===!0&&(ge.cameraAutoUpdate===!0&&ge.updateCamera(ee),ee=ge.getCamera()),A.isScene===!0&&A.onBeforeRender(x,A,ee,C),g=Mn.get(A,w.length),g.init(),w.push(g),ve.multiplyMatrices(ee.projectionMatrix,ee.matrixWorldInverse),Q.setFromProjectionMatrix(ve),le=this.localClippingEnabled,K=U.init(this.clippingPlanes,le),_=cn.get(A,b.length),_.init(),b.push(_),He(A,ee,0,x.sortObjects),_.finish(),x.sortObjects===!0&&_.sort(se,Y),K===!0&&U.beginShadows();const ue=g.state.shadowsArray;if(R.render(ue,A,ee),K===!0&&U.endShadows(),this.info.autoReset===!0&&this.info.reset(),ce.render(_,A),g.setupLights(x.useLegacyLights),ee.isArrayCamera){const J=ee.cameras;for(let he=0,Be=J.length;he<Be;he++){const We=J[he];Ze(_,A,We,We.viewport)}}else Ze(_,A,ee);C!==null&&(Ve.updateMultisampleRenderTarget(C),Ve.updateRenderTargetMipmap(C)),A.isScene===!0&&A.onAfterRender(x,A,ee),Ie.resetDefaultState(),I=-1,N=null,w.pop(),w.length>0?g=w[w.length-1]:g=null,b.pop(),b.length>0?_=b[b.length-1]:_=null};function He(A,ee,ue,J){if(A.visible===!1)return;if(A.layers.test(ee.layers)){if(A.isGroup)ue=A.renderOrder;else if(A.isLOD)A.autoUpdate===!0&&A.update(ee);else if(A.isLight)g.pushLight(A),A.castShadow&&g.pushShadow(A);else if(A.isSprite){if(!A.frustumCulled||Q.intersectsSprite(A)){J&&$.setFromMatrixPosition(A.matrixWorld).applyMatrix4(ve);const Be=_t.update(A),We=A.material;We.visible&&_.push(A,Be,We,ue,$.z,null)}}else if((A.isMesh||A.isLine||A.isPoints)&&(A.isSkinnedMesh&&A.skeleton.frame!==Oe.render.frame&&(A.skeleton.update(),A.skeleton.frame=Oe.render.frame),!A.frustumCulled||Q.intersectsObject(A))){J&&$.setFromMatrixPosition(A.matrixWorld).applyMatrix4(ve);const Be=_t.update(A),We=A.material;if(Array.isArray(We)){const qe=Be.groups;for(let Ke=0,Pt=qe.length;Ke<Pt;Ke++){const Ye=qe[Ke],Qe=We[Ye.materialIndex];Qe&&Qe.visible&&_.push(A,Be,Qe,ue,$.z,Ye)}}else We.visible&&_.push(A,Be,We,ue,$.z,null)}}const he=A.children;for(let Be=0,We=he.length;Be<We;Be++)He(he[Be],ee,ue,J)}function Ze(A,ee,ue,J){const he=A.opaque,Be=A.transmissive,We=A.transparent;g.setupLightsView(ue),K===!0&&U.setGlobalState(x.clippingPlanes,ue),Be.length>0&&nn(he,ee,ue),J&&De.viewport(F.copy(J)),he.length>0&&pn(he,ee,ue),Be.length>0&&pn(Be,ee,ue),We.length>0&&pn(We,ee,ue),De.buffers.depth.setTest(!0),De.buffers.depth.setMask(!0),De.buffers.color.setMask(!0),De.setPolygonOffset(!1)}function nn(A,ee,ue){const J=Le.isWebGL2;de===null&&(de=new qg(1024,1024,{generateMipmaps:!0,type:Se.has("EXT_color_buffer_half_float")?fB:eC,minFilter:SC,samples:J&&a===!0?4:0}));const he=x.getRenderTarget();x.setRenderTarget(de),x.clear();const Be=x.toneMapping;x.toneMapping=Og,pn(A,ee,ue),x.toneMapping=Be,Ve.updateMultisampleRenderTarget(de),Ve.updateRenderTargetMipmap(de),x.setRenderTarget(he)}function pn(A,ee,ue){const J=ee.isScene===!0?ee.overrideMaterial:null;for(let he=0,Be=A.length;he<Be;he++){const We=A[he],qe=We.object,Ke=We.geometry,Pt=J===null?We.material:J,Ye=We.group;qe.layers.test(ue.layers)&&Tt(qe,ee,ue,Ke,Pt,Ye)}}function Tt(A,ee,ue,J,he,Be){A.onBeforeRender(x,ee,ue,J,he,Be),A.modelViewMatrix.multiplyMatrices(ue.matrixWorldInverse,A.matrixWorld),A.normalMatrix.getNormalMatrix(A.modelViewMatrix),he.onBeforeRender(x,ee,ue,J,A,Be),he.transparent===!0&&he.side===AC&&he.forceSinglePass===!1?(he.side=Gg,he.needsUpdate=!0,x.renderBufferDirect(ue,ee,J,he,A,Be),he.side=QC,he.needsUpdate=!0,x.renderBufferDirect(ue,ee,J,he,A,Be),he.side=AC):x.renderBufferDirect(ue,ee,J,he,A,Be),A.onAfterRender(x,ee,ue,J,he,Be)}function xn(A,ee,ue){ee.isScene!==!0&&(ee=z);const J=ke.get(A),he=g.state.lights,Be=g.state.shadowsArray,We=he.state.version,qe=pt.getParameters(A,he.state,Be,ee,ue),Ke=pt.getProgramCacheKey(qe);let Pt=J.programs;J.environment=A.isMeshStandardMaterial?ee.environment:null,J.fog=ee.fog,J.envMap=(A.isMeshStandardMaterial?$t:je).get(A.envMap||J.environment),Pt===void 0&&(A.addEventListener("dispose",$e),Pt=new Map,J.programs=Pt);let Ye=Pt.get(Ke);if(Ye!==void 0){if(J.currentProgram===Ye&&J.lightsStateVersion===We)return Cn(A,qe),Ye}else qe.uniforms=pt.getUniforms(A),A.onBuild(ue,qe,x),A.onBeforeCompile(qe,x),Ye=pt.acquireProgram(qe,Ke),Pt.set(Ke,Ye),J.uniforms=qe.uniforms;const Qe=J.uniforms;(!A.isShaderMaterial&&!A.isRawShaderMaterial||A.clipping===!0)&&(Qe.clippingPlanes=U.uniform),Cn(A,qe),J.needsLights=$n(A),J.lightsStateVersion=We,J.needsLights&&(Qe.ambientLightColor.value=he.state.ambient,Qe.lightProbe.value=he.state.probe,Qe.directionalLights.value=he.state.directional,Qe.directionalLightShadows.value=he.state.directionalShadow,Qe.spotLights.value=he.state.spot,Qe.spotLightShadows.value=he.state.spotShadow,Qe.rectAreaLights.value=he.state.rectArea,Qe.ltc_1.value=he.state.rectAreaLTC1,Qe.ltc_2.value=he.state.rectAreaLTC2,Qe.pointLights.value=he.state.point,Qe.pointLightShadows.value=he.state.pointShadow,Qe.hemisphereLights.value=he.state.hemi,Qe.directionalShadowMap.value=he.state.directionalShadowMap,Qe.directionalShadowMatrix.value=he.state.directionalShadowMatrix,Qe.spotShadowMap.value=he.state.spotShadowMap,Qe.spotLightMatrix.value=he.state.spotLightMatrix,Qe.spotLightMap.value=he.state.spotLightMap,Qe.pointShadowMap.value=he.state.pointShadowMap,Qe.pointShadowMatrix.value=he.state.pointShadowMatrix);const an=Ye.getUniforms(),yn=ai.seqWithValue(an.seq,Qe);return J.currentProgram=Ye,J.uniformsList=yn,Ye}function Cn(A,ee){const ue=ke.get(A);ue.outputEncoding=ee.outputEncoding,ue.instancing=ee.instancing,ue.skinning=ee.skinning,ue.morphTargets=ee.morphTargets,ue.morphNormals=ee.morphNormals,ue.morphColors=ee.morphColors,ue.morphTargetsCount=ee.morphTargetsCount,ue.numClippingPlanes=ee.numClippingPlanes,ue.numIntersection=ee.numClipIntersection,ue.vertexAlphas=ee.vertexAlphas,ue.vertexTangents=ee.vertexTangents,ue.toneMapping=ee.toneMapping}function Vn(A,ee,ue,J,he){ee.isScene!==!0&&(ee=z),Ve.resetTextureUnits();const Be=ee.fog,We=J.isMeshStandardMaterial?ee.environment:null,qe=C===null?x.outputEncoding:C.isXRRenderTarget===!0?C.texture.encoding:cC,Ke=(J.isMeshStandardMaterial?$t:je).get(J.envMap||We),Pt=J.vertexColors===!0&&!!ue.attributes.color&&ue.attributes.color.itemSize===4,Ye=!!J.normalMap&&!!ue.attributes.tangent,Qe=!!ue.morphAttributes.position,an=!!ue.morphAttributes.normal,yn=!!ue.morphAttributes.color,In=J.toneMapped?x.toneMapping:Og,Bn=ue.morphAttributes.position||ue.morphAttributes.normal||ue.morphAttributes.color,un=Bn!==void 0?Bn.length:0,ut=ke.get(J),bi=g.state.lights;if(K===!0&&(le===!0||A!==N)){const Ln=A===N&&J.id===I;U.setState(J,A,Ln)}let An=!1;J.version===ut.__version?(ut.needsLights&&ut.lightsStateVersion!==bi.state.version||ut.outputEncoding!==qe||he.isInstancedMesh&&ut.instancing===!1||!he.isInstancedMesh&&ut.instancing===!0||he.isSkinnedMesh&&ut.skinning===!1||!he.isSkinnedMesh&&ut.skinning===!0||ut.envMap!==Ke||J.fog===!0&&ut.fog!==Be||ut.numClippingPlanes!==void 0&&(ut.numClippingPlanes!==U.numPlanes||ut.numIntersection!==U.numIntersection)||ut.vertexAlphas!==Pt||ut.vertexTangents!==Ye||ut.morphTargets!==Qe||ut.morphNormals!==an||ut.morphColors!==yn||ut.toneMapping!==In||Le.isWebGL2===!0&&ut.morphTargetsCount!==un)&&(An=!0):(An=!0,ut.__version=J.version);let qn=ut.currentProgram;An===!0&&(qn=xn(J,ee,he));let ki=!1,ui=!1,Ri=!1;const wn=qn.getUniforms(),Kn=ut.uniforms;if(De.useProgram(qn.program)&&(ki=!0,ui=!0,Ri=!0),J.id!==I&&(I=J.id,ui=!0),ki||N!==A){if(wn.setValue(V,"projectionMatrix",A.projectionMatrix),Le.logarithmicDepthBuffer&&wn.setValue(V,"logDepthBufFC",2/(Math.log(A.far+1)/Math.LN2)),N!==A&&(N=A,ui=!0,Ri=!0),J.isShaderMaterial||J.isMeshPhongMaterial||J.isMeshToonMaterial||J.isMeshStandardMaterial||J.envMap){const Ln=wn.map.cameraPosition;Ln!==void 0&&Ln.setValue(V,$.setFromMatrixPosition(A.matrixWorld))}(J.isMeshPhongMaterial||J.isMeshToonMaterial||J.isMeshLambertMaterial||J.isMeshBasicMaterial||J.isMeshStandardMaterial||J.isShaderMaterial)&&wn.setValue(V,"isOrthographic",A.isOrthographicCamera===!0),(J.isMeshPhongMaterial||J.isMeshToonMaterial||J.isMeshLambertMaterial||J.isMeshBasicMaterial||J.isMeshStandardMaterial||J.isShaderMaterial||J.isShadowMaterial||he.isSkinnedMesh)&&wn.setValue(V,"viewMatrix",A.matrixWorldInverse)}if(he.isSkinnedMesh){wn.setOptional(V,he,"bindMatrix"),wn.setOptional(V,he,"bindMatrixInverse");const Ln=he.skeleton;Ln&&(Le.floatVertexTextures?(Ln.boneTexture===null&&Ln.computeBoneTexture(),wn.setValue(V,"boneTexture",Ln.boneTexture,Ve),wn.setValue(V,"boneTextureSize",Ln.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const Ii=ue.morphAttributes;if((Ii.position!==void 0||Ii.normal!==void 0||Ii.color!==void 0&&Le.isWebGL2===!0)&&we.update(he,ue,qn),(ui||ut.receiveShadow!==he.receiveShadow)&&(ut.receiveShadow=he.receiveShadow,wn.setValue(V,"receiveShadow",he.receiveShadow)),J.isMeshGouraudMaterial&&J.envMap!==null&&(Kn.envMap.value=Ke,Kn.flipEnvMap.value=Ke.isCubeTexture&&Ke.isRenderTargetTexture===!1?-1:1),ui&&(wn.setValue(V,"toneMappingExposure",x.toneMappingExposure),ut.needsLights&&kn(Kn,Ri),Be&&J.fog===!0&&vt.refreshFogUniforms(Kn,Be),vt.refreshMaterialUniforms(Kn,J,oe,W,de),ai.upload(V,ut.uniformsList,Kn,Ve)),J.isShaderMaterial&&J.uniformsNeedUpdate===!0&&(ai.upload(V,ut.uniformsList,Kn,Ve),J.uniformsNeedUpdate=!1),J.isSpriteMaterial&&wn.setValue(V,"center",he.center),wn.setValue(V,"modelViewMatrix",he.modelViewMatrix),wn.setValue(V,"normalMatrix",he.normalMatrix),wn.setValue(V,"modelMatrix",he.matrixWorld),J.isShaderMaterial||J.isRawShaderMaterial){const Ln=J.uniformsGroups;for(let pi=0,Ai=Ln.length;pi<Ai;pi++)if(Le.isWebGL2){const Oi=Ln[pi];pe.update(Oi,qn),pe.bind(Oi,qn)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return qn}function kn(A,ee){A.ambientLightColor.needsUpdate=ee,A.lightProbe.needsUpdate=ee,A.directionalLights.needsUpdate=ee,A.directionalLightShadows.needsUpdate=ee,A.pointLights.needsUpdate=ee,A.pointLightShadows.needsUpdate=ee,A.spotLights.needsUpdate=ee,A.spotLightShadows.needsUpdate=ee,A.rectAreaLights.needsUpdate=ee,A.hemisphereLights.needsUpdate=ee}function $n(A){return A.isMeshLambertMaterial||A.isMeshToonMaterial||A.isMeshPhongMaterial||A.isMeshStandardMaterial||A.isShadowMaterial||A.isShaderMaterial&&A.lights===!0}this.getActiveCubeFace=function(){return T},this.getActiveMipmapLevel=function(){return D},this.getRenderTarget=function(){return C},this.setRenderTargetTextures=function(A,ee,ue){ke.get(A.texture).__webglTexture=ee,ke.get(A.depthTexture).__webglTexture=ue;const J=ke.get(A);J.__hasExternalTextures=!0,J.__hasExternalTextures&&(J.__autoAllocateDepthBuffer=ue===void 0,J.__autoAllocateDepthBuffer||Se.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),J.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(A,ee){const ue=ke.get(A);ue.__webglFramebuffer=ee,ue.__useDefaultFramebuffer=ee===void 0},this.setRenderTarget=function(A,ee=0,ue=0){C=A,T=ee,D=ue;let J=!0,he=null,Be=!1,We=!1;if(A){const qe=ke.get(A);qe.__useDefaultFramebuffer!==void 0?(De.bindFramebuffer(36160,null),J=!1):qe.__webglFramebuffer===void 0?Ve.setupRenderTarget(A):qe.__hasExternalTextures&&Ve.rebindTextures(A,ke.get(A.texture).__webglTexture,ke.get(A.depthTexture).__webglTexture);const Ke=A.texture;(Ke.isData3DTexture||Ke.isDataArrayTexture||Ke.isCompressedArrayTexture)&&(We=!0);const Pt=ke.get(A).__webglFramebuffer;A.isWebGLCubeRenderTarget?(he=Pt[ee],Be=!0):Le.isWebGL2&&A.samples>0&&Ve.useMultisampledRTT(A)===!1?he=ke.get(A).__webglMultisampledFramebuffer:he=Pt,F.copy(A.viewport),G.copy(A.scissor),L=A.scissorTest}else F.copy(q).multiplyScalar(oe).floor(),G.copy(ie).multiplyScalar(oe).floor(),L=me;if(De.bindFramebuffer(36160,he)&&Le.drawBuffers&&J&&De.drawBuffers(A,he),De.viewport(F),De.scissor(G),De.setScissorTest(L),Be){const qe=ke.get(A.texture);V.framebufferTexture2D(36160,36064,34069+ee,qe.__webglTexture,ue)}else if(We){const qe=ke.get(A.texture),Ke=ee||0;V.framebufferTextureLayer(36160,36064,qe.__webglTexture,ue||0,Ke)}I=-1},this.readRenderTargetPixels=function(A,ee,ue,J,he,Be,We){if(!(A&&A.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let qe=ke.get(A).__webglFramebuffer;if(A.isWebGLCubeRenderTarget&&We!==void 0&&(qe=qe[We]),qe){De.bindFramebuffer(36160,qe);try{const Ke=A.texture,Pt=Ke.format,Ye=Ke.type;if(Pt!==Ng&&Fe.convert(Pt)!==V.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const Qe=Ye===fB&&(Se.has("EXT_color_buffer_half_float")||Le.isWebGL2&&Se.has("EXT_color_buffer_float"));if(Ye!==eC&&Fe.convert(Ye)!==V.getParameter(35738)&&!(Ye===IC&&(Le.isWebGL2||Se.has("OES_texture_float")||Se.has("WEBGL_color_buffer_float")))&&!Qe){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}ee>=0&&ee<=A.width-J&&ue>=0&&ue<=A.height-he&&V.readPixels(ee,ue,J,he,Fe.convert(Pt),Fe.convert(Ye),Be)}finally{const Ke=C!==null?ke.get(C).__webglFramebuffer:null;De.bindFramebuffer(36160,Ke)}}},this.copyFramebufferToTexture=function(A,ee,ue=0){const J=Math.pow(2,-ue),he=Math.floor(ee.image.width*J),Be=Math.floor(ee.image.height*J);Ve.setTexture2D(ee,0),V.copyTexSubImage2D(3553,ue,0,0,A.x,A.y,he,Be),De.unbindTexture()},this.copyTextureToTexture=function(A,ee,ue,J=0){const he=ee.image.width,Be=ee.image.height,We=Fe.convert(ue.format),qe=Fe.convert(ue.type);Ve.setTexture2D(ue,0),V.pixelStorei(37440,ue.flipY),V.pixelStorei(37441,ue.premultiplyAlpha),V.pixelStorei(3317,ue.unpackAlignment),ee.isDataTexture?V.texSubImage2D(3553,J,A.x,A.y,he,Be,We,qe,ee.image.data):ee.isCompressedTexture?V.compressedTexSubImage2D(3553,J,A.x,A.y,ee.mipmaps[0].width,ee.mipmaps[0].height,We,ee.mipmaps[0].data):V.texSubImage2D(3553,J,A.x,A.y,We,qe,ee.image),J===0&&ue.generateMipmaps&&V.generateMipmap(3553),De.unbindTexture()},this.copyTextureToTexture3D=function(A,ee,ue,J,he=0){if(x.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const Be=A.max.x-A.min.x+1,We=A.max.y-A.min.y+1,qe=A.max.z-A.min.z+1,Ke=Fe.convert(J.format),Pt=Fe.convert(J.type);let Ye;if(J.isData3DTexture)Ve.setTexture3D(J,0),Ye=32879;else if(J.isDataArrayTexture)Ve.setTexture2DArray(J,0),Ye=35866;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}V.pixelStorei(37440,J.flipY),V.pixelStorei(37441,J.premultiplyAlpha),V.pixelStorei(3317,J.unpackAlignment);const Qe=V.getParameter(3314),an=V.getParameter(32878),yn=V.getParameter(3316),In=V.getParameter(3315),Bn=V.getParameter(32877),un=ue.isCompressedTexture?ue.mipmaps[0]:ue.image;V.pixelStorei(3314,un.width),V.pixelStorei(32878,un.height),V.pixelStorei(3316,A.min.x),V.pixelStorei(3315,A.min.y),V.pixelStorei(32877,A.min.z),ue.isDataTexture||ue.isData3DTexture?V.texSubImage3D(Ye,he,ee.x,ee.y,ee.z,Be,We,qe,Ke,Pt,un.data):ue.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),V.compressedTexSubImage3D(Ye,he,ee.x,ee.y,ee.z,Be,We,qe,Ke,un.data)):V.texSubImage3D(Ye,he,ee.x,ee.y,ee.z,Be,We,qe,Ke,Pt,un),V.pixelStorei(3314,Qe),V.pixelStorei(32878,an),V.pixelStorei(3316,yn),V.pixelStorei(3315,In),V.pixelStorei(32877,Bn),he===0&&J.generateMipmaps&&V.generateMipmap(Ye),De.unbindTexture()},this.initTexture=function(A){A.isCubeTexture?Ve.setTextureCube(A,0):A.isData3DTexture?Ve.setTexture3D(A,0):A.isDataArrayTexture||A.isCompressedArrayTexture?Ve.setTexture2DArray(A,0):Ve.setTexture2D(A,0),De.unbindTexture()},this.resetState=function(){T=0,D=0,C=null,De.reset(),Ie.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}Object.defineProperties(Jo.prototype,{physicallyCorrectLights:{get:function(){return console.warn("THREE.WebGLRenderer: the property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),!this.useLegacyLights},set:function(s){console.warn("THREE.WebGLRenderer: the property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),this.useLegacyLights=!s}}});class Gh extends Jo{}Gh.prototype.isWebGL1Renderer=!0;function Fg(s,e,t){return Wo(s)?new s.constructor(s.subarray(e,t!==void 0?t:s.length)):s.slice(e,t)}function ZC(s,e,t){return!s||!t&&s.constructor===e?s:typeof e.BYTES_PER_ELEMENT=="number"?new e(s):Array.prototype.slice.call(s)}function Wo(s){return ArrayBuffer.isView(s)&&!(s instanceof DataView)}class $Q{constructor(e,t,n,o){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=o!==void 0?o:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,o=t[n],a=t[n-1];e:{t:{let r;n:{i:if(!(e<o)){for(let l=n+2;;){if(o===void 0){if(e<a)break i;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===l)break;if(a=o,o=t[++n],e<o)break t}r=t.length;break n}if(!(e>=a)){const l=t[1];e<l&&(n=2,a=l);for(let d=n-2;;){if(a===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===d)break;if(o=a,a=t[--n-1],e>=a)break t}r=n,n=0;break n}break e}for(;n<r;){const l=n+r>>>1;e<t[l]?r=l:n=l+1}if(o=t[n],a=t[n-1],a===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(o===void 0)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,a,o)}return this.interpolate_(n,a,e,o)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,o=this.valueSize,a=e*o;for(let r=0;r!==o;++r)t[r]=n[a+r];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class uh extends $Q{constructor(e,t,n,o){super(e,t,n,o),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:WC,endingEnd:WC}}intervalChanged_(e,t,n){const o=this.parameterPositions;let a=e-2,r=e+1,l=o[a],d=o[r];if(l===void 0)switch(this.getSettings_().endingStart){case TC:a=e,l=2*t-n;break;case rQ:a=o.length-2,l=t+o[a]-o[a+1];break;default:a=e,l=n}if(d===void 0)switch(this.getSettings_().endingEnd){case TC:r=e,d=2*n-t;break;case rQ:r=1,d=n+o[1]-o[0];break;default:r=e-1,d=t}const h=(n-t)*.5,f=this.valueSize;this._weightPrev=h/(t-l),this._weightNext=h/(d-n),this._offsetPrev=a*f,this._offsetNext=r*f}interpolate_(e,t,n,o){const a=this.resultBuffer,r=this.sampleValues,l=this.valueSize,d=e*l,h=d-l,f=this._offsetPrev,_=this._offsetNext,g=this._weightPrev,b=this._weightNext,w=(n-t)/(o-t),x=w*w,v=x*w,T=-g*v+2*g*x-g*w,D=(1+g)*v+(-1.5-2*g)*x+(-.5+g)*w+1,C=(-1-b)*v+(1.5+b)*x+.5*w,I=b*v-b*x;for(let N=0;N!==l;++N)a[N]=T*r[f+N]+D*r[h+N]+C*r[d+N]+I*r[_+N];return a}}class Vo extends $Q{constructor(e,t,n,o){super(e,t,n,o)}interpolate_(e,t,n,o){const a=this.resultBuffer,r=this.sampleValues,l=this.valueSize,d=e*l,h=d-l,f=(n-t)/(o-t),_=1-f;for(let g=0;g!==l;++g)a[g]=r[h+g]*_+r[d+g]*f;return a}}class Wh extends $Q{constructor(e,t,n,o){super(e,t,n,o)}interpolate_(e){return this.copySampleValue_(e-1)}}class Hg{constructor(e,t,n,o){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=ZC(t,this.TimeBufferType),this.values=ZC(n,this.ValueBufferType),this.setInterpolation(o||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:ZC(e.times,Array),values:ZC(e.values,Array)};const o=e.getInterpolation();o!==e.DefaultInterpolation&&(n.interpolation=o)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new Wh(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new Vo(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new uh(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case eQ:t=this.InterpolantFactoryMethodDiscrete;break;case cQ:t=this.InterpolantFactoryMethodLinear;break;case si:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return eQ;case this.InterpolantFactoryMethodLinear:return cQ;case this.InterpolantFactoryMethodSmooth:return si}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let n=0,o=t.length;n!==o;++n)t[n]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let n=0,o=t.length;n!==o;++n)t[n]*=e}return this}trim(e,t){const n=this.times,o=n.length;let a=0,r=o-1;for(;a!==o&&n[a]<e;)++a;for(;r!==-1&&n[r]>t;)--r;if(++r,a!==0||r!==o){a>=r&&(r=Math.max(r,1),a=r-1);const l=this.getValueSize();this.times=Fg(n,a,r),this.values=Fg(this.values,a*l,r*l)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,o=this.values,a=n.length;a===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let r=null;for(let l=0;l!==a;l++){const d=n[l];if(typeof d=="number"&&isNaN(d)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,l,d),e=!1;break}if(r!==null&&r>d){console.error("THREE.KeyframeTrack: Out of order keys.",this,l,d,r),e=!1;break}r=d}if(o!==void 0&&Wo(o))for(let l=0,d=o.length;l!==d;++l){const h=o[l];if(isNaN(h)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,l,h),e=!1;break}}return e}optimize(){const e=Fg(this.times),t=Fg(this.values),n=this.getValueSize(),o=this.getInterpolation()===si,a=e.length-1;let r=1;for(let l=1;l<a;++l){let d=!1;const h=e[l],f=e[l+1];if(h!==f&&(l!==1||h!==e[0]))if(o)d=!0;else{const _=l*n,g=_-n,b=_+n;for(let w=0;w!==n;++w){const x=t[_+w];if(x!==t[g+w]||x!==t[b+w]){d=!0;break}}}if(d){if(l!==r){e[r]=e[l];const _=l*n,g=r*n;for(let b=0;b!==n;++b)t[g+b]=t[_+b]}++r}}if(a>0){e[r]=e[a];for(let l=a*n,d=r*n,h=0;h!==n;++h)t[d+h]=t[l+h];++r}return r!==e.length?(this.times=Fg(e,0,r),this.values=Fg(t,0,r*n)):(this.times=e,this.values=t),this}clone(){const e=Fg(this.times,0),t=Fg(this.values,0),n=this.constructor,o=new n(this.name,e,t);return o.createInterpolant=this.createInterpolant,o}}Hg.prototype.TimeBufferType=Float32Array;Hg.prototype.ValueBufferType=Float32Array;Hg.prototype.DefaultInterpolation=cQ;class QB extends Hg{}QB.prototype.ValueTypeName="bool";QB.prototype.ValueBufferType=Array;QB.prototype.DefaultInterpolation=eQ;QB.prototype.InterpolantFactoryMethodLinear=void 0;QB.prototype.InterpolantFactoryMethodSmooth=void 0;class Zo extends Hg{}Zo.prototype.ValueTypeName="color";class dQ extends Hg{}dQ.prototype.ValueTypeName="number";class Th extends $Q{constructor(e,t,n,o){super(e,t,n,o)}interpolate_(e,t,n,o){const a=this.resultBuffer,r=this.sampleValues,l=this.valueSize,d=(n-t)/(o-t);let h=e*l;for(let f=h+l;h!==f;h+=4)Ig.slerpFlat(a,0,r,h-l,r,h,d);return a}}class XB extends Hg{InterpolantFactoryMethodLinear(e){return new Th(this.times,this.values,this.getValueSize(),e)}}XB.prototype.ValueTypeName="quaternion";XB.prototype.DefaultInterpolation=cQ;XB.prototype.InterpolantFactoryMethodSmooth=void 0;class EB extends Hg{}EB.prototype.ValueTypeName="string";EB.prototype.ValueBufferType=Array;EB.prototype.DefaultInterpolation=eQ;EB.prototype.InterpolantFactoryMethodLinear=void 0;EB.prototype.InterpolantFactoryMethodSmooth=void 0;class HQ extends Hg{}HQ.prototype.ValueTypeName="vector";const vo="\\[\\]\\.:\\/",WF=new RegExp("["+vo+"]","g"),zo="[^"+vo+"]",TF="[^"+vo.replace("\\.","")+"]",VF=/((?:WC+[\/:])*)/.source.replace("WC",zo),ZF=/(WCOD+)?/.source.replace("WCOD",TF),XF=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",zo),PF=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",zo),jF=new RegExp("^"+VF+ZF+XF+PF+"$"),vF=["material","materials","bones","map"];class zF{constructor(e,t,n){const o=n||sI.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,o)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,o=this._bindings[n];o!==void 0&&o.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let o=this._targetGroup.nCachedObjects_,a=n.length;o!==a;++o)n[o].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}class sI{constructor(e,t,n){this.path=t,this.parsedPath=n||sI.parseTrackName(t),this.node=sI.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new sI.Composite(e,t,n):new sI(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(WF,"")}static parseTrackName(e){const t=jF.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},o=n.nodeName&&n.nodeName.lastIndexOf(".");if(o!==void 0&&o!==-1){const a=n.nodeName.substring(o+1);vF.indexOf(a)!==-1&&(n.nodeName=n.nodeName.substring(0,o),n.objectName=a)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(a){for(let r=0;r<a.length;r++){const l=a[r];if(l.name===t||l.uuid===t)return l;const d=n(l.children);if(d)return d}return null},o=n(e.children);if(o)return o}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let o=0,a=n.length;o!==a;++o)e[t++]=n[o]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let o=0,a=n.length;o!==a;++o)n[o]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let o=0,a=n.length;o!==a;++o)n[o]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let o=0,a=n.length;o!==a;++o)n[o]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,o=t.propertyName;let a=t.propertyIndex;if(e||(e=sI.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(n){let h=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let f=0;f<e.length;f++)if(e[f].name===h){h=f;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(h!==void 0){if(e[h]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[h]}}const r=e[o];if(r===void 0){const h=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+h+"."+o+" but it wasn't found.",e);return}let l=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?l=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(l=this.Versioning.MatrixWorldNeedsUpdate);let d=this.BindingType.Direct;if(a!==void 0){if(o==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[a]!==void 0&&(a=e.morphTargetDictionary[a])}d=this.BindingType.ArrayElement,this.resolvedProperty=r,this.propertyIndex=a}else r.fromArray!==void 0&&r.toArray!==void 0?(d=this.BindingType.HasFromToArray,this.resolvedProperty=r):Array.isArray(r)?(d=this.BindingType.EntireArray,this.resolvedProperty=r):this.propertyName=o;this.getValue=this.GetterByBindingType[d],this.setValue=this.SetterByBindingTypeAndVersioning[d][l]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}sI.Composite=zF;sI.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};sI.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};sI.prototype.GetterByBindingType=[sI.prototype._getValue_direct,sI.prototype._getValue_array,sI.prototype._getValue_arrayElement,sI.prototype._getValue_toArray];sI.prototype.SetterByBindingTypeAndVersioning=[[sI.prototype._setValue_direct,sI.prototype._setValue_direct_setNeedsUpdate,sI.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[sI.prototype._setValue_array,sI.prototype._setValue_array_setNeedsUpdate,sI.prototype._setValue_array_setMatrixWorldNeedsUpdate],[sI.prototype._setValue_arrayElement,sI.prototype._setValue_arrayElement_setNeedsUpdate,sI.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[sI.prototype._setValue_fromArray,sI.prototype._setValue_fromArray_setNeedsUpdate,sI.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Mi}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Mi);const Jg=class extends Wg{constructor(s,e=1){super(),AI(this,"_zee",new H(0,0,1)),AI(this,"_euler",new uB),AI(this,"_q0",new Ig),AI(this,"_q1",new Ig(-Math.sqrt(.5),0,0,Math.sqrt(.5))),AI(this,"_changeEvent",{type:"change"}),AI(this,"_EPS",1e-6),AI(this,"_lastQuaternion",new Ig),AI(this,"_orientationChangeEventName"),AI(this,"_lastOrientation"),AI(this,"_TWO_PI",2*Math.PI),AI(this,"_HALF_PI",.5*Math.PI),AI(this,"object"),AI(this,"enabled"),AI(this,"deviceOrientation",{}),AI(this,"screenOrientation"),AI(this,"alphaOffset"),AI(this,"smoothingFactor"),window.isSecureContext===!1&&console.error("DeviceOrientationEvent is only available in secure contexts (https)"),Jg.scope=this,this.object=s,this.object.rotation.reorder("YXZ"),this.enabled=!0,this.screenOrientation=0,this.alphaOffset=0,this._orientationChangeEventName="ondeviceorientationabsolute"in window?"deviceorientationabsolute":"deviceorientation",this.smoothingFactor=e}onDeviceOrientationChangeEvent(s){console.log("报错了？"),Jg.scope.deviceOrientation=s}onScreenOrientationChangeEvent(){this.screenOrientation=window.orientation||0}setObjectQuaternion(s,e,t,n,o){this._euler.set(t,e,-n,"YXZ"),s.setFromEuler(this._euler),s.multiply(this._q1),s.multiply(this._q0.setFromAxisAngle(this._zee,-o))}connect(){if(this.onScreenOrientationChangeEvent(),dK()===!0&&DeviceOrientationEvent!==void 0&&typeof DeviceOrientationEvent.requestPermission=="function"){let s=document.createElement("button");s.innerText="AR MODE",s.style.position="absolute",s.style.zIndex="2000",s.addEventListener("click",()=>{DeviceOrientationEvent.requestPermission().then(e=>{e==="granted"&&(window.addEventListener("orientationchange",this.onScreenOrientationChangeEvent),window.addEventListener(this._orientationChangeEventName,this.onDeviceOrientationChangeEvent))}).catch(function(e){console.error("DeviceOrientationControls: Unable to use DeviceOrientation API:",e)}),s.style.display="none"}),document.body.appendChild(s)}else window.addEventListener("orientationchange",this.onScreenOrientationChangeEvent),window.addEventListener(this._orientationChangeEventName,this.onDeviceOrientationChangeEvent)}disconnect(){window.removeEventListener("orientationchange",this.onScreenOrientationChangeEvent),window.removeEventListener(this._orientationChangeEventName,this.onDeviceOrientationChangeEvent),this.enabled=!1}update(){if(this.enabled!==!1&&(console.log("update:",Jg.scope.deviceOrientation),this.deviceOrientation)){let s=Jg.scope.deviceOrientation.alpha?CC.degToRad(Jg.scope.deviceOrientation.alpha)+this.alphaOffset:0,e=Jg.scope.deviceOrientation.beta?CC.degToRad(Jg.scope.deviceOrientation.beta):0,t=Jg.scope.deviceOrientation.gamma?CC.degToRad(Jg.scope.deviceOrientation.gamma):0;const n=this.screenOrientation?CC.degToRad(this.screenOrientation):0;if(console.log(s,e,t,n),this.smoothingFactor<1)if(this._lastOrientation){const o=this.smoothingFactor;s=this._getSmoothedAngle(s,this._lastOrientation.alpha,o),e=this._getSmoothedAngle(e+Math.PI,this._lastOrientation.beta,o),t=this._getSmoothedAngle(t+this._HALF_PI,this._lastOrientation.gamma,o,Math.PI)}else e+=Math.PI,t+=this._HALF_PI;this._lastOrientation={alpha:s,beta:e,gamma:t},this.setObjectQuaternion(this.object.quaternion,s,this.smoothingFactor<1?e-Math.PI:e,this.smoothingFactor<1?t-this._HALF_PI:t,n),8*(1-this._lastQuaternion.dot(this.object.quaternion))>this._EPS&&(this._lastQuaternion.copy(this.object.quaternion),this.dispatchEvent(this._changeEvent))}}_orderAngle(s,e,t=this._TWO_PI){return e>s&&Math.abs(e-s)<t/2||s>e&&Math.abs(e-s)>t/2?{left:s,right:e}:{left:e,right:s}}_getSmoothedAngle(s,e,t,n=this._TWO_PI){const o=this._orderAngle(s,e,n),a=o.left,r=o.right;o.left=0,o.right-=a,o.right<0&&(o.right+=n);let l=r==e?(1-t)*o.right+t*o.left:t*o.right+(1-t)*o.left;return l+=a,l>=n&&(l-=n),l}dispose(){this.disconnect()}};let UD=Jg;AI(UD,"scope");var commonjsGlobal=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function getDefaultExportFromCjs(s){return s&&s.__esModule&&Object.prototype.hasOwnProperty.call(s,"default")?s.default:s}var vconsole_minExports={},vconsole_min={get exports(){return vconsole_minExports},set exports(s){vconsole_minExports=s}};/*!
 * vConsole v3.15.0 (https://github.com/Tencent/vConsole)
 *
 * Tencent is pleased to support the open source community by making vConsole available.
 * Copyright (C) 2017 THL A29 Limited, a Tencent company. All rights reserved.
 * Licensed under the MIT License (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at
 * http://opensource.org/licenses/MIT
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */(function(module,exports){(function(s,e){module.exports=e()})(commonjsGlobal||self,function(){return function(){var __webpack_modules__={4264:function(s,e,t){s.exports=t(7588)},5036:function(s,e,t){t(1719),t(5677),t(6394),t(5334),t(6969),t(2021),t(8328),t(2129);var n=t(1287);s.exports=n.Promise},2582:function(s,e,t){t(1646),t(6394),t(2004),t(462),t(8407),t(2429),t(1172),t(8288),t(1274),t(8201),t(6626),t(3211),t(9952),t(15),t(9831),t(7521),t(2972),t(6956),t(5222),t(2257);var n=t(1287);s.exports=n.Symbol},8257:function(s,e,t){var n=t(7583),o=t(9212),a=t(5637),r=n.TypeError;s.exports=function(l){if(o(l))return l;throw r(a(l)+" is not a function")}},1186:function(s,e,t){var n=t(7583),o=t(2097),a=t(5637),r=n.TypeError;s.exports=function(l){if(o(l))return l;throw r(a(l)+" is not a constructor")}},9882:function(s,e,t){var n=t(7583),o=t(9212),a=n.String,r=n.TypeError;s.exports=function(l){if(typeof l=="object"||o(l))return l;throw r("Can't set "+a(l)+" as a prototype")}},6288:function(s,e,t){var n=t(3649),o=t(3590),a=t(4615),r=n("unscopables"),l=Array.prototype;l[r]==null&&a.f(l,r,{configurable:!0,value:o(null)}),s.exports=function(d){l[r][d]=!0}},4761:function(s,e,t){var n=t(7583),o=t(2447),a=n.TypeError;s.exports=function(r,l){if(o(l,r))return r;throw a("Incorrect invocation")}},2569:function(s,e,t){var n=t(7583),o=t(794),a=n.String,r=n.TypeError;s.exports=function(l){if(o(l))return l;throw r(a(l)+" is not an object")}},5766:function(s,e,t){var n=t(2977),o=t(6782),a=t(1825),r=function(l){return function(d,h,f){var _,g=n(d),b=a(g),w=o(f,b);if(l&&h!=h){for(;b>w;)if((_=g[w++])!=_)return!0}else for(;b>w;w++)if((l||w in g)&&g[w]===h)return l||w||0;return!l&&-1}};s.exports={includes:r(!0),indexOf:r(!1)}},4805:function(s,e,t){var n=t(2938),o=t(7386),a=t(5044),r=t(1324),l=t(1825),d=t(4822),h=o([].push),f=function(_){var g=_==1,b=_==2,w=_==3,x=_==4,v=_==6,T=_==7,D=_==5||v;return function(C,I,N,F){for(var G,L,B=r(C),W=a(B),oe=n(I,N),se=l(W),Y=0,q=F||d,ie=g?q(C,se):b||T?q(C,0):void 0;se>Y;Y++)if((D||Y in W)&&(L=oe(G=W[Y],Y,B),_))if(g)ie[Y]=L;else if(L)switch(_){case 3:return!0;case 5:return G;case 6:return Y;case 2:h(ie,G)}else switch(_){case 4:return!1;case 7:h(ie,G)}return v?-1:w||x?x:ie}};s.exports={forEach:f(0),map:f(1),filter:f(2),some:f(3),every:f(4),find:f(5),findIndex:f(6),filterReject:f(7)}},9269:function(s,e,t){var n=t(6544),o=t(3649),a=t(4061),r=o("species");s.exports=function(l){return a>=51||!n(function(){var d=[];return(d.constructor={})[r]=function(){return{foo:1}},d[l](Boolean).foo!==1})}},4546:function(s,e,t){var n=t(7583),o=t(6782),a=t(1825),r=t(5999),l=n.Array,d=Math.max;s.exports=function(h,f,_){for(var g=a(h),b=o(f,g),w=o(_===void 0?g:_,g),x=l(d(w-b,0)),v=0;b<w;b++,v++)r(x,v,h[b]);return x.length=v,x}},6917:function(s,e,t){var n=t(7386);s.exports=n([].slice)},5289:function(s,e,t){var n=t(7583),o=t(4521),a=t(2097),r=t(794),l=t(3649)("species"),d=n.Array;s.exports=function(h){var f;return o(h)&&(f=h.constructor,(a(f)&&(f===d||o(f.prototype))||r(f)&&(f=f[l])===null)&&(f=void 0)),f===void 0?d:f}},4822:function(s,e,t){var n=t(5289);s.exports=function(o,a){return new(n(o))(a===0?0:a)}},3616:function(s,e,t){var n=t(3649)("iterator"),o=!1;try{var a=0,r={next:function(){return{done:!!a++}},return:function(){o=!0}};r[n]=function(){return this},Array.from(r,function(){throw 2})}catch{}s.exports=function(l,d){if(!d&&!o)return!1;var h=!1;try{var f={};f[n]=function(){return{next:function(){return{done:h=!0}}}},l(f)}catch{}return h}},9624:function(s,e,t){var n=t(7386),o=n({}.toString),a=n("".slice);s.exports=function(r){return a(o(r),8,-1)}},3058:function(s,e,t){var n=t(7583),o=t(8191),a=t(9212),r=t(9624),l=t(3649)("toStringTag"),d=n.Object,h=r(function(){return arguments}())=="Arguments";s.exports=o?r:function(f){var _,g,b;return f===void 0?"Undefined":f===null?"Null":typeof(g=function(w,x){try{return w[x]}catch{}}(_=d(f),l))=="string"?g:h?r(_):(b=r(_))=="Object"&&a(_.callee)?"Arguments":b}},1509:function(s,e,t){var n=t(7386)("".replace),o=String(Error("zxcasd").stack),a=/\n\s*at [^:]*:[^\n]*/,r=a.test(o);s.exports=function(l,d){if(r&&typeof l=="string")for(;d--;)l=n(l,a,"");return l}},3478:function(s,e,t){var n=t(2870),o=t(929),a=t(6683),r=t(4615);s.exports=function(l,d,h){for(var f=o(d),_=r.f,g=a.f,b=0;b<f.length;b++){var w=f[b];n(l,w)||h&&n(h,w)||_(l,w,g(d,w))}}},926:function(s,e,t){var n=t(6544);s.exports=!n(function(){function o(){}return o.prototype.constructor=null,Object.getPrototypeOf(new o)!==o.prototype})},4683:function(s,e,t){var n=t(2365).IteratorPrototype,o=t(3590),a=t(4677),r=t(8821),l=t(339),d=function(){return this};s.exports=function(h,f,_,g){var b=f+" Iterator";return h.prototype=o(n,{next:a(+!g,_)}),r(h,b,!1,!0),l[b]=d,h}},57:function(s,e,t){var n=t(8494),o=t(4615),a=t(4677);s.exports=n?function(r,l,d){return o.f(r,l,a(1,d))}:function(r,l,d){return r[l]=d,r}},4677:function(s){s.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},5999:function(s,e,t){var n=t(8734),o=t(4615),a=t(4677);s.exports=function(r,l,d){var h=n(l);h in r?o.f(r,h,a(0,d)):r[h]=d}},9012:function(s,e,t){var n=t(7263),o=t(8262),a=t(6268),r=t(4340),l=t(9212),d=t(4683),h=t(729),f=t(7496),_=t(8821),g=t(57),b=t(1270),w=t(3649),x=t(339),v=t(2365),T=r.PROPER,D=r.CONFIGURABLE,C=v.IteratorPrototype,I=v.BUGGY_SAFARI_ITERATORS,N=w("iterator"),F="keys",G="values",L="entries",B=function(){return this};s.exports=function(W,oe,se,Y,q,ie,me){d(se,oe,Y);var Q,K,le,de=function(Se){if(Se===q&&V)return V;if(!I&&Se in z)return z[Se];switch(Se){case F:case G:case L:return function(){return new se(this,Se)}}return function(){return new se(this)}},ve=oe+" Iterator",$=!1,z=W.prototype,ne=z[N]||z["@@iterator"]||q&&z[q],V=!I&&ne||de(q),ye=oe=="Array"&&z.entries||ne;if(ye&&(Q=h(ye.call(new W)))!==Object.prototype&&Q.next&&(a||h(Q)===C||(f?f(Q,C):l(Q[N])||b(Q,N,B)),_(Q,ve,!0,!0),a&&(x[ve]=B)),T&&q==G&&ne&&ne.name!==G&&(!a&&D?g(z,"name",G):($=!0,V=function(){return o(ne,this)})),q)if(K={values:de(G),keys:ie?V:de(F),entries:de(L)},me)for(le in K)(I||$||!(le in z))&&b(z,le,K[le]);else n({target:oe,proto:!0,forced:I||$},K);return a&&!me||z[N]===V||b(z,N,V,{name:q}),x[oe]=V,K}},2219:function(s,e,t){var n=t(1287),o=t(2870),a=t(491),r=t(4615).f;s.exports=function(l){var d=n.Symbol||(n.Symbol={});o(d,l)||r(d,l,{value:a.f(l)})}},8494:function(s,e,t){var n=t(6544);s.exports=!n(function(){return Object.defineProperty({},1,{get:function(){return 7}})[1]!=7})},6668:function(s,e,t){var n=t(7583),o=t(794),a=n.document,r=o(a)&&o(a.createElement);s.exports=function(l){return r?a.createElement(l):{}}},6778:function(s){s.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}},9307:function(s,e,t){var n=t(6668)("span").classList,o=n&&n.constructor&&n.constructor.prototype;s.exports=o===Object.prototype?void 0:o},2274:function(s){s.exports=typeof window=="object"},3256:function(s,e,t){var n=t(6918),o=t(7583);s.exports=/ipad|iphone|ipod/i.test(n)&&o.Pebble!==void 0},7020:function(s,e,t){var n=t(6918);s.exports=/(?:ipad|iphone|ipod).*applewebkit/i.test(n)},5354:function(s,e,t){var n=t(9624),o=t(7583);s.exports=n(o.process)=="process"},6846:function(s,e,t){var n=t(6918);s.exports=/web0s(?!.*chrome)/i.test(n)},6918:function(s,e,t){var n=t(5897);s.exports=n("navigator","userAgent")||""},4061:function(s,e,t){var n,o,a=t(7583),r=t(6918),l=a.process,d=a.Deno,h=l&&l.versions||d&&d.version,f=h&&h.v8;f&&(o=(n=f.split("."))[0]>0&&n[0]<4?1:+(n[0]+n[1])),!o&&r&&(!(n=r.match(/Edge\/(\d+)/))||n[1]>=74)&&(n=r.match(/Chrome\/(\d+)/))&&(o=+n[1]),s.exports=o},5690:function(s){s.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},1178:function(s,e,t){var n=t(6544),o=t(4677);s.exports=!n(function(){var a=Error("a");return!("stack"in a)||(Object.defineProperty(a,"stack",o(1,7)),a.stack!==7)})},7263:function(s,e,t){var n=t(7583),o=t(6683).f,a=t(57),r=t(1270),l=t(460),d=t(3478),h=t(4451);s.exports=function(f,_){var g,b,w,x,v,T=f.target,D=f.global,C=f.stat;if(g=D?n:C?n[T]||l(T,{}):(n[T]||{}).prototype)for(b in _){if(x=_[b],w=f.noTargetGet?(v=o(g,b))&&v.value:g[b],!h(D?b:T+(C?".":"#")+b,f.forced)&&w!==void 0){if(typeof x==typeof w)continue;d(x,w)}(f.sham||w&&w.sham)&&a(x,"sham",!0),r(g,b,x,f)}}},6544:function(s){s.exports=function(e){try{return!!e()}catch{return!0}}},1611:function(s,e,t){var n=t(8987),o=Function.prototype,a=o.apply,r=o.call;s.exports=typeof Reflect=="object"&&Reflect.apply||(n?r.bind(a):function(){return r.apply(a,arguments)})},2938:function(s,e,t){var n=t(7386),o=t(8257),a=t(8987),r=n(n.bind);s.exports=function(l,d){return o(l),d===void 0?l:a?r(l,d):function(){return l.apply(d,arguments)}}},8987:function(s,e,t){var n=t(6544);s.exports=!n(function(){var o=function(){}.bind();return typeof o!="function"||o.hasOwnProperty("prototype")})},8262:function(s,e,t){var n=t(8987),o=Function.prototype.call;s.exports=n?o.bind(o):function(){return o.apply(o,arguments)}},4340:function(s,e,t){var n=t(8494),o=t(2870),a=Function.prototype,r=n&&Object.getOwnPropertyDescriptor,l=o(a,"name"),d=l&&function(){}.name==="something",h=l&&(!n||n&&r(a,"name").configurable);s.exports={EXISTS:l,PROPER:d,CONFIGURABLE:h}},7386:function(s,e,t){var n=t(8987),o=Function.prototype,a=o.bind,r=o.call,l=n&&a.bind(r,r);s.exports=n?function(d){return d&&l(d)}:function(d){return d&&function(){return r.apply(d,arguments)}}},5897:function(s,e,t){var n=t(7583),o=t(9212),a=function(r){return o(r)?r:void 0};s.exports=function(r,l){return arguments.length<2?a(n[r]):n[r]&&n[r][l]}},8272:function(s,e,t){var n=t(3058),o=t(911),a=t(339),r=t(3649)("iterator");s.exports=function(l){if(l!=null)return o(l,r)||o(l,"@@iterator")||a[n(l)]}},6307:function(s,e,t){var n=t(7583),o=t(8262),a=t(8257),r=t(2569),l=t(5637),d=t(8272),h=n.TypeError;s.exports=function(f,_){var g=arguments.length<2?d(f):_;if(a(g))return r(o(g,f));throw h(l(f)+" is not iterable")}},911:function(s,e,t){var n=t(8257);s.exports=function(o,a){var r=o[a];return r==null?void 0:n(r)}},7583:function(s,e,t){var n=function(o){return o&&o.Math==Math&&o};s.exports=n(typeof globalThis=="object"&&globalThis)||n(typeof window=="object"&&window)||n(typeof self=="object"&&self)||n(typeof t.g=="object"&&t.g)||function(){return this}()||Function("return this")()},2870:function(s,e,t){var n=t(7386),o=t(1324),a=n({}.hasOwnProperty);s.exports=Object.hasOwn||function(r,l){return a(o(r),l)}},4639:function(s){s.exports={}},2716:function(s,e,t){var n=t(7583);s.exports=function(o,a){var r=n.console;r&&r.error&&(arguments.length==1?r.error(o):r.error(o,a))}},482:function(s,e,t){var n=t(5897);s.exports=n("document","documentElement")},275:function(s,e,t){var n=t(8494),o=t(6544),a=t(6668);s.exports=!n&&!o(function(){return Object.defineProperty(a("div"),"a",{get:function(){return 7}}).a!=7})},5044:function(s,e,t){var n=t(7583),o=t(7386),a=t(6544),r=t(9624),l=n.Object,d=o("".split);s.exports=a(function(){return!l("z").propertyIsEnumerable(0)})?function(h){return r(h)=="String"?d(h,""):l(h)}:l},9734:function(s,e,t){var n=t(7386),o=t(9212),a=t(1314),r=n(Function.toString);o(a.inspectSource)||(a.inspectSource=function(l){return r(l)}),s.exports=a.inspectSource},4402:function(s,e,t){var n=t(794),o=t(57);s.exports=function(a,r){n(r)&&"cause"in r&&o(a,"cause",r.cause)}},2743:function(s,e,t){var n,o,a,r=t(9491),l=t(7583),d=t(7386),h=t(794),f=t(57),_=t(2870),g=t(1314),b=t(9137),w=t(4639),x="Object already initialized",v=l.TypeError,T=l.WeakMap;if(r||g.state){var D=g.state||(g.state=new T),C=d(D.get),I=d(D.has),N=d(D.set);n=function(G,L){if(I(D,G))throw new v(x);return L.facade=G,N(D,G,L),L},o=function(G){return C(D,G)||{}},a=function(G){return I(D,G)}}else{var F=b("state");w[F]=!0,n=function(G,L){if(_(G,F))throw new v(x);return L.facade=G,f(G,F,L),L},o=function(G){return _(G,F)?G[F]:{}},a=function(G){return _(G,F)}}s.exports={set:n,get:o,has:a,enforce:function(G){return a(G)?o(G):n(G,{})},getterFor:function(G){return function(L){var B;if(!h(L)||(B=o(L)).type!==G)throw v("Incompatible receiver, "+G+" required");return B}}}},114:function(s,e,t){var n=t(3649),o=t(339),a=n("iterator"),r=Array.prototype;s.exports=function(l){return l!==void 0&&(o.Array===l||r[a]===l)}},4521:function(s,e,t){var n=t(9624);s.exports=Array.isArray||function(o){return n(o)=="Array"}},9212:function(s){s.exports=function(e){return typeof e=="function"}},2097:function(s,e,t){var n=t(7386),o=t(6544),a=t(9212),r=t(3058),l=t(5897),d=t(9734),h=function(){},f=[],_=l("Reflect","construct"),g=/^\s*(?:class|function)\b/,b=n(g.exec),w=!g.exec(h),x=function(T){if(!a(T))return!1;try{return _(h,f,T),!0}catch{return!1}},v=function(T){if(!a(T))return!1;switch(r(T)){case"AsyncFunction":case"GeneratorFunction":case"AsyncGeneratorFunction":return!1}try{return w||!!b(g,d(T))}catch{return!0}};v.sham=!0,s.exports=!_||o(function(){var T;return x(x.call)||!x(Object)||!x(function(){T=!0})||T})?v:x},4451:function(s,e,t){var n=t(6544),o=t(9212),a=/#|\.prototype\./,r=function(_,g){var b=d[l(_)];return b==f||b!=h&&(o(g)?n(g):!!g)},l=r.normalize=function(_){return String(_).replace(a,".").toLowerCase()},d=r.data={},h=r.NATIVE="N",f=r.POLYFILL="P";s.exports=r},794:function(s,e,t){var n=t(9212);s.exports=function(o){return typeof o=="object"?o!==null:n(o)}},6268:function(s){s.exports=!1},5871:function(s,e,t){var n=t(7583),o=t(5897),a=t(9212),r=t(2447),l=t(7786),d=n.Object;s.exports=l?function(h){return typeof h=="symbol"}:function(h){var f=o("Symbol");return a(f)&&r(f.prototype,d(h))}},4026:function(s,e,t){var n=t(7583),o=t(2938),a=t(8262),r=t(2569),l=t(5637),d=t(114),h=t(1825),f=t(2447),_=t(6307),g=t(8272),b=t(7093),w=n.TypeError,x=function(T,D){this.stopped=T,this.result=D},v=x.prototype;s.exports=function(T,D,C){var I,N,F,G,L,B,W,oe=C&&C.that,se=!(!C||!C.AS_ENTRIES),Y=!(!C||!C.IS_ITERATOR),q=!(!C||!C.INTERRUPTED),ie=o(D,oe),me=function(K){return I&&b(I,"normal",K),new x(!0,K)},Q=function(K){return se?(r(K),q?ie(K[0],K[1],me):ie(K[0],K[1])):q?ie(K,me):ie(K)};if(Y)I=T;else{if(!(N=g(T)))throw w(l(T)+" is not iterable");if(d(N)){for(F=0,G=h(T);G>F;F++)if((L=Q(T[F]))&&f(v,L))return L;return new x(!1)}I=_(T,N)}for(B=I.next;!(W=a(B,I)).done;){try{L=Q(W.value)}catch(K){b(I,"throw",K)}if(typeof L=="object"&&L&&f(v,L))return L}return new x(!1)}},7093:function(s,e,t){var n=t(8262),o=t(2569),a=t(911);s.exports=function(r,l,d){var h,f;o(r);try{if(!(h=a(r,"return"))){if(l==="throw")throw d;return d}h=n(h,r)}catch(_){f=!0,h=_}if(l==="throw")throw d;if(f)throw h;return o(h),d}},2365:function(s,e,t){var n,o,a,r=t(6544),l=t(9212),d=t(3590),h=t(729),f=t(1270),_=t(3649),g=t(6268),b=_("iterator"),w=!1;[].keys&&("next"in(a=[].keys())?(o=h(h(a)))!==Object.prototype&&(n=o):w=!0),n==null||r(function(){var x={};return n[b].call(x)!==x})?n={}:g&&(n=d(n)),l(n[b])||f(n,b,function(){return this}),s.exports={IteratorPrototype:n,BUGGY_SAFARI_ITERATORS:w}},339:function(s){s.exports={}},1825:function(s,e,t){var n=t(97);s.exports=function(o){return n(o.length)}},2095:function(s,e,t){var n,o,a,r,l,d,h,f,_=t(7583),g=t(2938),b=t(6683).f,w=t(8117).set,x=t(7020),v=t(3256),T=t(6846),D=t(5354),C=_.MutationObserver||_.WebKitMutationObserver,I=_.document,N=_.process,F=_.Promise,G=b(_,"queueMicrotask"),L=G&&G.value;L||(n=function(){var B,W;for(D&&(B=N.domain)&&B.exit();o;){W=o.fn,o=o.next;try{W()}catch(oe){throw o?r():a=void 0,oe}}a=void 0,B&&B.enter()},x||D||T||!C||!I?!v&&F&&F.resolve?((h=F.resolve(void 0)).constructor=F,f=g(h.then,h),r=function(){f(n)}):D?r=function(){N.nextTick(n)}:(w=g(w,_),r=function(){w(n)}):(l=!0,d=I.createTextNode(""),new C(n).observe(d,{characterData:!0}),r=function(){d.data=l=!l})),s.exports=L||function(B){var W={fn:B,next:void 0};a&&(a.next=W),o||(o=W,r()),a=W}},783:function(s,e,t){var n=t(7583);s.exports=n.Promise},8640:function(s,e,t){var n=t(4061),o=t(6544);s.exports=!!Object.getOwnPropertySymbols&&!o(function(){var a=Symbol();return!String(a)||!(Object(a)instanceof Symbol)||!Symbol.sham&&n&&n<41})},9491:function(s,e,t){var n=t(7583),o=t(9212),a=t(9734),r=n.WeakMap;s.exports=o(r)&&/native code/.test(a(r))},5084:function(s,e,t){var n=t(8257),o=function(a){var r,l;this.promise=new a(function(d,h){if(r!==void 0||l!==void 0)throw TypeError("Bad Promise constructor");r=d,l=h}),this.resolve=n(r),this.reject=n(l)};s.exports.f=function(a){return new o(a)}},2764:function(s,e,t){var n=t(8320);s.exports=function(o,a){return o===void 0?arguments.length<2?"":a:n(o)}},3590:function(s,e,t){var n,o=t(2569),a=t(8728),r=t(5690),l=t(4639),d=t(482),h=t(6668),f=t(9137),_=f("IE_PROTO"),g=function(){},b=function(v){return"<script>"+v+"<\/script>"},w=function(v){v.write(b("")),v.close();var T=v.parentWindow.Object;return v=null,T},x=function(){try{n=new ActiveXObject("htmlfile")}catch{}var v,T;x=typeof document<"u"?document.domain&&n?w(n):((T=h("iframe")).style.display="none",d.appendChild(T),T.src=String("javascript:"),(v=T.contentWindow.document).open(),v.write(b("document.F=Object")),v.close(),v.F):w(n);for(var D=r.length;D--;)delete x.prototype[r[D]];return x()};l[_]=!0,s.exports=Object.create||function(v,T){var D;return v!==null?(g.prototype=o(v),D=new g,g.prototype=null,D[_]=v):D=x(),T===void 0?D:a.f(D,T)}},8728:function(s,e,t){var n=t(8494),o=t(7670),a=t(4615),r=t(2569),l=t(2977),d=t(5432);e.f=n&&!o?Object.defineProperties:function(h,f){r(h);for(var _,g=l(f),b=d(f),w=b.length,x=0;w>x;)a.f(h,_=b[x++],g[_]);return h}},4615:function(s,e,t){var n=t(7583),o=t(8494),a=t(275),r=t(7670),l=t(2569),d=t(8734),h=n.TypeError,f=Object.defineProperty,_=Object.getOwnPropertyDescriptor,g="enumerable",b="configurable",w="writable";e.f=o?r?function(x,v,T){if(l(x),v=d(v),l(T),typeof x=="function"&&v==="prototype"&&"value"in T&&w in T&&!T.writable){var D=_(x,v);D&&D.writable&&(x[v]=T.value,T={configurable:b in T?T.configurable:D.configurable,enumerable:g in T?T.enumerable:D.enumerable,writable:!1})}return f(x,v,T)}:f:function(x,v,T){if(l(x),v=d(v),l(T),a)try{return f(x,v,T)}catch{}if("get"in T||"set"in T)throw h("Accessors not supported");return"value"in T&&(x[v]=T.value),x}},6683:function(s,e,t){var n=t(8494),o=t(8262),a=t(112),r=t(4677),l=t(2977),d=t(8734),h=t(2870),f=t(275),_=Object.getOwnPropertyDescriptor;e.f=n?_:function(g,b){if(g=l(g),b=d(b),f)try{return _(g,b)}catch{}if(h(g,b))return r(!o(a.f,g,b),g[b])}},3130:function(s,e,t){var n=t(9624),o=t(2977),a=t(9275).f,r=t(4546),l=typeof window=="object"&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];s.exports.f=function(d){return l&&n(d)=="Window"?function(h){try{return a(h)}catch{return r(l)}}(d):a(o(d))}},9275:function(s,e,t){var n=t(8356),o=t(5690).concat("length","prototype");e.f=Object.getOwnPropertyNames||function(a){return n(a,o)}},4012:function(s,e){e.f=Object.getOwnPropertySymbols},729:function(s,e,t){var n=t(7583),o=t(2870),a=t(9212),r=t(1324),l=t(9137),d=t(926),h=l("IE_PROTO"),f=n.Object,_=f.prototype;s.exports=d?f.getPrototypeOf:function(g){var b=r(g);if(o(b,h))return b[h];var w=b.constructor;return a(w)&&b instanceof w?w.prototype:b instanceof f?_:null}},2447:function(s,e,t){var n=t(7386);s.exports=n({}.isPrototypeOf)},8356:function(s,e,t){var n=t(7386),o=t(2870),a=t(2977),r=t(5766).indexOf,l=t(4639),d=n([].push);s.exports=function(h,f){var _,g=a(h),b=0,w=[];for(_ in g)!o(l,_)&&o(g,_)&&d(w,_);for(;f.length>b;)o(g,_=f[b++])&&(~r(w,_)||d(w,_));return w}},5432:function(s,e,t){var n=t(8356),o=t(5690);s.exports=Object.keys||function(a){return n(a,o)}},112:function(s,e){var t={}.propertyIsEnumerable,n=Object.getOwnPropertyDescriptor,o=n&&!t.call({1:2},1);e.f=o?function(a){var r=n(this,a);return!!r&&r.enumerable}:t},7496:function(s,e,t){var n=t(7386),o=t(2569),a=t(9882);s.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var r,l=!1,d={};try{(r=n(Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set))(d,[]),l=d instanceof Array}catch{}return function(h,f){return o(h),a(f),l?r(h,f):h.__proto__=f,h}}():void 0)},3060:function(s,e,t){var n=t(8191),o=t(3058);s.exports=n?{}.toString:function(){return"[object "+o(this)+"]"}},6252:function(s,e,t){var n=t(7583),o=t(8262),a=t(9212),r=t(794),l=n.TypeError;s.exports=function(d,h){var f,_;if(h==="string"&&a(f=d.toString)&&!r(_=o(f,d))||a(f=d.valueOf)&&!r(_=o(f,d))||h!=="string"&&a(f=d.toString)&&!r(_=o(f,d)))return _;throw l("Can't convert object to primitive value")}},929:function(s,e,t){var n=t(5897),o=t(7386),a=t(9275),r=t(4012),l=t(2569),d=o([].concat);s.exports=n("Reflect","ownKeys")||function(h){var f=a.f(l(h)),_=r.f;return _?d(f,_(h)):f}},1287:function(s,e,t){var n=t(7583);s.exports=n},544:function(s){s.exports=function(e){try{return{error:!1,value:e()}}catch(t){return{error:!0,value:t}}}},5732:function(s,e,t){var n=t(2569),o=t(794),a=t(5084);s.exports=function(r,l){if(n(r),o(l)&&l.constructor===r)return l;var d=a.f(r);return(0,d.resolve)(l),d.promise}},2723:function(s){var e=function(){this.head=null,this.tail=null};e.prototype={add:function(t){var n={item:t,next:null};this.head?this.tail.next=n:this.head=n,this.tail=n},get:function(){var t=this.head;if(t)return this.head=t.next,this.tail===t&&(this.tail=null),t.item}},s.exports=e},6893:function(s,e,t){var n=t(1270);s.exports=function(o,a,r){for(var l in a)n(o,l,a[l],r);return o}},1270:function(s,e,t){var n=t(7583),o=t(9212),a=t(2870),r=t(57),l=t(460),d=t(9734),h=t(2743),f=t(4340).CONFIGURABLE,_=h.get,g=h.enforce,b=String(String).split("String");(s.exports=function(w,x,v,T){var D,C=!!T&&!!T.unsafe,I=!!T&&!!T.enumerable,N=!!T&&!!T.noTargetGet,F=T&&T.name!==void 0?T.name:x;o(v)&&(String(F).slice(0,7)==="Symbol("&&(F="["+String(F).replace(/^Symbol\(([^)]*)\)/,"$1")+"]"),(!a(v,"name")||f&&v.name!==F)&&r(v,"name",F),(D=g(v)).source||(D.source=b.join(typeof F=="string"?F:""))),w!==n?(C?!N&&w[x]&&(I=!0):delete w[x],I?w[x]=v:r(w,x,v)):I?w[x]=v:l(x,v)})(Function.prototype,"toString",function(){return o(this)&&_(this).source||d(this)})},3955:function(s,e,t){var n=t(7583).TypeError;s.exports=function(o){if(o==null)throw n("Can't call method on "+o);return o}},460:function(s,e,t){var n=t(7583),o=Object.defineProperty;s.exports=function(a,r){try{o(n,a,{value:r,configurable:!0,writable:!0})}catch{n[a]=r}return r}},7730:function(s,e,t){var n=t(5897),o=t(4615),a=t(3649),r=t(8494),l=a("species");s.exports=function(d){var h=n(d),f=o.f;r&&h&&!h[l]&&f(h,l,{configurable:!0,get:function(){return this}})}},8821:function(s,e,t){var n=t(4615).f,o=t(2870),a=t(3649)("toStringTag");s.exports=function(r,l,d){r&&!d&&(r=r.prototype),r&&!o(r,a)&&n(r,a,{configurable:!0,value:l})}},9137:function(s,e,t){var n=t(7836),o=t(8284),a=n("keys");s.exports=function(r){return a[r]||(a[r]=o(r))}},1314:function(s,e,t){var n=t(7583),o=t(460),a="__core-js_shared__",r=n[a]||o(a,{});s.exports=r},7836:function(s,e,t){var n=t(6268),o=t(1314);(s.exports=function(a,r){return o[a]||(o[a]=r!==void 0?r:{})})("versions",[]).push({version:"3.21.1",mode:n?"pure":"global",copyright:"© 2014-2022 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.21.1/LICENSE",source:"https://github.com/zloirock/core-js"})},564:function(s,e,t){var n=t(2569),o=t(1186),a=t(3649)("species");s.exports=function(r,l){var d,h=n(r).constructor;return h===void 0||(d=n(h)[a])==null?l:o(d)}},6389:function(s,e,t){var n=t(7386),o=t(7486),a=t(8320),r=t(3955),l=n("".charAt),d=n("".charCodeAt),h=n("".slice),f=function(_){return function(g,b){var w,x,v=a(r(g)),T=o(b),D=v.length;return T<0||T>=D?_?"":void 0:(w=d(v,T))<55296||w>56319||T+1===D||(x=d(v,T+1))<56320||x>57343?_?l(v,T):w:_?h(v,T,T+2):x-56320+(w-55296<<10)+65536}};s.exports={codeAt:f(!1),charAt:f(!0)}},8117:function(s,e,t){var n,o,a,r,l=t(7583),d=t(1611),h=t(2938),f=t(9212),_=t(2870),g=t(6544),b=t(482),w=t(6917),x=t(6668),v=t(7520),T=t(7020),D=t(5354),C=l.setImmediate,I=l.clearImmediate,N=l.process,F=l.Dispatch,G=l.Function,L=l.MessageChannel,B=l.String,W=0,oe={},se="onreadystatechange";try{n=l.location}catch{}var Y=function(Q){if(_(oe,Q)){var K=oe[Q];delete oe[Q],K()}},q=function(Q){return function(){Y(Q)}},ie=function(Q){Y(Q.data)},me=function(Q){l.postMessage(B(Q),n.protocol+"//"+n.host)};C&&I||(C=function(Q){v(arguments.length,1);var K=f(Q)?Q:G(Q),le=w(arguments,1);return oe[++W]=function(){d(K,void 0,le)},o(W),W},I=function(Q){delete oe[Q]},D?o=function(Q){N.nextTick(q(Q))}:F&&F.now?o=function(Q){F.now(q(Q))}:L&&!T?(r=(a=new L).port2,a.port1.onmessage=ie,o=h(r.postMessage,r)):l.addEventListener&&f(l.postMessage)&&!l.importScripts&&n&&n.protocol!=="file:"&&!g(me)?(o=me,l.addEventListener("message",ie,!1)):o=se in x("script")?function(Q){b.appendChild(x("script")).onreadystatechange=function(){b.removeChild(this),Y(Q)}}:function(Q){setTimeout(q(Q),0)}),s.exports={set:C,clear:I}},6782:function(s,e,t){var n=t(7486),o=Math.max,a=Math.min;s.exports=function(r,l){var d=n(r);return d<0?o(d+l,0):a(d,l)}},2977:function(s,e,t){var n=t(5044),o=t(3955);s.exports=function(a){return n(o(a))}},7486:function(s){var e=Math.ceil,t=Math.floor;s.exports=function(n){var o=+n;return o!=o||o===0?0:(o>0?t:e)(o)}},97:function(s,e,t){var n=t(7486),o=Math.min;s.exports=function(a){return a>0?o(n(a),9007199254740991):0}},1324:function(s,e,t){var n=t(7583),o=t(3955),a=n.Object;s.exports=function(r){return a(o(r))}},2670:function(s,e,t){var n=t(7583),o=t(8262),a=t(794),r=t(5871),l=t(911),d=t(6252),h=t(3649),f=n.TypeError,_=h("toPrimitive");s.exports=function(g,b){if(!a(g)||r(g))return g;var w,x=l(g,_);if(x){if(b===void 0&&(b="default"),w=o(x,g,b),!a(w)||r(w))return w;throw f("Can't convert object to primitive value")}return b===void 0&&(b="number"),d(g,b)}},8734:function(s,e,t){var n=t(2670),o=t(5871);s.exports=function(a){var r=n(a,"string");return o(r)?r:r+""}},8191:function(s,e,t){var n={};n[t(3649)("toStringTag")]="z",s.exports=String(n)==="[object z]"},8320:function(s,e,t){var n=t(7583),o=t(3058),a=n.String;s.exports=function(r){if(o(r)==="Symbol")throw TypeError("Cannot convert a Symbol value to a string");return a(r)}},5637:function(s,e,t){var n=t(7583).String;s.exports=function(o){try{return n(o)}catch{return"Object"}}},8284:function(s,e,t){var n=t(7386),o=0,a=Math.random(),r=n(1 .toString);s.exports=function(l){return"Symbol("+(l===void 0?"":l)+")_"+r(++o+a,36)}},7786:function(s,e,t){var n=t(8640);s.exports=n&&!Symbol.sham&&typeof Symbol.iterator=="symbol"},7670:function(s,e,t){var n=t(8494),o=t(6544);s.exports=n&&o(function(){return Object.defineProperty(function(){},"prototype",{value:42,writable:!1}).prototype!=42})},7520:function(s,e,t){var n=t(7583).TypeError;s.exports=function(o,a){if(o<a)throw n("Not enough arguments");return o}},491:function(s,e,t){var n=t(3649);e.f=n},3649:function(s,e,t){var n=t(7583),o=t(7836),a=t(2870),r=t(8284),l=t(8640),d=t(7786),h=o("wks"),f=n.Symbol,_=f&&f.for,g=d?f:f&&f.withoutSetter||r;s.exports=function(b){if(!a(h,b)||!l&&typeof h[b]!="string"){var w="Symbol."+b;l&&a(f,b)?h[b]=f[b]:h[b]=d&&_?_(w):g(w)}return h[b]}},1719:function(s,e,t){var n=t(7263),o=t(7583),a=t(2447),r=t(729),l=t(7496),d=t(3478),h=t(3590),f=t(57),_=t(4677),g=t(1509),b=t(4402),w=t(4026),x=t(2764),v=t(3649),T=t(1178),D=v("toStringTag"),C=o.Error,I=[].push,N=function(G,L){var B,W=arguments.length>2?arguments[2]:void 0,oe=a(F,this);l?B=l(new C,oe?r(this):F):(B=oe?this:h(F),f(B,D,"Error")),L!==void 0&&f(B,"message",x(L)),T&&f(B,"stack",g(B.stack,1)),b(B,W);var se=[];return w(G,I,{that:se}),f(B,"errors",se),B};l?l(N,C):d(N,C,{name:!0});var F=N.prototype=h(C.prototype,{constructor:_(1,N),message:_(1,""),name:_(1,"AggregateError")});n({global:!0},{AggregateError:N})},1646:function(s,e,t){var n=t(7263),o=t(7583),a=t(6544),r=t(4521),l=t(794),d=t(1324),h=t(1825),f=t(5999),_=t(4822),g=t(9269),b=t(3649),w=t(4061),x=b("isConcatSpreadable"),v=9007199254740991,T="Maximum allowed index exceeded",D=o.TypeError,C=w>=51||!a(function(){var F=[];return F[x]=!1,F.concat()[0]!==F}),I=g("concat"),N=function(F){if(!l(F))return!1;var G=F[x];return G!==void 0?!!G:r(F)};n({target:"Array",proto:!0,forced:!C||!I},{concat:function(F){var G,L,B,W,oe,se=d(this),Y=_(se,0),q=0;for(G=-1,B=arguments.length;G<B;G++)if(N(oe=G===-1?se:arguments[G])){if(q+(W=h(oe))>v)throw D(T);for(L=0;L<W;L++,q++)L in oe&&f(Y,q,oe[L])}else{if(q>=v)throw D(T);f(Y,q++,oe)}return Y.length=q,Y}})},5677:function(s,e,t){var n=t(2977),o=t(6288),a=t(339),r=t(2743),l=t(4615).f,d=t(9012),h=t(6268),f=t(8494),_="Array Iterator",g=r.set,b=r.getterFor(_);s.exports=d(Array,"Array",function(x,v){g(this,{type:_,target:n(x),index:0,kind:v})},function(){var x=b(this),v=x.target,T=x.kind,D=x.index++;return!v||D>=v.length?(x.target=void 0,{value:void 0,done:!0}):T=="keys"?{value:D,done:!1}:T=="values"?{value:v[D],done:!1}:{value:[D,v[D]],done:!1}},"values");var w=a.Arguments=a.Array;if(o("keys"),o("values"),o("entries"),!h&&f&&w.name!=="values")try{l(w,"name",{value:"values"})}catch{}},6956:function(s,e,t){var n=t(7583);t(8821)(n.JSON,"JSON",!0)},5222:function(s,e,t){t(8821)(Math,"Math",!0)},6394:function(s,e,t){var n=t(8191),o=t(1270),a=t(3060);n||o(Object.prototype,"toString",a,{unsafe:!0})},6969:function(s,e,t){var n=t(7263),o=t(8262),a=t(8257),r=t(5084),l=t(544),d=t(4026);n({target:"Promise",stat:!0},{allSettled:function(h){var f=this,_=r.f(f),g=_.resolve,b=_.reject,w=l(function(){var x=a(f.resolve),v=[],T=0,D=1;d(h,function(C){var I=T++,N=!1;D++,o(x,f,C).then(function(F){N||(N=!0,v[I]={status:"fulfilled",value:F},--D||g(v))},function(F){N||(N=!0,v[I]={status:"rejected",reason:F},--D||g(v))})}),--D||g(v)});return w.error&&b(w.value),_.promise}})},2021:function(s,e,t){var n=t(7263),o=t(8257),a=t(5897),r=t(8262),l=t(5084),d=t(544),h=t(4026),f="No one promise resolved";n({target:"Promise",stat:!0},{any:function(_){var g=this,b=a("AggregateError"),w=l.f(g),x=w.resolve,v=w.reject,T=d(function(){var D=o(g.resolve),C=[],I=0,N=1,F=!1;h(_,function(G){var L=I++,B=!1;N++,r(D,g,G).then(function(W){B||F||(F=!0,x(W))},function(W){B||F||(B=!0,C[L]=W,--N||v(new b(C,f)))})}),--N||v(new b(C,f))});return T.error&&v(T.value),w.promise}})},8328:function(s,e,t){var n=t(7263),o=t(6268),a=t(783),r=t(6544),l=t(5897),d=t(9212),h=t(564),f=t(5732),_=t(1270);if(n({target:"Promise",proto:!0,real:!0,forced:!!a&&r(function(){a.prototype.finally.call({then:function(){}},function(){})})},{finally:function(b){var w=h(this,l("Promise")),x=d(b);return this.then(x?function(v){return f(w,b()).then(function(){return v})}:b,x?function(v){return f(w,b()).then(function(){throw v})}:b)}}),!o&&d(a)){var g=l("Promise").prototype.finally;a.prototype.finally!==g&&_(a.prototype,"finally",g,{unsafe:!0})}},5334:function(s,e,t){var n,o,a,r,l=t(7263),d=t(6268),h=t(7583),f=t(5897),_=t(8262),g=t(783),b=t(1270),w=t(6893),x=t(7496),v=t(8821),T=t(7730),D=t(8257),C=t(9212),I=t(794),N=t(4761),F=t(9734),G=t(4026),L=t(3616),B=t(564),W=t(8117).set,oe=t(2095),se=t(5732),Y=t(2716),q=t(5084),ie=t(544),me=t(2723),Q=t(2743),K=t(4451),le=t(3649),de=t(2274),ve=t(5354),$=t(4061),z=le("species"),ne="Promise",V=Q.getterFor(ne),ye=Q.set,Se=Q.getterFor(ne),Le=g&&g.prototype,De=g,Oe=Le,ke=h.TypeError,Ve=h.document,je=h.process,$t=q.f,jt=$t,Ot=!!(Ve&&Ve.createEvent&&h.dispatchEvent),_t=C(h.PromiseRejectionEvent),pt="unhandledrejection",vt=!1,cn=K(ne,function(){var ge=F(De),Ee=ge!==String(De);if(!Ee&&$===66||d&&!Oe.finally)return!0;if($>=51&&/native code/.test(ge))return!1;var Ce=new De(function($e){$e(1)}),Pe=function($e){$e(function(){},function(){})};return(Ce.constructor={})[z]=Pe,!(vt=Ce.then(function(){})instanceof Pe)||!Ee&&de&&!_t}),Mn=cn||!L(function(ge){De.all(ge).catch(function(){})}),U=function(ge){var Ee;return!(!I(ge)||!C(Ee=ge.then))&&Ee},R=function(ge,Ee){var Ce,Pe,$e,mt=Ee.value,en=Ee.state==1,O=en?ge.ok:ge.fail,X=ge.resolve,Z=ge.reject,ae=ge.domain;try{O?(en||(Ee.rejection===2&&Fe(Ee),Ee.rejection=1),O===!0?Ce=mt:(ae&&ae.enter(),Ce=O(mt),ae&&(ae.exit(),$e=!0)),Ce===ge.promise?Z(ke("Promise-chain cycle")):(Pe=U(Ce))?_(Pe,Ce,X,Z):X(Ce)):Z(mt)}catch(xe){ae&&!$e&&ae.exit(),Z(xe)}},ce=function(ge,Ee){ge.notified||(ge.notified=!0,oe(function(){for(var Ce,Pe=ge.reactions;Ce=Pe.get();)R(Ce,ge);ge.notified=!1,Ee&&!ge.rejection&&be(ge)}))},we=function(ge,Ee,Ce){var Pe,$e;Ot?((Pe=Ve.createEvent("Event")).promise=Ee,Pe.reason=Ce,Pe.initEvent(ge,!1,!0),h.dispatchEvent(Pe)):Pe={promise:Ee,reason:Ce},!_t&&($e=h["on"+ge])?$e(Pe):ge===pt&&Y("Unhandled promise rejection",Ce)},be=function(ge){_(W,h,function(){var Ee,Ce=ge.facade,Pe=ge.value;if(Re(ge)&&(Ee=ie(function(){ve?je.emit("unhandledRejection",Pe,Ce):we(pt,Ce,Pe)}),ge.rejection=ve||Re(ge)?2:1,Ee.error))throw Ee.value})},Re=function(ge){return ge.rejection!==1&&!ge.parent},Fe=function(ge){_(W,h,function(){var Ee=ge.facade;ve?je.emit("rejectionHandled",Ee):we("rejectionhandled",Ee,ge.value)})},Ie=function(ge,Ee,Ce){return function(Pe){ge(Ee,Pe,Ce)}},pe=function(ge,Ee,Ce){ge.done||(ge.done=!0,Ce&&(ge=Ce),ge.value=Ee,ge.state=2,ce(ge,!0))},ze=function ge(Ee,Ce,Pe){if(!Ee.done){Ee.done=!0,Pe&&(Ee=Pe);try{if(Ee.facade===Ce)throw ke("Promise can't be resolved itself");var $e=U(Ce);$e?oe(function(){var mt={done:!1};try{_($e,Ce,Ie(ge,mt,Ee),Ie(pe,mt,Ee))}catch(en){pe(mt,en,Ee)}}):(Ee.value=Ce,Ee.state=1,ce(Ee,!1))}catch(mt){pe({done:!1},mt,Ee)}}};if(cn&&(Oe=(De=function(ge){N(this,Oe),D(ge),_(n,this);var Ee=V(this);try{ge(Ie(ze,Ee),Ie(pe,Ee))}catch(Ce){pe(Ee,Ce)}}).prototype,(n=function(ge){ye(this,{type:ne,done:!1,notified:!1,parent:!1,reactions:new me,rejection:!1,state:0,value:void 0})}).prototype=w(Oe,{then:function(ge,Ee){var Ce=Se(this),Pe=$t(B(this,De));return Ce.parent=!0,Pe.ok=!C(ge)||ge,Pe.fail=C(Ee)&&Ee,Pe.domain=ve?je.domain:void 0,Ce.state==0?Ce.reactions.add(Pe):oe(function(){R(Pe,Ce)}),Pe.promise},catch:function(ge){return this.then(void 0,ge)}}),o=function(){var ge=new n,Ee=V(ge);this.promise=ge,this.resolve=Ie(ze,Ee),this.reject=Ie(pe,Ee)},q.f=$t=function(ge){return ge===De||ge===a?new o(ge):jt(ge)},!d&&C(g)&&Le!==Object.prototype)){r=Le.then,vt||(b(Le,"then",function(ge,Ee){var Ce=this;return new De(function(Pe,$e){_(r,Ce,Pe,$e)}).then(ge,Ee)},{unsafe:!0}),b(Le,"catch",Oe.catch,{unsafe:!0}));try{delete Le.constructor}catch{}x&&x(Le,Oe)}l({global:!0,wrap:!0,forced:cn},{Promise:De}),v(De,ne,!1,!0),T(ne),a=f(ne),l({target:ne,stat:!0,forced:cn},{reject:function(ge){var Ee=$t(this);return _(Ee.reject,void 0,ge),Ee.promise}}),l({target:ne,stat:!0,forced:d||cn},{resolve:function(ge){return se(d&&this===a?De:this,ge)}}),l({target:ne,stat:!0,forced:Mn},{all:function(ge){var Ee=this,Ce=$t(Ee),Pe=Ce.resolve,$e=Ce.reject,mt=ie(function(){var en=D(Ee.resolve),O=[],X=0,Z=1;G(ge,function(ae){var xe=X++,He=!1;Z++,_(en,Ee,ae).then(function(Ze){He||(He=!0,O[xe]=Ze,--Z||Pe(O))},$e)}),--Z||Pe(O)});return mt.error&&$e(mt.value),Ce.promise},race:function(ge){var Ee=this,Ce=$t(Ee),Pe=Ce.reject,$e=ie(function(){var mt=D(Ee.resolve);G(ge,function(en){_(mt,Ee,en).then(Ce.resolve,Pe)})});return $e.error&&Pe($e.value),Ce.promise}})},2257:function(s,e,t){var n=t(7263),o=t(7583),a=t(8821);n({global:!0},{Reflect:{}}),a(o.Reflect,"Reflect",!0)},2129:function(s,e,t){var n=t(6389).charAt,o=t(8320),a=t(2743),r=t(9012),l="String Iterator",d=a.set,h=a.getterFor(l);r(String,"String",function(f){d(this,{type:l,string:o(f),index:0})},function(){var f,_=h(this),g=_.string,b=_.index;return b>=g.length?{value:void 0,done:!0}:(f=n(g,b),_.index+=f.length,{value:f,done:!1})})},462:function(s,e,t){t(2219)("asyncIterator")},8407:function(s,e,t){var n=t(7263),o=t(8494),a=t(7583),r=t(7386),l=t(2870),d=t(9212),h=t(2447),f=t(8320),_=t(4615).f,g=t(3478),b=a.Symbol,w=b&&b.prototype;if(o&&d(b)&&(!("description"in w)||b().description!==void 0)){var x={},v=function(){var G=arguments.length<1||arguments[0]===void 0?void 0:f(arguments[0]),L=h(w,this)?new b(G):G===void 0?b():b(G);return G===""&&(x[L]=!0),L};g(v,b),v.prototype=w,w.constructor=v;var T=String(b("test"))=="Symbol(test)",D=r(w.toString),C=r(w.valueOf),I=/^Symbol\((.*)\)[^)]+$/,N=r("".replace),F=r("".slice);_(w,"description",{configurable:!0,get:function(){var G=C(this),L=D(G);if(l(x,G))return"";var B=T?F(L,7,-1):N(L,I,"$1");return B===""?void 0:B}}),n({global:!0,forced:!0},{Symbol:v})}},2429:function(s,e,t){t(2219)("hasInstance")},1172:function(s,e,t){t(2219)("isConcatSpreadable")},8288:function(s,e,t){t(2219)("iterator")},2004:function(s,e,t){var n=t(7263),o=t(7583),a=t(5897),r=t(1611),l=t(8262),d=t(7386),h=t(6268),f=t(8494),_=t(8640),g=t(6544),b=t(2870),w=t(4521),x=t(9212),v=t(794),T=t(2447),D=t(5871),C=t(2569),I=t(1324),N=t(2977),F=t(8734),G=t(8320),L=t(4677),B=t(3590),W=t(5432),oe=t(9275),se=t(3130),Y=t(4012),q=t(6683),ie=t(4615),me=t(8728),Q=t(112),K=t(6917),le=t(1270),de=t(7836),ve=t(9137),$=t(4639),z=t(8284),ne=t(3649),V=t(491),ye=t(2219),Se=t(8821),Le=t(2743),De=t(4805).forEach,Oe=ve("hidden"),ke="Symbol",Ve=ne("toPrimitive"),je=Le.set,$t=Le.getterFor(ke),jt=Object.prototype,Ot=o.Symbol,_t=Ot&&Ot.prototype,pt=o.TypeError,vt=o.QObject,cn=a("JSON","stringify"),Mn=q.f,U=ie.f,R=se.f,ce=Q.f,we=d([].push),be=de("symbols"),Re=de("op-symbols"),Fe=de("string-to-symbol-registry"),Ie=de("symbol-to-string-registry"),pe=de("wks"),ze=!vt||!vt.prototype||!vt.prototype.findChild,ge=f&&g(function(){return B(U({},"a",{get:function(){return U(this,"a",{value:7}).a}})).a!=7})?function(Z,ae,xe){var He=Mn(jt,ae);He&&delete jt[ae],U(Z,ae,xe),He&&Z!==jt&&U(jt,ae,He)}:U,Ee=function(Z,ae){var xe=be[Z]=B(_t);return je(xe,{type:ke,tag:Z,description:ae}),f||(xe.description=ae),xe},Ce=function(Z,ae,xe){Z===jt&&Ce(Re,ae,xe),C(Z);var He=F(ae);return C(xe),b(be,He)?(xe.enumerable?(b(Z,Oe)&&Z[Oe][He]&&(Z[Oe][He]=!1),xe=B(xe,{enumerable:L(0,!1)})):(b(Z,Oe)||U(Z,Oe,L(1,{})),Z[Oe][He]=!0),ge(Z,He,xe)):U(Z,He,xe)},Pe=function(Z,ae){C(Z);var xe=N(ae),He=W(xe).concat(O(xe));return De(He,function(Ze){f&&!l($e,xe,Ze)||Ce(Z,Ze,xe[Ze])}),Z},$e=function(Z){var ae=F(Z),xe=l(ce,this,ae);return!(this===jt&&b(be,ae)&&!b(Re,ae))&&(!(xe||!b(this,ae)||!b(be,ae)||b(this,Oe)&&this[Oe][ae])||xe)},mt=function(Z,ae){var xe=N(Z),He=F(ae);if(xe!==jt||!b(be,He)||b(Re,He)){var Ze=Mn(xe,He);return!Ze||!b(be,He)||b(xe,Oe)&&xe[Oe][He]||(Ze.enumerable=!0),Ze}},en=function(Z){var ae=R(N(Z)),xe=[];return De(ae,function(He){b(be,He)||b($,He)||we(xe,He)}),xe},O=function(Z){var ae=Z===jt,xe=R(ae?Re:N(Z)),He=[];return De(xe,function(Ze){!b(be,Ze)||ae&&!b(jt,Ze)||we(He,be[Ze])}),He};if(_||(Ot=function(){if(T(_t,this))throw pt("Symbol is not a constructor");var Z=arguments.length&&arguments[0]!==void 0?G(arguments[0]):void 0,ae=z(Z),xe=function He(Ze){this===jt&&l(He,Re,Ze),b(this,Oe)&&b(this[Oe],ae)&&(this[Oe][ae]=!1),ge(this,ae,L(1,Ze))};return f&&ze&&ge(jt,ae,{configurable:!0,set:xe}),Ee(ae,Z)},le(_t=Ot.prototype,"toString",function(){return $t(this).tag}),le(Ot,"withoutSetter",function(Z){return Ee(z(Z),Z)}),Q.f=$e,ie.f=Ce,me.f=Pe,q.f=mt,oe.f=se.f=en,Y.f=O,V.f=function(Z){return Ee(ne(Z),Z)},f&&(U(_t,"description",{configurable:!0,get:function(){return $t(this).description}}),h||le(jt,"propertyIsEnumerable",$e,{unsafe:!0}))),n({global:!0,wrap:!0,forced:!_,sham:!_},{Symbol:Ot}),De(W(pe),function(Z){ye(Z)}),n({target:ke,stat:!0,forced:!_},{for:function(Z){var ae=G(Z);if(b(Fe,ae))return Fe[ae];var xe=Ot(ae);return Fe[ae]=xe,Ie[xe]=ae,xe},keyFor:function(Z){if(!D(Z))throw pt(Z+" is not a symbol");if(b(Ie,Z))return Ie[Z]},useSetter:function(){ze=!0},useSimple:function(){ze=!1}}),n({target:"Object",stat:!0,forced:!_,sham:!f},{create:function(Z,ae){return ae===void 0?B(Z):Pe(B(Z),ae)},defineProperty:Ce,defineProperties:Pe,getOwnPropertyDescriptor:mt}),n({target:"Object",stat:!0,forced:!_},{getOwnPropertyNames:en,getOwnPropertySymbols:O}),n({target:"Object",stat:!0,forced:g(function(){Y.f(1)})},{getOwnPropertySymbols:function(Z){return Y.f(I(Z))}}),cn&&n({target:"JSON",stat:!0,forced:!_||g(function(){var Z=Ot();return cn([Z])!="[null]"||cn({a:Z})!="{}"||cn(Object(Z))!="{}"})},{stringify:function(Z,ae,xe){var He=K(arguments),Ze=ae;if((v(ae)||Z!==void 0)&&!D(Z))return w(ae)||(ae=function(nn,pn){if(x(Ze)&&(pn=l(Ze,this,nn,pn)),!D(pn))return pn}),He[1]=ae,r(cn,null,He)}}),!_t[Ve]){var X=_t.valueOf;le(_t,Ve,function(Z){return l(X,this)})}Se(Ot,ke),$[Oe]=!0},8201:function(s,e,t){t(2219)("matchAll")},1274:function(s,e,t){t(2219)("match")},6626:function(s,e,t){t(2219)("replace")},3211:function(s,e,t){t(2219)("search")},9952:function(s,e,t){t(2219)("species")},15:function(s,e,t){t(2219)("split")},9831:function(s,e,t){t(2219)("toPrimitive")},7521:function(s,e,t){t(2219)("toStringTag")},2972:function(s,e,t){t(2219)("unscopables")},4655:function(s,e,t){var n=t(7583),o=t(6778),a=t(9307),r=t(5677),l=t(57),d=t(3649),h=d("iterator"),f=d("toStringTag"),_=r.values,g=function(w,x){if(w){if(w[h]!==_)try{l(w,h,_)}catch{w[h]=_}if(w[f]||l(w,f,x),o[x]){for(var v in r)if(w[v]!==r[v])try{l(w,v,r[v])}catch{w[v]=r[v]}}}};for(var b in o)g(n[b]&&n[b].prototype,b);g(a,"DOMTokenList")},8765:function(s,e,t){var n=t(5036);t(4655),s.exports=n},5441:function(s,e,t){var n=t(2582);t(4655),s.exports=n},7705:function(s){s.exports=function(e){var t=[];return t.toString=function(){return this.map(function(n){var o="",a=n[5]!==void 0;return n[4]&&(o+="@supports (".concat(n[4],") {")),n[2]&&(o+="@media ".concat(n[2]," {")),a&&(o+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),o+=e(n),a&&(o+="}"),n[2]&&(o+="}"),n[4]&&(o+="}"),o}).join("")},t.i=function(n,o,a,r,l){typeof n=="string"&&(n=[[null,n,void 0]]);var d={};if(a)for(var h=0;h<this.length;h++){var f=this[h][0];f!=null&&(d[f]=!0)}for(var _=0;_<n.length;_++){var g=[].concat(n[_]);a&&d[g[0]]||(l!==void 0&&(g[5]===void 0||(g[1]="@layer".concat(g[5].length>0?" ".concat(g[5]):""," {").concat(g[1],"}")),g[5]=l),o&&(g[2]&&(g[1]="@media ".concat(g[2]," {").concat(g[1],"}")),g[2]=o),r&&(g[4]?(g[1]="@supports (".concat(g[4],") {").concat(g[1],"}"),g[4]=r):g[4]="".concat(r)),t.push(g))}},t}},6738:function(s){s.exports=function(e){return e[1]}},8679:function(s){var e=window.MutationObserver||window.WebKitMutationObserver||window.MozMutationObserver,t=window.WeakMap;if(t===void 0){var n=Object.defineProperty,o=Date.now()%1e9;(t=function(){this.name="__st"+(1e9*Math.random()>>>0)+o+++"__"}).prototype={set:function(F,G){var L=F[this.name];return L&&L[0]===F?L[1]=G:n(F,this.name,{value:[F,G],writable:!0}),this},get:function(F){var G;return(G=F[this.name])&&G[0]===F?G[1]:void 0},delete:function(F){var G=F[this.name];if(!G)return!1;var L=G[0]===F;return G[0]=G[1]=void 0,L},has:function(F){var G=F[this.name];return!!G&&G[0]===F}}}var a=new t,r=window.msSetImmediate;if(!r){var l=[],d=String(Math.random());window.addEventListener("message",function(F){if(F.data===d){var G=l;l=[],G.forEach(function(L){L()})}}),r=function(F){l.push(F),window.postMessage(d,"*")}}var h=!1,f=[];function _(){h=!1;var F=f;f=[],F.sort(function(L,B){return L.uid_-B.uid_});var G=!1;F.forEach(function(L){var B=L.takeRecords();(function(W){W.nodes_.forEach(function(oe){var se=a.get(oe);se&&se.forEach(function(Y){Y.observer===W&&Y.removeTransientObservers()})})})(L),B.length&&(L.callback_(B,L),G=!0)}),G&&_()}function g(F,G){for(var L=F;L;L=L.parentNode){var B=a.get(L);if(B)for(var W=0;W<B.length;W++){var oe=B[W],se=oe.options;if(L===F||se.subtree){var Y=G(se);Y&&oe.enqueue(Y)}}}}var b,w,x=0;function v(F){this.callback_=F,this.nodes_=[],this.records_=[],this.uid_=++x}function T(F,G){this.type=F,this.target=G,this.addedNodes=[],this.removedNodes=[],this.previousSibling=null,this.nextSibling=null,this.attributeName=null,this.attributeNamespace=null,this.oldValue=null}function D(F,G){return b=new T(F,G)}function C(F){return w||((L=new T((G=b).type,G.target)).addedNodes=G.addedNodes.slice(),L.removedNodes=G.removedNodes.slice(),L.previousSibling=G.previousSibling,L.nextSibling=G.nextSibling,L.attributeName=G.attributeName,L.attributeNamespace=G.attributeNamespace,L.oldValue=G.oldValue,(w=L).oldValue=F,w);var G,L}function I(F,G){return F===G?F:w&&((L=F)===w||L===b)?w:null;var L}function N(F,G,L){this.observer=F,this.target=G,this.options=L,this.transientObservedNodes=[]}v.prototype={observe:function(F,G){var L;if(L=F,F=window.ShadowDOMPolyfill&&window.ShadowDOMPolyfill.wrapIfNeeded(L)||L,!G.childList&&!G.attributes&&!G.characterData||G.attributeOldValue&&!G.attributes||G.attributeFilter&&G.attributeFilter.length&&!G.attributes||G.characterDataOldValue&&!G.characterData)throw new SyntaxError;var B,W=a.get(F);W||a.set(F,W=[]);for(var oe=0;oe<W.length;oe++)if(W[oe].observer===this){(B=W[oe]).removeListeners(),B.options=G;break}B||(B=new N(this,F,G),W.push(B),this.nodes_.push(F)),B.addListeners()},disconnect:function(){this.nodes_.forEach(function(F){for(var G=a.get(F),L=0;L<G.length;L++){var B=G[L];if(B.observer===this){B.removeListeners(),G.splice(L,1);break}}},this),this.records_=[]},takeRecords:function(){var F=this.records_;return this.records_=[],F}},N.prototype={enqueue:function(F){var G,L=this.observer.records_,B=L.length;if(L.length>0){var W=I(L[B-1],F);if(W)return void(L[B-1]=W)}else G=this.observer,f.push(G),h||(h=!0,r(_));L[B]=F},addListeners:function(){this.addListeners_(this.target)},addListeners_:function(F){var G=this.options;G.attributes&&F.addEventListener("DOMAttrModified",this,!0),G.characterData&&F.addEventListener("DOMCharacterDataModified",this,!0),G.childList&&F.addEventListener("DOMNodeInserted",this,!0),(G.childList||G.subtree)&&F.addEventListener("DOMNodeRemoved",this,!0)},removeListeners:function(){this.removeListeners_(this.target)},removeListeners_:function(F){var G=this.options;G.attributes&&F.removeEventListener("DOMAttrModified",this,!0),G.characterData&&F.removeEventListener("DOMCharacterDataModified",this,!0),G.childList&&F.removeEventListener("DOMNodeInserted",this,!0),(G.childList||G.subtree)&&F.removeEventListener("DOMNodeRemoved",this,!0)},addTransientObserver:function(F){if(F!==this.target){this.addListeners_(F),this.transientObservedNodes.push(F);var G=a.get(F);G||a.set(F,G=[]),G.push(this)}},removeTransientObservers:function(){var F=this.transientObservedNodes;this.transientObservedNodes=[],F.forEach(function(G){this.removeListeners_(G);for(var L=a.get(G),B=0;B<L.length;B++)if(L[B]===this){L.splice(B,1);break}},this)},handleEvent:function(F){switch(F.stopImmediatePropagation(),F.type){case"DOMAttrModified":var G=F.attrName,L=F.relatedNode.namespaceURI,B=F.target;(oe=new D("attributes",B)).attributeName=G,oe.attributeNamespace=L;var W=null;typeof MutationEvent<"u"&&F.attrChange===MutationEvent.ADDITION||(W=F.prevValue),g(B,function(Q){if(Q.attributes&&(!Q.attributeFilter||!Q.attributeFilter.length||Q.attributeFilter.indexOf(G)!==-1||Q.attributeFilter.indexOf(L)!==-1))return Q.attributeOldValue?C(W):oe});break;case"DOMCharacterDataModified":var oe=D("characterData",B=F.target);W=F.prevValue,g(B,function(Q){if(Q.characterData)return Q.characterDataOldValue?C(W):oe});break;case"DOMNodeRemoved":this.addTransientObserver(F.target);case"DOMNodeInserted":B=F.relatedNode;var se,Y,q=F.target;F.type==="DOMNodeInserted"?(se=[q],Y=[]):(se=[],Y=[q]);var ie=q.previousSibling,me=q.nextSibling;(oe=D("childList",B)).addedNodes=se,oe.removedNodes=Y,oe.previousSibling=ie,oe.nextSibling=me,g(B,function(Q){if(Q.childList)return oe})}b=w=void 0}},e||(e=v),s.exports=e},7588:function(s){var e=function(t){var n,o=Object.prototype,a=o.hasOwnProperty,r=typeof Symbol=="function"?Symbol:{},l=r.iterator||"@@iterator",d=r.asyncIterator||"@@asyncIterator",h=r.toStringTag||"@@toStringTag";function f(Q,K,le){return Object.defineProperty(Q,K,{value:le,enumerable:!0,configurable:!0,writable:!0}),Q[K]}try{f({},"")}catch{f=function(K,le,de){return K[le]=de}}function _(Q,K,le,de){var ve=K&&K.prototype instanceof D?K:D,$=Object.create(ve.prototype),z=new q(de||[]);return $._invoke=function(ne,V,ye){var Se=b;return function(Le,De){if(Se===x)throw new Error("Generator is already running");if(Se===v){if(Le==="throw")throw De;return me()}for(ye.method=Le,ye.arg=De;;){var Oe=ye.delegate;if(Oe){var ke=oe(Oe,ye);if(ke){if(ke===T)continue;return ke}}if(ye.method==="next")ye.sent=ye._sent=ye.arg;else if(ye.method==="throw"){if(Se===b)throw Se=v,ye.arg;ye.dispatchException(ye.arg)}else ye.method==="return"&&ye.abrupt("return",ye.arg);Se=x;var Ve=g(ne,V,ye);if(Ve.type==="normal"){if(Se=ye.done?v:w,Ve.arg===T)continue;return{value:Ve.arg,done:ye.done}}Ve.type==="throw"&&(Se=v,ye.method="throw",ye.arg=Ve.arg)}}}(Q,le,z),$}function g(Q,K,le){try{return{type:"normal",arg:Q.call(K,le)}}catch(de){return{type:"throw",arg:de}}}t.wrap=_;var b="suspendedStart",w="suspendedYield",x="executing",v="completed",T={};function D(){}function C(){}function I(){}var N={};f(N,l,function(){return this});var F=Object.getPrototypeOf,G=F&&F(F(ie([])));G&&G!==o&&a.call(G,l)&&(N=G);var L=I.prototype=D.prototype=Object.create(N);function B(Q){["next","throw","return"].forEach(function(K){f(Q,K,function(le){return this._invoke(K,le)})})}function W(Q,K){function le(ve,$,z,ne){var V=g(Q[ve],Q,$);if(V.type!=="throw"){var ye=V.arg,Se=ye.value;return Se&&typeof Se=="object"&&a.call(Se,"__await")?K.resolve(Se.__await).then(function(Le){le("next",Le,z,ne)},function(Le){le("throw",Le,z,ne)}):K.resolve(Se).then(function(Le){ye.value=Le,z(ye)},function(Le){return le("throw",Le,z,ne)})}ne(V.arg)}var de;this._invoke=function(ve,$){function z(){return new K(function(ne,V){le(ve,$,ne,V)})}return de=de?de.then(z,z):z()}}function oe(Q,K){var le=Q.iterator[K.method];if(le===n){if(K.delegate=null,K.method==="throw"){if(Q.iterator.return&&(K.method="return",K.arg=n,oe(Q,K),K.method==="throw"))return T;K.method="throw",K.arg=new TypeError("The iterator does not provide a 'throw' method")}return T}var de=g(le,Q.iterator,K.arg);if(de.type==="throw")return K.method="throw",K.arg=de.arg,K.delegate=null,T;var ve=de.arg;return ve?ve.done?(K[Q.resultName]=ve.value,K.next=Q.nextLoc,K.method!=="return"&&(K.method="next",K.arg=n),K.delegate=null,T):ve:(K.method="throw",K.arg=new TypeError("iterator result is not an object"),K.delegate=null,T)}function se(Q){var K={tryLoc:Q[0]};1 in Q&&(K.catchLoc=Q[1]),2 in Q&&(K.finallyLoc=Q[2],K.afterLoc=Q[3]),this.tryEntries.push(K)}function Y(Q){var K=Q.completion||{};K.type="normal",delete K.arg,Q.completion=K}function q(Q){this.tryEntries=[{tryLoc:"root"}],Q.forEach(se,this),this.reset(!0)}function ie(Q){if(Q){var K=Q[l];if(K)return K.call(Q);if(typeof Q.next=="function")return Q;if(!isNaN(Q.length)){var le=-1,de=function ve(){for(;++le<Q.length;)if(a.call(Q,le))return ve.value=Q[le],ve.done=!1,ve;return ve.value=n,ve.done=!0,ve};return de.next=de}}return{next:me}}function me(){return{value:n,done:!0}}return C.prototype=I,f(L,"constructor",I),f(I,"constructor",C),C.displayName=f(I,h,"GeneratorFunction"),t.isGeneratorFunction=function(Q){var K=typeof Q=="function"&&Q.constructor;return!!K&&(K===C||(K.displayName||K.name)==="GeneratorFunction")},t.mark=function(Q){return Object.setPrototypeOf?Object.setPrototypeOf(Q,I):(Q.__proto__=I,f(Q,h,"GeneratorFunction")),Q.prototype=Object.create(L),Q},t.awrap=function(Q){return{__await:Q}},B(W.prototype),f(W.prototype,d,function(){return this}),t.AsyncIterator=W,t.async=function(Q,K,le,de,ve){ve===void 0&&(ve=Promise);var $=new W(_(Q,K,le,de),ve);return t.isGeneratorFunction(K)?$:$.next().then(function(z){return z.done?z.value:$.next()})},B(L),f(L,h,"Generator"),f(L,l,function(){return this}),f(L,"toString",function(){return"[object Generator]"}),t.keys=function(Q){var K=[];for(var le in Q)K.push(le);return K.reverse(),function de(){for(;K.length;){var ve=K.pop();if(ve in Q)return de.value=ve,de.done=!1,de}return de.done=!0,de}},t.values=ie,q.prototype={constructor:q,reset:function(Q){if(this.prev=0,this.next=0,this.sent=this._sent=n,this.done=!1,this.delegate=null,this.method="next",this.arg=n,this.tryEntries.forEach(Y),!Q)for(var K in this)K.charAt(0)==="t"&&a.call(this,K)&&!isNaN(+K.slice(1))&&(this[K]=n)},stop:function(){this.done=!0;var Q=this.tryEntries[0].completion;if(Q.type==="throw")throw Q.arg;return this.rval},dispatchException:function(Q){if(this.done)throw Q;var K=this;function le(V,ye){return $.type="throw",$.arg=Q,K.next=V,ye&&(K.method="next",K.arg=n),!!ye}for(var de=this.tryEntries.length-1;de>=0;--de){var ve=this.tryEntries[de],$=ve.completion;if(ve.tryLoc==="root")return le("end");if(ve.tryLoc<=this.prev){var z=a.call(ve,"catchLoc"),ne=a.call(ve,"finallyLoc");if(z&&ne){if(this.prev<ve.catchLoc)return le(ve.catchLoc,!0);if(this.prev<ve.finallyLoc)return le(ve.finallyLoc)}else if(z){if(this.prev<ve.catchLoc)return le(ve.catchLoc,!0)}else{if(!ne)throw new Error("try statement without catch or finally");if(this.prev<ve.finallyLoc)return le(ve.finallyLoc)}}}},abrupt:function(Q,K){for(var le=this.tryEntries.length-1;le>=0;--le){var de=this.tryEntries[le];if(de.tryLoc<=this.prev&&a.call(de,"finallyLoc")&&this.prev<de.finallyLoc){var ve=de;break}}ve&&(Q==="break"||Q==="continue")&&ve.tryLoc<=K&&K<=ve.finallyLoc&&(ve=null);var $=ve?ve.completion:{};return $.type=Q,$.arg=K,ve?(this.method="next",this.next=ve.finallyLoc,T):this.complete($)},complete:function(Q,K){if(Q.type==="throw")throw Q.arg;return Q.type==="break"||Q.type==="continue"?this.next=Q.arg:Q.type==="return"?(this.rval=this.arg=Q.arg,this.method="return",this.next="end"):Q.type==="normal"&&K&&(this.next=K),T},finish:function(Q){for(var K=this.tryEntries.length-1;K>=0;--K){var le=this.tryEntries[K];if(le.finallyLoc===Q)return this.complete(le.completion,le.afterLoc),Y(le),T}},catch:function(Q){for(var K=this.tryEntries.length-1;K>=0;--K){var le=this.tryEntries[K];if(le.tryLoc===Q){var de=le.completion;if(de.type==="throw"){var ve=de.arg;Y(le)}return ve}}throw new Error("illegal catch attempt")},delegateYield:function(Q,K,le){return this.delegate={iterator:ie(Q),resultName:K,nextLoc:le},this.method==="next"&&(this.arg=n),T}},t}(s.exports);try{regeneratorRuntime=e}catch{typeof globalThis=="object"?globalThis.regeneratorRuntime=e:Function("r","regeneratorRuntime = r")(e)}},8702:function(s,e,t){t.d(e,{Z:function(){return de}});var n=t(4296),o=t(6464),a=t(6881),r=t(2942),l=t(7003),d=t(3379),h=t.n(d),f=t(7795),_=t.n(f),g=t(569),b=t.n(g),w=t(3565),x=t.n(w),v=t(9216),T=t.n(v),D=t(4589),C=t.n(D),I=t(5313),N={};I.Z&&I.Z.locals&&(N.locals=I.Z.locals);var F,G=0,L={};L.styleTagTransform=C(),L.setAttributes=x(),L.insert=b().bind(null,"head"),L.domAPI=_(),L.insertStyleElement=T(),N.use=function(ve){return L.options=ve||{},G++||(F=h()(I.Z,L)),N},N.unuse=function(){G>0&&!--G&&(F(),F=null)};var B=N;function W(ve){var $,z;return{c:function(){$=(0,r.bi5)("svg"),z=(0,r.bi5)("path"),(0,r.Ljt)(z,"d","M599.99999 832.000004h47.999999a24 24 0 0 0 23.999999-24V376.000013a24 24 0 0 0-23.999999-24h-47.999999a24 24 0 0 0-24 24v431.999991a24 24 0 0 0 24 24zM927.999983 160.000017h-164.819997l-67.999998-113.399998A95.999998 95.999998 0 0 0 612.819989 0.00002H411.179993a95.999998 95.999998 0 0 0-82.319998 46.599999L260.819996 160.000017H95.999999A31.999999 31.999999 0 0 0 64 192.000016v32a31.999999 31.999999 0 0 0 31.999999 31.999999h32v671.999987a95.999998 95.999998 0 0 0 95.999998 95.999998h575.999989a95.999998 95.999998 0 0 0 95.999998-95.999998V256.000015h31.999999a31.999999 31.999999 0 0 0 32-31.999999V192.000016a31.999999 31.999999 0 0 0-32-31.999999zM407.679993 101.820018A12 12 0 0 1 417.999993 96.000018h187.999996a12 12 0 0 1 10.3 5.82L651.219989 160.000017H372.779994zM799.999986 928.000002H223.999997V256.000015h575.999989z m-423.999992-95.999998h47.999999a24 24 0 0 0 24-24V376.000013a24 24 0 0 0-24-24h-47.999999a24 24 0 0 0-24 24v431.999991a24 24 0 0 0 24 24z"),(0,r.Ljt)($,"class","vc-icon-delete"),(0,r.Ljt)($,"viewBox","0 0 1024 1024"),(0,r.Ljt)($,"width","200"),(0,r.Ljt)($,"height","200")},m:function(ne,V){(0,r.$Tr)(ne,$,V),(0,r.R3I)($,z)},d:function(ne){ne&&(0,r.ogt)($)}}}function oe(ve){var $,z,ne;return{c:function(){$=(0,r.bi5)("svg"),z=(0,r.bi5)("path"),ne=(0,r.bi5)("path"),(0,r.Ljt)(z,"d","M874.154197 150.116875A511.970373 511.970373 0 1 0 1023.993986 511.991687a511.927744 511.927744 0 0 0-149.839789-361.874812z m-75.324866 648.382129A405.398688 405.398688 0 1 1 917.422301 511.991687a405.313431 405.313431 0 0 1-118.59297 286.507317z"),(0,r.Ljt)(ne,"d","M725.039096 299.274605a54.351559 54.351559 0 0 0-76.731613 0l-135.431297 135.431297L377.274375 299.274605a54.436817 54.436817 0 0 0-76.944756 76.987385l135.388668 135.431297-135.388668 135.473925a54.436817 54.436817 0 0 0 76.944756 76.987385l135.388668-135.431297 135.431297 135.473926a54.436817 54.436817 0 0 0 76.731613-76.987385l-135.388668-135.473926 135.388668-135.431296a54.479445 54.479445 0 0 0 0.213143-77.030014z"),(0,r.Ljt)($,"viewBox","0 0 1024 1024"),(0,r.Ljt)($,"width","200"),(0,r.Ljt)($,"height","200")},m:function(V,ye){(0,r.$Tr)(V,$,ye),(0,r.R3I)($,z),(0,r.R3I)($,ne)},d:function(V){V&&(0,r.ogt)($)}}}function se(ve){var $,z;return{c:function(){$=(0,r.bi5)("svg"),z=(0,r.bi5)("path"),(0,r.Ljt)(z,"fill-rule","evenodd"),(0,r.Ljt)(z,"d","M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"),(0,r.Ljt)($,"class","vc-icon-copy"),(0,r.Ljt)($,"viewBox","0 0 16 16")},m:function(ne,V){(0,r.$Tr)(ne,$,V),(0,r.R3I)($,z)},d:function(ne){ne&&(0,r.ogt)($)}}}function Y(ve){var $,z;return{c:function(){$=(0,r.bi5)("svg"),z=(0,r.bi5)("path"),(0,r.Ljt)(z,"fill-rule","evenodd"),(0,r.Ljt)(z,"d","M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z"),(0,r.Ljt)($,"class","vc-icon-suc"),(0,r.Ljt)($,"viewBox","0 0 16 16")},m:function(ne,V){(0,r.$Tr)(ne,$,V),(0,r.R3I)($,z)},d:function(ne){ne&&(0,r.ogt)($)}}}function q(ve){var $,z,ne;return{c:function(){$=(0,r.bi5)("svg"),z=(0,r.bi5)("path"),ne=(0,r.bi5)("path"),(0,r.Ljt)(z,"d","M776.533333 1024 162.133333 1024C72.533333 1024 0 951.466667 0 861.866667L0 247.466667C0 157.866667 72.533333 85.333333 162.133333 85.333333L469.333333 85.333333c25.6 0 42.666667 17.066667 42.666667 42.666667s-17.066667 42.666667-42.666667 42.666667L162.133333 170.666667C119.466667 170.666667 85.333333 204.8 85.333333 247.466667l0 610.133333c0 42.666667 34.133333 76.8 76.8 76.8l610.133333 0c42.666667 0 76.8-34.133333 76.8-76.8L849.066667 554.666667c0-25.6 17.066667-42.666667 42.666667-42.666667s42.666667 17.066667 42.666667 42.666667l0 307.2C938.666667 951.466667 866.133333 1024 776.533333 1024z"),(0,r.Ljt)(ne,"d","M256 810.666667c-12.8 0-21.333333-4.266667-29.866667-12.8C217.6 789.333333 213.333333 772.266667 213.333333 759.466667l42.666667-213.333333c0-8.533333 4.266667-17.066667 12.8-21.333333l512-512c17.066667-17.066667 42.666667-17.066667 59.733333 0l170.666667 170.666667c17.066667 17.066667 17.066667 42.666667 0 59.733333l-512 512c-4.266667 4.266667-12.8 8.533333-21.333333 12.8l-213.333333 42.666667C260.266667 810.666667 260.266667 810.666667 256 810.666667zM337.066667 576l-25.6 136.533333 136.533333-25.6L921.6 213.333333 810.666667 102.4 337.066667 576z"),(0,r.Ljt)($,"class","vc-icon-edit"),(0,r.Ljt)($,"viewBox","0 0 1024 1024"),(0,r.Ljt)($,"width","200"),(0,r.Ljt)($,"height","200")},m:function(V,ye){(0,r.$Tr)(V,$,ye),(0,r.R3I)($,z),(0,r.R3I)($,ne)},d:function(V){V&&(0,r.ogt)($)}}}function ie(ve){var $,z;return{c:function(){$=(0,r.bi5)("svg"),z=(0,r.bi5)("path"),(0,r.Ljt)(z,"d","M581.338005 987.646578c-2.867097 4.095853-4.573702 8.669555-8.191705 12.287558a83.214071 83.214071 0 0 1-60.959939 24.029001 83.214071 83.214071 0 0 1-61.028203-24.029001c-3.618003-3.618003-5.324608-8.191705-8.123441-12.15103L24.370323 569.050448a83.418864 83.418864 0 0 1 117.892289-117.89229l369.923749 369.92375L1308.829682 24.438587A83.418864 83.418864 0 0 1 1426.721971 142.194348L581.338005 987.646578z"),(0,r.Ljt)($,"class","vc-icon-don"),(0,r.Ljt)($,"viewBox","0 0 1501 1024"),(0,r.Ljt)($,"width","200"),(0,r.Ljt)($,"height","200")},m:function(ne,V){(0,r.$Tr)(ne,$,V),(0,r.R3I)($,z)},d:function(ne){ne&&(0,r.ogt)($)}}}function me(ve){var $,z;return{c:function(){$=(0,r.bi5)("svg"),z=(0,r.bi5)("path"),(0,r.Ljt)(z,"d","M894.976 574.464q0 78.848-29.696 148.48t-81.408 123.392-121.856 88.064-151.04 41.472q-5.12 1.024-9.216 1.536t-9.216 0.512l-177.152 0q-17.408 0-34.304-6.144t-30.208-16.896-22.016-25.088-8.704-29.696 8.192-29.696 21.504-24.576 29.696-16.384 33.792-6.144l158.72 1.024q54.272 0 102.4-19.968t83.968-53.76 56.32-79.36 20.48-97.792q0-49.152-18.432-92.16t-50.688-76.8-75.264-54.784-93.184-26.112q-2.048 0-2.56 0.512t-2.56 0.512l-162.816 0 0 80.896q0 17.408-13.824 25.6t-44.544-10.24q-8.192-5.12-26.112-17.92t-41.984-30.208-50.688-36.864l-51.2-38.912q-15.36-12.288-26.624-22.016t-11.264-24.064q0-12.288 12.8-25.6t29.184-26.624q18.432-15.36 44.032-35.84t50.688-39.936 45.056-35.328 28.16-22.016q24.576-17.408 39.936-7.168t16.384 30.72l0 81.92 162.816 0q5.12 0 10.752 1.024t10.752 2.048q79.872 8.192 149.504 41.984t121.344 87.552 80.896 123.392 29.184 147.456z"),(0,r.Ljt)($,"class","vc-icon-cancel"),(0,r.Ljt)($,"viewBox","0 0 1024 1024"),(0,r.Ljt)($,"width","200"),(0,r.Ljt)($,"height","200")},m:function(ne,V){(0,r.$Tr)(ne,$,V),(0,r.R3I)($,z)},d:function(ne){ne&&(0,r.ogt)($)}}}function Q(ve){var $,z,ne,V,ye,Se,Le,De,Oe,ke=ve[0]==="delete"&&W(),Ve=ve[0]==="clear"&&oe(),je=ve[0]==="copy"&&se(),$t=ve[0]==="success"&&Y(),jt=ve[0]==="edit"&&q(),Ot=ve[0]==="done"&&ie(),_t=ve[0]==="cancel"&&me();return{c:function(){$=(0,r.bGB)("i"),ke&&ke.c(),z=(0,r.DhX)(),Ve&&Ve.c(),ne=(0,r.DhX)(),je&&je.c(),V=(0,r.DhX)(),$t&&$t.c(),ye=(0,r.DhX)(),jt&&jt.c(),Se=(0,r.DhX)(),Ot&&Ot.c(),Le=(0,r.DhX)(),_t&&_t.c(),(0,r.Ljt)($,"class","vc-icon")},m:function(pt,vt){(0,r.$Tr)(pt,$,vt),ke&&ke.m($,null),(0,r.R3I)($,z),Ve&&Ve.m($,null),(0,r.R3I)($,ne),je&&je.m($,null),(0,r.R3I)($,V),$t&&$t.m($,null),(0,r.R3I)($,ye),jt&&jt.m($,null),(0,r.R3I)($,Se),Ot&&Ot.m($,null),(0,r.R3I)($,Le),_t&&_t.m($,null),De||(Oe=(0,r.oLt)($,"click",ve[1]),De=!0)},p:function(pt,vt){vt[0],pt[0]==="delete"?ke||((ke=W()).c(),ke.m($,z)):ke&&(ke.d(1),ke=null),pt[0]==="clear"?Ve||((Ve=oe()).c(),Ve.m($,ne)):Ve&&(Ve.d(1),Ve=null),pt[0]==="copy"?je||((je=se()).c(),je.m($,V)):je&&(je.d(1),je=null),pt[0]==="success"?$t||(($t=Y()).c(),$t.m($,ye)):$t&&($t.d(1),$t=null),pt[0]==="edit"?jt||((jt=q()).c(),jt.m($,Se)):jt&&(jt.d(1),jt=null),pt[0]==="done"?Ot||((Ot=ie()).c(),Ot.m($,Le)):Ot&&(Ot.d(1),Ot=null),pt[0]==="cancel"?_t||((_t=me()).c(),_t.m($,null)):_t&&(_t.d(1),_t=null)},i:r.ZTd,o:r.ZTd,d:function(pt){pt&&(0,r.ogt)($),ke&&ke.d(),Ve&&Ve.d(),je&&je.d(),$t&&$t.d(),jt&&jt.d(),Ot&&Ot.d(),_t&&_t.d(),De=!1,Oe()}}}function K(ve,$,z){var ne=$.name;return(0,l.H3)(function(){B.use()}),(0,l.ev)(function(){B.unuse()}),ve.$$set=function(V){"name"in V&&z(0,ne=V.name)},[ne,function(V){r.cKT.call(this,ve,V)}]}var le=function(ve){function $(z){var ne;return ne=ve.call(this)||this,(0,r.S1n)((0,o.Z)(ne),z,K,Q,r.N8,{name:0}),ne}return(0,a.Z)($,ve),(0,n.Z)($,[{key:"name",get:function(){return this.$$.ctx[0]},set:function(z){this.$$set({name:z}),(0,r.yl1)()}}]),$}(r.f_C),de=le},3903:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__(6464),_babel_runtime_helpers_inheritsLoose__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(6881),svelte_internal__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(2942),svelte__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(7003),_component_icon_icon_svelte__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(8702),_logTool__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(8665),_log_model__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(5629),_logCommand_less__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(3411);function get_each_context(s,e,t){var n=s.slice();return n[28]=e[t],n}function create_if_block_2(s){var e,t,n;return{c:function(){(e=(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.bGB)("li")).textContent="Close",(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.Ljt)(e,"class","vc-cmd-prompted-hide")},m:function(o,a){(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.$Tr)(o,e,a),t||(n=(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.oLt)(e,"click",s[5]),t=!0)},p:svelte_internal__WEBPACK_IMPORTED_MODULE_0__.ZTd,d:function(o){o&&(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.ogt)(e),t=!1,n()}}}function create_else_block(s){var e;return{c:function(){(e=(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.bGB)("li")).textContent="No Prompted"},m:function(t,n){(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.$Tr)(t,e,n)},p:svelte_internal__WEBPACK_IMPORTED_MODULE_0__.ZTd,d:function(t){t&&(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.ogt)(e)}}}function create_each_block(s){var e,t,n,o,a=s[28].text+"";function r(){return s[14](s[28])}return{c:function(){e=(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.bGB)("li"),t=(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.fLW)(a)},m:function(l,d){(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.$Tr)(l,e,d),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.R3I)(e,t),n||(o=(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.oLt)(e,"click",r),n=!0)},p:function(l,d){s=l,8&d&&a!==(a=s[28].text+"")&&(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.rTO)(t,a)},d:function(l){l&&(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.ogt)(e),n=!1,o()}}}function create_if_block_1(s){var e,t,n,o,a;return t=new _component_icon_icon_svelte__WEBPACK_IMPORTED_MODULE_2__.Z({props:{name:"clear"}}),{c:function(){e=(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.bGB)("div"),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.YCL)(t.$$.fragment),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.Ljt)(e,"class","vc-cmd-clear-btn")},m:function(r,l){(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.$Tr)(r,e,l),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.yef)(t,e,null),n=!0,o||(a=(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.oLt)(e,"click",(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.AT7)(s[17])),o=!0)},p:svelte_internal__WEBPACK_IMPORTED_MODULE_0__.ZTd,i:function(r){n||((0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.Ui)(t.$$.fragment,r),n=!0)},o:function(r){(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.etI)(t.$$.fragment,r),n=!1},d:function(r){r&&(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.ogt)(e),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.vpE)(t),o=!1,a()}}}function create_if_block(s){var e,t,n,o,a;return t=new _component_icon_icon_svelte__WEBPACK_IMPORTED_MODULE_2__.Z({props:{name:"clear"}}),{c:function(){e=(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.bGB)("div"),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.YCL)(t.$$.fragment),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.Ljt)(e,"class","vc-cmd-clear-btn")},m:function(r,l){(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.$Tr)(r,e,l),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.yef)(t,e,null),n=!0,o||(a=(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.oLt)(e,"click",(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.AT7)(s[19])),o=!0)},p:svelte_internal__WEBPACK_IMPORTED_MODULE_0__.ZTd,i:function(r){n||((0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.Ui)(t.$$.fragment,r),n=!0)},o:function(r){(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.etI)(t.$$.fragment,r),n=!1},d:function(r){r&&(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.ogt)(e),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.vpE)(t),o=!1,a()}}}function create_fragment(s){for(var e,t,n,o,a,r,l,d,h,f,_,g,b,w,x,v,T,D,C,I,N,F=s[3].length>0&&create_if_block_2(s),G=s[3],L=[],B=0;B<G.length;B+=1)L[B]=create_each_block(get_each_context(s,G,B));var W=null;G.length||(W=create_else_block());var oe=s[1].length>0&&create_if_block_1(s),se=s[4].length>0&&create_if_block(s);return{c:function(){e=(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.bGB)("form"),t=(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.bGB)("ul"),F&&F.c(),n=(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.DhX)();for(var Y=0;Y<L.length;Y+=1)L[Y].c();W&&W.c(),o=(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.DhX)(),a=(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.bGB)("div"),r=(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.bGB)("textarea"),l=(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.DhX)(),oe&&oe.c(),d=(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.DhX)(),(h=(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.bGB)("button")).textContent="OK",f=(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.DhX)(),_=(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.bGB)("form"),g=(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.bGB)("ul"),b=(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.DhX)(),w=(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.bGB)("div"),x=(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.bGB)("textarea"),v=(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.DhX)(),se&&se.c(),T=(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.DhX)(),(D=(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.bGB)("button")).textContent="Filter",(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.Ljt)(t,"class","vc-cmd-prompted"),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.Ljt)(t,"style",s[2]),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.Ljt)(r,"class","vc-cmd-input"),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.Ljt)(r,"placeholder","command..."),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.Ljt)(a,"class","vc-cmd-input-wrap"),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.Ljt)(h,"class","vc-cmd-btn"),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.Ljt)(h,"type","submit"),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.Ljt)(e,"class","vc-cmd"),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.Ljt)(g,"class","vc-cmd-prompted"),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.Ljt)(x,"class","vc-cmd-input"),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.Ljt)(x,"placeholder","filter..."),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.Ljt)(w,"class","vc-cmd-input-wrap"),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.Ljt)(D,"class","vc-cmd-btn"),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.Ljt)(D,"type","submit"),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.Ljt)(_,"class","vc-cmd vc-filter")},m:function(Y,q){(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.$Tr)(Y,e,q),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.R3I)(e,t),F&&F.m(t,null),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.R3I)(t,n);for(var ie=0;ie<L.length;ie+=1)L[ie].m(t,null);W&&W.m(t,null),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.R3I)(e,o),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.R3I)(e,a),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.R3I)(a,r),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.BmG)(r,s[1]),s[16](r),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.R3I)(a,l),oe&&oe.m(a,null),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.R3I)(e,d),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.R3I)(e,h),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.$Tr)(Y,f,q),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.$Tr)(Y,_,q),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.R3I)(_,g),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.R3I)(_,b),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.R3I)(_,w),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.R3I)(w,x),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.BmG)(x,s[4]),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.R3I)(w,v),se&&se.m(w,null),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.R3I)(_,T),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.R3I)(_,D),C=!0,I||(N=[(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.oLt)(r,"input",s[15]),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.oLt)(r,"keydown",s[10]),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.oLt)(r,"keyup",s[11]),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.oLt)(r,"focus",s[8]),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.oLt)(r,"blur",s[9]),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.oLt)(e,"submit",(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.AT7)(s[12])),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.oLt)(x,"input",s[18]),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.oLt)(_,"submit",(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.AT7)(s[13]))],I=!0)},p:function(Y,q){var ie=q[0];if(Y[3].length>0?F?F.p(Y,ie):((F=create_if_block_2(Y)).c(),F.m(t,n)):F&&(F.d(1),F=null),136&ie){var me;for(G=Y[3],me=0;me<G.length;me+=1){var Q=get_each_context(Y,G,me);L[me]?L[me].p(Q,ie):(L[me]=create_each_block(Q),L[me].c(),L[me].m(t,null))}for(;me<L.length;me+=1)L[me].d(1);L.length=G.length,!G.length&&W?W.p(Y,ie):G.length?W&&(W.d(1),W=null):((W=create_else_block()).c(),W.m(t,null))}(!C||4&ie)&&(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.Ljt)(t,"style",Y[2]),2&ie&&(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.BmG)(r,Y[1]),Y[1].length>0?oe?(oe.p(Y,ie),2&ie&&(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.Ui)(oe,1)):((oe=create_if_block_1(Y)).c(),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.Ui)(oe,1),oe.m(a,null)):oe&&((0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dvw)(),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.etI)(oe,1,1,function(){oe=null}),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.gbL)()),16&ie&&(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.BmG)(x,Y[4]),Y[4].length>0?se?(se.p(Y,ie),16&ie&&(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.Ui)(se,1)):((se=create_if_block(Y)).c(),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.Ui)(se,1),se.m(w,null)):se&&((0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dvw)(),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.etI)(se,1,1,function(){se=null}),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.gbL)())},i:function(Y){C||((0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.Ui)(oe),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.Ui)(se),C=!0)},o:function(Y){(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.etI)(oe),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.etI)(se),C=!1},d:function(Y){Y&&(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.ogt)(e),F&&F.d(),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.RMB)(L,Y),W&&W.d(),s[16](null),oe&&oe.d(),Y&&(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.ogt)(f),Y&&(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.ogt)(_),se&&se.d(),I=!1,(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.j7q)(N)}}}function instance($$self,$$props,$$invalidate){var module=_log_model__WEBPACK_IMPORTED_MODULE_3__.W.getSingleton(_log_model__WEBPACK_IMPORTED_MODULE_3__.W,"VConsoleLogModel"),cachedObjKeys={},dispatch=(0,svelte__WEBPACK_IMPORTED_MODULE_1__.x)(),cmdElement,cmdValue="",promptedStyle="",promptedList=[],filterValue="";(0,svelte__WEBPACK_IMPORTED_MODULE_1__.H3)(function(){_logCommand_less__WEBPACK_IMPORTED_MODULE_4__.Z.use()}),(0,svelte__WEBPACK_IMPORTED_MODULE_1__.ev)(function(){_logCommand_less__WEBPACK_IMPORTED_MODULE_4__.Z.unuse()});var evalCommand=function(s){module.evalCommand(s)},moveCursorToPos=function(s,e){s.setSelectionRange&&setTimeout(function(){s.setSelectionRange(e,e)},1)},clearPromptedList=function(){$$invalidate(2,promptedStyle="display: none;"),$$invalidate(3,promptedList=[])},updatePromptedList=function updatePromptedList(identifier){if(cmdValue!==""){identifier||(identifier=(0,_logTool__WEBPACK_IMPORTED_MODULE_5__.oj)(cmdValue));var objName="window",keyName=cmdValue;if(identifier.front.text!=="."&&identifier.front.text!=="["||(objName=identifier.front.before,keyName=identifier.back.text!==""?identifier.back.before:identifier.front.after),keyName=keyName.replace(/(^['"]+)|(['"']+$)/g,""),!cachedObjKeys[objName])try{cachedObjKeys[objName]=Object.getOwnPropertyNames(eval("("+objName+")")).sort()}catch(s){}try{if(cachedObjKeys[objName])for(var i=0;i<cachedObjKeys[objName].length&&!(promptedList.length>=100);i++){var key=String(cachedObjKeys[objName][i]),keyPattern=new RegExp("^"+keyName,"i");if(keyPattern.test(key)){var completeCmd=objName;identifier.front.text==="."||identifier.front.text===""?completeCmd+="."+key:identifier.front.text==="["&&(completeCmd+="['"+key+"']"),promptedList.push({text:key,value:completeCmd})}}}catch(s){}if(promptedList.length>0){var m=Math.min(200,31*(promptedList.length+1));$$invalidate(2,promptedStyle="display: block; height: "+m+"px; margin-top: "+(-m-2)+"px;"),$$invalidate(3,promptedList)}else clearPromptedList()}else clearPromptedList()},autoCompleteBrackets=function(s,e){if(!(e===8||e===46)&&s.front.after==="")switch(s.front.text){case"[":return $$invalidate(1,cmdValue+="]"),void moveCursorToPos(cmdElement,cmdValue.length-1);case"(":return $$invalidate(1,cmdValue+=")"),void moveCursorToPos(cmdElement,cmdValue.length-1);case"{":return $$invalidate(1,cmdValue+="}"),void moveCursorToPos(cmdElement,cmdValue.length-1)}},dispatchFilterEvent=function(){dispatch("filterText",{filterText:filterValue})},onTapClearText=function(s){s==="cmd"?($$invalidate(1,cmdValue=""),clearPromptedList()):s==="filter"&&($$invalidate(4,filterValue=""),dispatchFilterEvent())},onTapPromptedItem=function onTapPromptedItem(item){var type="";try{type=eval("typeof "+item.value)}catch(s){}$$invalidate(1,cmdValue=item.value+(type==="function"?"()":"")),clearPromptedList()},onCmdFocus=function(){updatePromptedList()},onCmdBlur=function(){},onCmdKeyDown=function(s){s.keyCode===13&&(s.preventDefault(),onCmdSubmit())},onCmdKeyUp=function(s){$$invalidate(3,promptedList=[]);var e=(0,_logTool__WEBPACK_IMPORTED_MODULE_5__.oj)(s.target.value);autoCompleteBrackets(e,s.keyCode),updatePromptedList(e)},onCmdSubmit=function(){cmdValue!==""&&evalCommand(cmdValue),clearPromptedList()},onFilterSubmit=function(s){dispatchFilterEvent()},click_handler=function(s){return onTapPromptedItem(s)};function textarea0_input_handler(){cmdValue=this.value,$$invalidate(1,cmdValue)}function textarea0_binding(s){svelte_internal__WEBPACK_IMPORTED_MODULE_0__.VnY[s?"unshift":"push"](function(){$$invalidate(0,cmdElement=s)})}var click_handler_1=function(){return onTapClearText("cmd")};function textarea1_input_handler(){filterValue=this.value,$$invalidate(4,filterValue)}var click_handler_2=function(){return onTapClearText("filter")};return[cmdElement,cmdValue,promptedStyle,promptedList,filterValue,clearPromptedList,onTapClearText,onTapPromptedItem,onCmdFocus,onCmdBlur,onCmdKeyDown,onCmdKeyUp,onCmdSubmit,onFilterSubmit,click_handler,textarea0_input_handler,textarea0_binding,click_handler_1,textarea1_input_handler,click_handler_2]}var LogCommand=function(s){function e(t){var n;return n=s.call(this)||this,(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.S1n)((0,_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_7__.Z)(n),t,instance,create_fragment,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.N8,{}),n}return(0,_babel_runtime_helpers_inheritsLoose__WEBPACK_IMPORTED_MODULE_6__.Z)(e,s),e}(svelte_internal__WEBPACK_IMPORTED_MODULE_0__.f_C);__webpack_exports__.Z=LogCommand},4687:function(s,e,t){t.d(e,{x:function(){return o}});var n=t(3313),o=function(){var a=(0,n.fZ)({updateTime:0}),r=a.subscribe,l=a.set,d=a.update;return{subscribe:r,set:l,update:d,updateTime:function(){d(function(h){return h.updateTime=Date.now(),h})}}}()},643:function(s,e,t){t.d(e,{N:function(){return n}});var n=function(){function o(){this._onDataUpdateCallbacks=[]}return o.getSingleton=function(a,r){return r||(r=a.toString()),o.singleton[r]||(o.singleton[r]=new a),o.singleton[r]},o}();n.singleton={}},5103:function(s,e,t){function n(z){var ne=z>0?new Date(z):new Date,V=ne.getDate()<10?"0"+ne.getDate():ne.getDate(),ye=ne.getMonth()<9?"0"+(ne.getMonth()+1):ne.getMonth()+1,Se=ne.getFullYear(),Le=ne.getHours()<10?"0"+ne.getHours():ne.getHours(),De=ne.getMinutes()<10?"0"+ne.getMinutes():ne.getMinutes(),Oe=ne.getSeconds()<10?"0"+ne.getSeconds():ne.getSeconds(),ke=ne.getMilliseconds()<10?"0"+ne.getMilliseconds():ne.getMilliseconds();return ke<100&&(ke="0"+ke),{time:+ne,year:Se,month:ye,day:V,hour:Le,minute:De,second:Oe,millisecond:ke}}function o(z){return Object.prototype.toString.call(z)==="[object Number]"}function a(z){return typeof z=="bigint"}function r(z){return typeof z=="string"}function l(z){return Object.prototype.toString.call(z)==="[object Array]"}function d(z){return typeof z=="boolean"}function h(z){return z===void 0}function f(z){return z===null}function _(z){return typeof z=="symbol"}function g(z){return!(Object.prototype.toString.call(z)!=="[object Object]"&&(o(z)||a(z)||r(z)||d(z)||l(z)||f(z)||b(z)||h(z)||_(z)))}function b(z){return typeof z=="function"}function w(z){return typeof HTMLElement=="object"?z instanceof HTMLElement:z&&typeof z=="object"&&z!==null&&z.nodeType===1&&typeof z.nodeName=="string"}function x(z){var ne=Object.prototype.toString.call(z);return ne==="[object Window]"||ne==="[object DOMWindow]"||ne==="[object global]"}function v(z){return z!=null&&typeof z!="string"&&typeof z!="boolean"&&typeof z!="number"&&typeof z!="function"&&typeof z!="symbol"&&typeof z!="bigint"&&typeof Symbol<"u"&&typeof z[Symbol.iterator]=="function"}function T(z){return Object.prototype.toString.call(z).replace(/\[object (.*)\]/,"$1")}t.d(e,{C4:function(){return a},DV:function(){return C},FJ:function(){return x},Ft:function(){return f},HD:function(){return r},H_:function(){return ve},KL:function(){return oe},Kn:function(){return g},MH:function(){return ie},PO:function(){return I},QI:function(){return de},QK:function(){return me},TW:function(){return v},_3:function(){return n},_D:function(){return Q},cF:function(){return le},hZ:function(){return W},hj:function(){return o},id:function(){return se},jn:function(){return d},kJ:function(){return l},kK:function(){return w},mf:function(){return b},o8:function(){return h},po:function(){return K},qr:function(){return q},qt:function(){return $},rE:function(){return G},yk:function(){return _},zl:function(){return T}});var D=/(function|class) ([^ \{\()}]{1,})[\(| ]/;function C(z){var ne;if(z==null)return"";var V=D.exec((z==null||(ne=z.constructor)==null?void 0:ne.toString())||"");return V&&V.length>1?V[2]:""}function I(z){var ne,V=Object.prototype.hasOwnProperty;if(!z||typeof z!="object"||z.nodeType||x(z))return!1;try{if(z.constructor&&!V.call(z,"constructor")&&!V.call(z.constructor.prototype,"isPrototypeOf"))return!1}catch{return!1}for(ne in z);return ne===void 0||V.call(z,ne)}var N=/[\n\t]/g,F=function(z){return{"\n":"\\n","	":"\\t"}[z]};function G(z){return typeof z!="string"?z:String(z).replace(N,F)}var L=function(z,ne){ne===void 0&&(ne=0);var V="";return r(z)?(ne>0&&(z=se(z,ne)),V+='"'+G(z)+'"'):_(z)?V+=String(z).replace(/^Symbol\((.*)\)$/i,'Symbol("$1")'):b(z)?V+=(z.name||"function")+"()":a(z)?V+=String(z)+"n":V+=String(z),V},B=function z(ne,V,ye){if(ye===void 0&&(ye=0),g(ne)||l(ne))if(V.circularFinder(ne)){var Se="";if(l(ne))Se="(Circular Array)";else if(g(ne)){var Le;Se="(Circular "+(((Le=ne.constructor)==null?void 0:Le.name)||"Object")+")"}V.ret+=V.standardJSON?'"'+Se+'"':Se}else{var De="",Oe="";if(V.pretty){for(var ke=0;ke<=ye;ke++)De+="  ";Oe=`
`}var Ve="{",je="}";l(ne)&&(Ve="[",je="]"),V.ret+=Ve+Oe;for(var $t=ie(ne),jt=0;jt<$t.length;jt++){var Ot=$t[jt];V.ret+=De;try{l(ne)||(g(Ot)||l(Ot)||_(Ot)?V.ret+=Object.prototype.toString.call(Ot):r(Ot)&&V.standardJSON?V.ret+='"'+Ot+'"':V.ret+=Ot,V.ret+=": ")}catch{continue}try{var _t=ne[Ot];if(l(_t))V.maxDepth>-1&&ye>=V.maxDepth?V.ret+="Array("+_t.length+")":z(_t,V,ye+1);else if(g(_t)){var pt;V.maxDepth>-1&&ye>=V.maxDepth?V.ret+=(((pt=_t.constructor)==null?void 0:pt.name)||"Object")+" {}":z(_t,V,ye+1)}else V.ret+=L(_t,V.keyMaxLen)}catch{V.ret+=V.standardJSON?'"(PARSE_ERROR)"':"(PARSE_ERROR)"}if(V.keyMaxLen>0&&V.ret.length>=10*V.keyMaxLen){V.ret+=", (...)";break}jt<$t.length-1&&(V.ret+=", "),V.ret+=Oe}V.ret+=De.substring(0,De.length-2)+je}else V.ret+=L(ne,V.keyMaxLen)};function W(z,ne){ne===void 0&&(ne={maxDepth:-1,keyMaxLen:-1,pretty:!1,standardJSON:!1});var V,ye=Object.assign({ret:"",maxDepth:-1,keyMaxLen:-1,pretty:!1,standardJSON:!1,circularFinder:(V=new WeakSet,function(Se){if(typeof Se=="object"&&Se!==null){if(V.has(Se))return!0;V.add(Se)}return!1})},ne);return B(z,ye),ye.ret}function oe(z){return z<=0?"":z>=1e6?(z/1e3/1e3).toFixed(1)+" MB":z>=1e3?(z/1e3).toFixed(1)+" KB":z+" B"}function se(z,ne){return z.length>ne&&(z=z.substring(0,ne)+"...("+oe(function(V){try{return encodeURI(V).split(/%(?:u[0-9A-F]{2})?[0-9A-F]{2}|./).length-1}catch{return 0}}(z))+")"),z}var Y=function(z,ne){return String(z).localeCompare(String(ne),void 0,{numeric:!0,sensitivity:"base"})};function q(z){return z.sort(Y)}function ie(z){return g(z)||l(z)?Object.keys(z):[]}function me(z){var ne=ie(z),V=function(ye){return g(ye)||l(ye)?Object.getOwnPropertyNames(ye):[]}(z);return V.filter(function(ye){return ne.indexOf(ye)===-1})}function Q(z){return g(z)||l(z)?Object.getOwnPropertySymbols(z):[]}function K(z,ne){window.localStorage&&(z="vConsole_"+z,localStorage.setItem(z,ne))}function le(z){if(window.localStorage)return z="vConsole_"+z,localStorage.getItem(z)}function de(z){return z===void 0&&(z=""),"__vc_"+z+Math.random().toString(36).substring(2,8)}function ve(){return typeof window<"u"&&!!window.__wxConfig&&!!window.wx&&!!window.__virtualDOM__}function $(z){if(ve()&&typeof window.wx[z]=="function")try{for(var ne,V=arguments.length,ye=new Array(V>1?V-1:0),Se=1;Se<V;Se++)ye[Se-1]=arguments[Se];var Le=(ne=window.wx[z]).call.apply(ne,[window.wx].concat(ye));return Le}catch(De){return void console.debug("[vConsole] Fail to call wx."+z+"():",De)}}},5629:function(s,e,t){t.d(e,{W:function(){return w}});var n=t(8270),o=t(6881),a=t(5103),r=t(643),l=t(4687),d=t(8665),h=t(9923);function f(x,v){var T=Object.keys(x);if(Object.getOwnPropertySymbols){var D=Object.getOwnPropertySymbols(x);v&&(D=D.filter(function(C){return Object.getOwnPropertyDescriptor(x,C).enumerable})),T.push.apply(T,D)}return T}function _(x){for(var v=1;v<arguments.length;v++){var T=arguments[v]!=null?arguments[v]:{};v%2?f(Object(T),!0).forEach(function(D){(0,n.Z)(x,D,T[D])}):Object.getOwnPropertyDescriptors?Object.defineProperties(x,Object.getOwnPropertyDescriptors(T)):f(Object(T)).forEach(function(D){Object.defineProperty(x,D,Object.getOwnPropertyDescriptor(T,D))})}return x}function g(x,v){var T=typeof Symbol<"u"&&x[Symbol.iterator]||x["@@iterator"];if(T)return(T=T.call(x)).next.bind(T);if(Array.isArray(x)||(T=function(C,I){if(C){if(typeof C=="string")return b(C,I);var N=Object.prototype.toString.call(C).slice(8,-1);if(N==="Object"&&C.constructor&&(N=C.constructor.name),N==="Map"||N==="Set")return Array.from(C);if(N==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(N))return b(C,I)}}(x))||v&&x&&typeof x.length=="number"){T&&(x=T);var D=0;return function(){return D>=x.length?{done:!0}:{done:!1,value:x[D++]}}}throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function b(x,v){(v==null||v>x.length)&&(v=x.length);for(var T=0,D=new Array(v);T<v;T++)D[T]=x[T];return D}var w=function(x){function v(){for(var D,C=arguments.length,I=new Array(C),N=0;N<C;N++)I[N]=arguments[N];return(D=x.call.apply(x,[this].concat(I))||this).LOG_METHODS=["log","info","warn","debug","error"],D.ADDED_LOG_PLUGIN_ID=[],D.maxLogNumber=1e3,D.logCounter=0,D.groupLevel=0,D.groupLabelCollapsedStack=[],D.pluginPattern=void 0,D.logQueue=[],D.flushLogScheduled=!1,D.origConsole={},D}(0,o.Z)(v,x);var T=v.prototype;return T.bindPlugin=function(D){return!(this.ADDED_LOG_PLUGIN_ID.indexOf(D)>-1)&&(this.ADDED_LOG_PLUGIN_ID.length===0&&this.mockConsole(),h.O.create(D),this.ADDED_LOG_PLUGIN_ID.push(D),this.pluginPattern=new RegExp("^\\[("+this.ADDED_LOG_PLUGIN_ID.join("|")+")\\]$","i"),!0)},T.unbindPlugin=function(D){var C=this.ADDED_LOG_PLUGIN_ID.indexOf(D);return C!==-1&&(this.ADDED_LOG_PLUGIN_ID.splice(C,1),h.O.delete(D),this.ADDED_LOG_PLUGIN_ID.length===0&&this.unmockConsole(),!0)},T.mockConsole=function(){var D=this;typeof this.origConsole.log!="function"&&(window.console?(this.LOG_METHODS.map(function(C){D.origConsole[C]=window.console[C]}),this.origConsole.time=window.console.time,this.origConsole.timeEnd=window.console.timeEnd,this.origConsole.clear=window.console.clear,this.origConsole.group=window.console.group,this.origConsole.groupCollapsed=window.console.groupCollapsed,this.origConsole.groupEnd=window.console.groupEnd):window.console={},this._mockConsoleLog(),this._mockConsoleTime(),this._mockConsoleGroup(),this._mockConsoleClear(),window._vcOrigConsole=this.origConsole)},T._mockConsoleLog=function(){var D=this;this.LOG_METHODS.map(function(C){window.console[C]=function(){for(var I=arguments.length,N=new Array(I),F=0;F<I;F++)N[F]=arguments[F];D.addLog({type:C,origData:N||[]})}.bind(window.console)})},T._mockConsoleTime=function(){var D=this,C={};window.console.time=function(I){I===void 0&&(I=""),C[I]=Date.now()}.bind(window.console),window.console.timeEnd=function(I){I===void 0&&(I="");var N=C[I],F=0;N&&(F=Date.now()-N,delete C[I]),D.addLog({type:"log",origData:[I+": "+F+"ms"]})}.bind(window.console)},T._mockConsoleGroup=function(){var D=this,C=function(I){return function(N){N===void 0&&(N="console.group");var F=Symbol(N);D.groupLabelCollapsedStack.push({label:F,collapsed:I}),D.addLog({type:"log",origData:[N],isGroupHeader:I?2:1,isGroupCollapsed:!1},{noOrig:!0}),D.groupLevel++,I?D.origConsole.groupCollapsed(N):D.origConsole.group(N)}.bind(window.console)};window.console.group=C(!1),window.console.groupCollapsed=C(!0),window.console.groupEnd=function(){D.groupLabelCollapsedStack.pop(),D.groupLevel=Math.max(0,D.groupLevel-1),D.origConsole.groupEnd()}.bind(window.console)},T._mockConsoleClear=function(){var D=this;window.console.clear=function(){D.clearLog();for(var C=arguments.length,I=new Array(C),N=0;N<C;N++)I[N]=arguments[N];D.callOriginalConsole.apply(D,["clear"].concat(I))}.bind(window.console)},T.unmockConsole=function(){for(var D in this.origConsole)window.console[D]=this.origConsole[D],delete this.origConsole[D];window._vcOrigConsole&&delete window._vcOrigConsole},T.callOriginalConsole=function(D){if(typeof this.origConsole[D]=="function"){for(var C=arguments.length,I=new Array(C>1?C-1:0),N=1;N<C;N++)I[N-1]=arguments[N];this.origConsole[D].apply(window.console,I)}},T.clearLog=function(){var D=h.O.getAll();for(var C in D)D[C].update(function(I){return I.logList=[],I})},T.clearPluginLog=function(D){h.O.get(D).update(function(C){return C.logList=[],C})},T.addLog=function(D,C){D===void 0&&(D={type:"log",origData:[],isGroupHeader:0,isGroupCollapsed:!1});var I=this.groupLabelCollapsedStack[this.groupLabelCollapsedStack.length-2],N=this.groupLabelCollapsedStack[this.groupLabelCollapsedStack.length-1],F={_id:a.QI(),type:D.type,cmdType:C==null?void 0:C.cmdType,toggle:{},date:Date.now(),data:(0,d.b1)(D.origData||[]),repeated:0,groupLabel:N==null?void 0:N.label,groupLevel:this.groupLevel,groupHeader:D.isGroupHeader,groupCollapsed:D.isGroupHeader?!(I==null||!I.collapsed):!(N==null||!N.collapsed)};this._signalLog(F),C!=null&&C.noOrig||this.callOriginalConsole.apply(this,[D.type].concat(D.origData))},T.evalCommand=function(D){this.addLog({type:"log",origData:[D]},{cmdType:"input"});var C=void 0;try{C=eval.call(window,"("+D+")")}catch{try{C=eval.call(window,D)}catch{}}this.addLog({type:"log",origData:[C]},{cmdType:"output"})},T._signalLog=function(D){var C=this;this.flushLogScheduled||(this.flushLogScheduled=!0,window.requestAnimationFrame(function(){C.flushLogScheduled=!1,C._flushLogs()})),this.logQueue.push(D)},T._flushLogs=function(){var D=this,C=this.logQueue;this.logQueue=[];for(var I,N={},F=g(C);!(I=F()).done;){var G=I.value,L=this._extractPluginIdByLog(G);(N[L]=N[L]||[]).push(G)}for(var B=function(se){var Y=N[se];h.O.get(se).update(function(q){for(var ie,me=[].concat(q.logList),Q=g(Y);!(ie=Q()).done;){var K=ie.value;D._isRepeatedLog(me,K)?D._updateLastLogRepeated(me):me.push(K)}return{logList:me=D._limitLogListLength(me)}})},W=0,oe=Object.keys(N);W<oe.length;W++)B(oe[W]);l.x.updateTime()},T._extractPluginIdByLog=function(D){var C,I="default",N=(C=D.data[0])==null?void 0:C.origData;if(a.HD(N)){var F=N.match(this.pluginPattern);if(F!==null&&F.length>1){var G=F[1].toLowerCase();this.ADDED_LOG_PLUGIN_ID.indexOf(G)>-1&&(I=G,D.data.shift())}}return I},T._isRepeatedLog=function(D,C){var I=D[D.length-1];if(!I)return!1;var N=!1;if(C.type===I.type&&C.cmdType===I.cmdType&&C.data.length===I.data.length){N=!0;for(var F=0;F<C.data.length;F++)if(C.data[F].origData!==I.data[F].origData){N=!1;break}}return N},T._updateLastLogRepeated=function(D){var C=D[D.length-1],I=C.repeated?C.repeated+1:2;return D[D.length-1]=_(_({},C),{},{repeated:I}),D},T._limitLogListLength=function(D){var C=D.length,I=this.maxLogNumber;return C>I?D.slice(C-I,C):D},v}(r.N)},9923:function(s,e,t){t.d(e,{O:function(){return o}});var n=t(3313),o=function(){function a(){}return a.create=function(r){return this.storeMap[r]||(this.storeMap[r]=(0,n.fZ)({logList:[]})),this.storeMap[r]},a.delete=function(r){this.storeMap[r]&&delete this.storeMap[r]},a.get=function(r){return this.storeMap[r]},a.getRaw=function(r){return(0,n.U2)(this.storeMap[r])},a.getAll=function(){return this.storeMap},a}();o.storeMap={}},8665:function(s,e,t){t.d(e,{HX:function(){return f},LH:function(){return a},Tg:function(){return b},b1:function(){return g},oj:function(){return h}});var n=t(5103),o=function(w){var x=n.hZ(w,{maxDepth:0}),v=x.substring(0,36),T=n.DV(w);return x.length>36&&(v+="..."),T=n.rE(T+" "+v)},a=function(w,x){x===void 0&&(x=!0);var v="undefined",T=w;return w instanceof b?(v="uninvocatable",T="(...)"):n.kJ(w)?(v="array",T=o(w)):n.Kn(w)?(v="object",T=o(w)):n.HD(w)?(v="string",T=n.rE(w),x&&(T='"'+T+'"')):n.hj(w)?(v="number",T=String(w)):n.C4(w)?(v="bigint",T=String(w)+"n"):n.jn(w)?(v="boolean",T=String(w)):n.Ft(w)?(v="null",T="null"):n.o8(w)?(v="undefined",T="undefined"):n.mf(w)?(v="function",T=(w.name||"function")+"()"):n.yk(w)&&(v="symbol",T=String(w)),{text:T,valueType:v}},r=[".","[","(","{","}"],l=["]",")","}"],d=function(w,x,v){v===void 0&&(v=0);for(var T={text:"",pos:-1,before:"",after:""},D=w.length-1;D>=v;D--){var C=x.indexOf(w[D]);if(C>-1){T.text=x[C],T.pos=D,T.before=w.substring(v,D),T.after=w.substring(D+1,w.length);break}}return T},h=function(w){var x=d(w,r,0);return{front:x,back:d(w,l,x.pos+1)}},f=function(w,x){if(x==="")return!0;for(var v=0;v<w.data.length;v++)if(typeof w.data[v].origData=="string"&&w.data[v].origData.indexOf(x)>-1)return!0;return!1},_=/(\%[csdo] )|( \%[csdo])/g,g=function(w){if(_.lastIndex=0,n.HD(w[0])&&_.test(w[0])){for(var x,v=[].concat(w),T=v.shift().split(_).filter(function(oe){return oe!==void 0&&oe!==""}),D=v,C=[],I=!1,N="";T.length>0;){var F=T.shift();if(/ ?\%c ?/.test(F)?D.length>0?typeof(N=D.shift())!="string"&&(N=""):(x=F,N="",I=!0):/ ?\%[sd] ?/.test(F)?(x=D.length>0?n.Kn(D[0])?n.DV(D.shift()):String(D.shift()):F,I=!0):/ ?\%o ?/.test(F)?(x=D.length>0?D.shift():F,I=!0):(x=F,I=!0),I){var G={origData:x};N&&(G.style=N),C.push(G),I=!1,x=void 0,N=""}}for(var L=0;L<D.length;L++)C.push({origData:D[L]});return C}for(var B=[],W=0;W<w.length;W++)B.push({origData:w[W]});return B},b=function(){}},5313:function(s,e,t){var n=t(6738),o=t.n(n),a=t(7705),r=t.n(a)()(o());r.push([s.id,`.vc-icon {
  word-break: normal;
  white-space: normal;
  overflow: visible;
}
.vc-icon svg {
  fill: var(--VC-FG-2);
  height: 1em;
  width: 1em;
  vertical-align: -0.11em;
}
.vc-icon .vc-icon-delete {
  vertical-align: -0.11em;
}
.vc-icon .vc-icon-copy {
  height: 1.1em;
  width: 1.1em;
  vertical-align: -0.16em;
}
.vc-icon .vc-icon-suc {
  fill: var(--VC-TEXTGREEN);
  height: 1.1em;
  width: 1.1em;
  vertical-align: -0.16em;
}
`,""]),e.Z=r},1142:function(s,e,t){var n=t(6738),o=t.n(n),a=t(7705),r=t.n(a)()(o());r.push([s.id,`.vc-scroller-viewport {
  position: relative;
  overflow: hidden;
  height: 100%;
}
.vc-scroller-contents {
  min-height: 100%;
  will-change: transform;
}
.vc-scroller-items {
  will-change: height;
  position: relative;
}
.vc-scroller-item {
  display: none;
  position: absolute;
  left: 0;
  right: 0;
}
.vc-scroller-scrollbar-track {
  width: 4px;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  padding: 1px;
}
.vc-scroller-scrollbar-thumb {
  position: relative;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.5);
  border-radius: 999px;
}
`,""]),e.Z=r},3283:function(s,e,t){var n=t(6738),o=t.n(n),a=t(7705),r=t.n(a)()(o());r.push([s.id,`#__vconsole {
  --VC-BG-0: #ededed;
  --VC-BG-1: #f7f7f7;
  --VC-BG-2: #fff;
  --VC-BG-3: #f7f7f7;
  --VC-BG-4: #4c4c4c;
  --VC-BG-5: #fff;
  --VC-BG-6: rgba(0, 0, 0, 0.1);
  --VC-FG-0: rgba(0, 0, 0, 0.9);
  --VC-FG-HALF: rgba(0, 0, 0, 0.9);
  --VC-FG-1: rgba(0, 0, 0, 0.5);
  --VC-FG-2: rgba(0, 0, 0, 0.3);
  --VC-FG-3: rgba(0, 0, 0, 0.1);
  --VC-RED: #fa5151;
  --VC-ORANGE: #fa9d3b;
  --VC-YELLOW: #ffc300;
  --VC-GREEN: #91d300;
  --VC-LIGHTGREEN: #95ec69;
  --VC-BRAND: #07c160;
  --VC-BLUE: #10aeff;
  --VC-INDIGO: #1485ee;
  --VC-PURPLE: #6467f0;
  --VC-LINK: #576b95;
  --VC-TEXTGREEN: #06ae56;
  --VC-FG: black;
  --VC-BG: white;
  --VC-BG-COLOR-ACTIVE: #ececec;
  --VC-WARN-BG: #fff3cc;
  --VC-WARN-BORDER: #ffe799;
  --VC-ERROR-BG: #fedcdc;
  --VC-ERROR-BORDER: #fdb9b9;
  --VC-DOM-TAG-NAME-COLOR: #881280;
  --VC-DOM-ATTRIBUTE-NAME-COLOR: #994500;
  --VC-DOM-ATTRIBUTE-VALUE-COLOR: #1a1aa6;
  --VC-CODE-KEY-FG: #881391;
  --VC-CODE-PRIVATE-KEY-FG: #cfa1d3;
  --VC-CODE-FUNC-FG: #0d22aa;
  --VC-CODE-NUMBER-FG: #1c00cf;
  --VC-CODE-STR-FG: #c41a16;
  --VC-CODE-NULL-FG: #808080;
  color: var(--VC-FG-0);
  font-size: 13px;
  font-family: Helvetica Neue, Helvetica, Arial, sans-serif;
  -webkit-user-select: auto;
  /* global */
}
#__vconsole .vc-max-height {
  max-height: 19.23076923em;
}
#__vconsole .vc-max-height-line {
  max-height: 6.30769231em;
}
#__vconsole .vc-min-height {
  min-height: 3.07692308em;
}
#__vconsole dd,
#__vconsole dl,
#__vconsole pre {
  margin: 0;
}
#__vconsole pre {
  white-space: pre-wrap;
}
#__vconsole i {
  font-style: normal;
}
.vc-table {
  height: 100%;
}
.vc-table .vc-table-row {
  line-height: 1.5;
  display: -webkit-box;
  display: -webkit-flex;
  display: -moz-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -webkit-flex-direction: row;
  -moz-box-orient: horizontal;
  -moz-box-direction: normal;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  overflow: hidden;
  border-bottom: 1px solid var(--VC-FG-3);
}
.vc-table .vc-table-row.vc-left-border {
  border-left: 1px solid var(--VC-FG-3);
}
.vc-table .vc-table-row-icon {
  margin-left: 4px;
}
.vc-table .vc-table-col {
  -webkit-box-flex: 1;
  -webkit-flex: 1;
  -moz-box-flex: 1;
  -ms-flex: 1;
  flex: 1;
  padding: 0.23076923em 0.30769231em;
  border-left: 1px solid var(--VC-FG-3);
  overflow: auto;
}
.vc-table .vc-table-col:first-child {
  border: none;
}
.vc-table .vc-table-col-value {
  white-space: pre-wrap;
  word-break: break-word;
  /*white-space: nowrap;
    text-overflow: ellipsis;*/
  -webkit-overflow-scrolling: touch;
}
.vc-table .vc-small .vc-table-col {
  padding: 0 0.30769231em;
  font-size: 0.92307692em;
}
.vc-table .vc-table-col-2 {
  -webkit-box-flex: 2;
  -webkit-flex: 2;
  -moz-box-flex: 2;
  -ms-flex: 2;
  flex: 2;
}
.vc-table .vc-table-col-3 {
  -webkit-box-flex: 3;
  -webkit-flex: 3;
  -moz-box-flex: 3;
  -ms-flex: 3;
  flex: 3;
}
.vc-table .vc-table-col-4 {
  -webkit-box-flex: 4;
  -webkit-flex: 4;
  -moz-box-flex: 4;
  -ms-flex: 4;
  flex: 4;
}
.vc-table .vc-table-col-5 {
  -webkit-box-flex: 5;
  -webkit-flex: 5;
  -moz-box-flex: 5;
  -ms-flex: 5;
  flex: 5;
}
.vc-table .vc-table-col-6 {
  -webkit-box-flex: 6;
  -webkit-flex: 6;
  -moz-box-flex: 6;
  -ms-flex: 6;
  flex: 6;
}
.vc-table .vc-table-row-error {
  border-color: var(--VC-ERROR-BORDER);
  background-color: var(--VC-ERROR-BG);
}
.vc-table .vc-table-row-error .vc-table-col {
  color: var(--VC-RED);
  border-color: var(--VC-ERROR-BORDER);
}
.vc-table .vc-table-col-title {
  font-weight: bold;
}
.vc-table .vc-table-action {
  display: flex;
  justify-content: space-evenly;
}
.vc-table .vc-table-action .vc-icon {
  flex: 1;
  text-align: center;
  display: block;
}
.vc-table .vc-table-action .vc-icon:hover {
  background: var(--VC-BG-3);
}
.vc-table .vc-table-action .vc-icon:active {
  background: var(--VC-BG-1);
}
.vc-table .vc-table-input {
  width: 100%;
  border: none;
  color: var(--VC-FG-0);
  background-color: var(--VC-BG-6);
  height: 3.53846154em;
}
.vc-table .vc-table-input:focus {
  background-color: var(--VC-FG-2);
}
@media (prefers-color-scheme: dark) {
  #__vconsole:not([data-theme="light"]) {
    --VC-BG-0: #191919;
    --VC-BG-1: #1f1f1f;
    --VC-BG-2: #232323;
    --VC-BG-3: #2f2f2f;
    --VC-BG-4: #606060;
    --VC-BG-5: #2c2c2c;
    --VC-BG-6: rgba(255, 255, 255, 0.2);
    --VC-FG-0: rgba(255, 255, 255, 0.8);
    --VC-FG-HALF: rgba(255, 255, 255, 0.6);
    --VC-FG-1: rgba(255, 255, 255, 0.5);
    --VC-FG-2: rgba(255, 255, 255, 0.3);
    --VC-FG-3: rgba(255, 255, 255, 0.05);
    --VC-RED: #fa5151;
    --VC-ORANGE: #c87d2f;
    --VC-YELLOW: #cc9c00;
    --VC-GREEN: #74a800;
    --VC-LIGHTGREEN: #28b561;
    --VC-BRAND: #07c160;
    --VC-BLUE: #10aeff;
    --VC-INDIGO: #1196ff;
    --VC-PURPLE: #8183ff;
    --VC-LINK: #7d90a9;
    --VC-TEXTGREEN: #259c5c;
    --VC-FG: white;
    --VC-BG: black;
    --VC-BG-COLOR-ACTIVE: #282828;
    --VC-WARN-BG: #332700;
    --VC-WARN-BORDER: #664e00;
    --VC-ERROR-BG: #321010;
    --VC-ERROR-BORDER: #642020;
    --VC-DOM-TAG-NAME-COLOR: #5DB0D7;
    --VC-DOM-ATTRIBUTE-NAME-COLOR: #9BBBDC;
    --VC-DOM-ATTRIBUTE-VALUE-COLOR: #f29766;
    --VC-CODE-KEY-FG: #e36eec;
    --VC-CODE-PRIVATE-KEY-FG: #f4c5f7;
    --VC-CODE-FUNC-FG: #556af2;
    --VC-CODE-NUMBER-FG: #9980ff;
    --VC-CODE-STR-FG: #e93f3b;
    --VC-CODE-NULL-FG: #808080;
  }
}
#__vconsole[data-theme="dark"] {
  --VC-BG-0: #191919;
  --VC-BG-1: #1f1f1f;
  --VC-BG-2: #232323;
  --VC-BG-3: #2f2f2f;
  --VC-BG-4: #606060;
  --VC-BG-5: #2c2c2c;
  --VC-BG-6: rgba(255, 255, 255, 0.2);
  --VC-FG-0: rgba(255, 255, 255, 0.8);
  --VC-FG-HALF: rgba(255, 255, 255, 0.6);
  --VC-FG-1: rgba(255, 255, 255, 0.5);
  --VC-FG-2: rgba(255, 255, 255, 0.3);
  --VC-FG-3: rgba(255, 255, 255, 0.05);
  --VC-RED: #fa5151;
  --VC-ORANGE: #c87d2f;
  --VC-YELLOW: #cc9c00;
  --VC-GREEN: #74a800;
  --VC-LIGHTGREEN: #28b561;
  --VC-BRAND: #07c160;
  --VC-BLUE: #10aeff;
  --VC-INDIGO: #1196ff;
  --VC-PURPLE: #8183ff;
  --VC-LINK: #7d90a9;
  --VC-TEXTGREEN: #259c5c;
  --VC-FG: white;
  --VC-BG: black;
  --VC-BG-COLOR-ACTIVE: #282828;
  --VC-WARN-BG: #332700;
  --VC-WARN-BORDER: #664e00;
  --VC-ERROR-BG: #321010;
  --VC-ERROR-BORDER: #642020;
  --VC-DOM-TAG-NAME-COLOR: #5DB0D7;
  --VC-DOM-ATTRIBUTE-NAME-COLOR: #9BBBDC;
  --VC-DOM-ATTRIBUTE-VALUE-COLOR: #f29766;
  --VC-CODE-KEY-FG: #e36eec;
  --VC-CODE-PRIVATE-KEY-FG: #f4c5f7;
  --VC-CODE-FUNC-FG: #556af2;
  --VC-CODE-NUMBER-FG: #9980ff;
  --VC-CODE-STR-FG: #e93f3b;
  --VC-CODE-NULL-FG: #808080;
}
.vc-tabbar {
  border-bottom: 1px solid var(--VC-FG-3);
  overflow-x: auto;
  height: 3em;
  width: auto;
  white-space: nowrap;
}
.vc-tabbar .vc-tab {
  display: inline-block;
  line-height: 3em;
  padding: 0 1.15384615em;
  border-right: 1px solid var(--VC-FG-3);
  text-decoration: none;
  color: var(--VC-FG-0);
  -webkit-tap-highlight-color: transparent;
  -webkit-touch-callout: none;
}
.vc-tabbar .vc-tab:active {
  background-color: rgba(0, 0, 0, 0.15);
}
.vc-tabbar .vc-tab.vc-actived {
  background-color: var(--VC-BG-1);
}
.vc-toolbar {
  border-top: 1px solid var(--VC-FG-3);
  line-height: 3em;
  position: absolute;
  left: 0;
  right: 0;
  bottom: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -moz-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -webkit-flex-direction: row;
  -moz-box-orient: horizontal;
  -moz-box-direction: normal;
  -ms-flex-direction: row;
  flex-direction: row;
}
.vc-toolbar .vc-tool {
  display: none;
  font-style: normal;
  text-decoration: none;
  color: var(--VC-FG-0);
  width: 50%;
  -webkit-box-flex: 1;
  -webkit-flex: 1;
  -moz-box-flex: 1;
  -ms-flex: 1;
  flex: 1;
  text-align: center;
  position: relative;
  -webkit-touch-callout: none;
}
.vc-toolbar .vc-tool.vc-toggle,
.vc-toolbar .vc-tool.vc-global-tool {
  display: block;
}
.vc-toolbar .vc-tool:active {
  background-color: rgba(0, 0, 0, 0.15);
}
.vc-toolbar .vc-tool:after {
  content: " ";
  position: absolute;
  top: 0.53846154em;
  bottom: 0.53846154em;
  right: 0;
  border-left: 1px solid var(--VC-FG-3);
}
.vc-toolbar .vc-tool-last:after {
  border: none;
}
.vc-topbar {
  background-color: var(--VC-BG-1);
  display: -webkit-box;
  display: -webkit-flex;
  display: -moz-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -webkit-flex-direction: row;
  -moz-box-orient: horizontal;
  -moz-box-direction: normal;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  width: 100%;
}
.vc-topbar .vc-toptab {
  display: none;
  -webkit-box-flex: 1;
  -webkit-flex: 1;
  -moz-box-flex: 1;
  -ms-flex: 1;
  flex: 1;
  line-height: 2.30769231em;
  padding: 0 1.15384615em;
  border-bottom: 1px solid var(--VC-FG-3);
  text-decoration: none;
  text-align: center;
  color: var(--VC-FG-0);
  -webkit-tap-highlight-color: transparent;
  -webkit-touch-callout: none;
}
.vc-topbar .vc-toptab.vc-toggle {
  display: block;
}
.vc-topbar .vc-toptab:active {
  background-color: rgba(0, 0, 0, 0.15);
}
.vc-topbar .vc-toptab.vc-actived {
  border-bottom: 1px solid var(--VC-INDIGO);
}
.vc-mask {
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0);
  z-index: 10001;
  -webkit-transition: background 0.3s;
  transition: background 0.3s;
  -webkit-tap-highlight-color: transparent;
  overflow-y: scroll;
}
.vc-panel {
  display: none;
  position: fixed;
  min-height: 85%;
  left: 0;
  right: 0;
  bottom: -100%;
  z-index: 10002;
  background-color: var(--VC-BG-0);
  transition: bottom 0.3s;
}
.vc-toggle .vc-switch {
  display: none;
}
.vc-toggle .vc-mask {
  background: rgba(0, 0, 0, 0.6);
  display: block;
}
.vc-toggle .vc-panel {
  bottom: 0;
}
.vc-content {
  background-color: var(--VC-BG-2);
  overflow-x: hidden;
  overflow-y: auto;
  position: absolute;
  top: 3.07692308em;
  left: 0;
  right: 0;
  bottom: 3.07692308em;
  -webkit-overflow-scrolling: touch;
  margin-bottom: constant(safe-area-inset-bottom);
  margin-bottom: env(safe-area-inset-bottom);
}
.vc-content.vc-has-topbar {
  top: 5.46153846em;
}
.vc-plugin-box {
  display: none;
  position: relative;
  min-height: 100%;
}
.vc-plugin-box.vc-fixed-height {
  height: 100%;
}
.vc-plugin-box.vc-actived {
  display: block;
}
.vc-plugin-content {
  display: flex;
  width: 100%;
  height: 100%;
  overflow-y: auto;
  flex-direction: column;
  -webkit-tap-highlight-color: transparent;
}
.vc-plugin-content:empty:before {
  content: "Empty";
  color: var(--VC-FG-1);
  position: absolute;
  top: 45%;
  left: 0;
  right: 0;
  bottom: 0;
  font-size: 1.15384615em;
  text-align: center;
}
.vc-plugin-empty {
  color: var(--VC-FG-1);
  font-size: 1.15384615em;
  height: 100%;
  width: 100%;
  padding: 1.15384615em 0;
  text-align: center;
  display: flex;
  flex-direction: column;
  justify-content: center;
}
@supports (bottom: constant(safe-area-inset-bottom)) or (bottom: env(safe-area-inset-bottom)) {
  .vc-toolbar,
  .vc-switch {
    bottom: constant(safe-area-inset-bottom);
    bottom: env(safe-area-inset-bottom);
  }
}
`,""]),e.Z=r},7558:function(s,e,t){var n=t(6738),o=t.n(n),a=t(7705),r=t.n(a)()(o());r.push([s.id,`.vc-switch {
  display: block;
  position: fixed;
  right: 0.76923077em;
  bottom: 0.76923077em;
  color: #FFF;
  background-color: var(--VC-BRAND);
  line-height: 1;
  font-size: 1.07692308em;
  padding: 0.61538462em 1.23076923em;
  z-index: 10000;
  border-radius: 0.30769231em;
  box-shadow: 0 0 0.61538462em rgba(0, 0, 0, 0.4);
}
`,""]),e.Z=r},5670:function(s,e,t){var n=t(6738),o=t.n(n),a=t(7705),r=t.n(a)()(o());r.push([s.id,`/* color */
.vcelm-node {
  color: var(--VC-DOM-TAG-NAME-COLOR);
}
.vcelm-k {
  color: var(--VC-DOM-ATTRIBUTE-NAME-COLOR);
}
.vcelm-v {
  color: var(--VC-DOM-ATTRIBUTE-VALUE-COLOR);
}
.vcelm-l.vc-actived > .vcelm-node {
  background-color: var(--VC-FG-3);
}
/* layout */
.vcelm-l {
  padding-left: 8px;
  position: relative;
  word-wrap: break-word;
  line-height: 1.2;
}
/*.vcelm-l.vcelm-noc {
  padding-left: 0;
}*/
.vcelm-l .vcelm-node:active {
  background-color: var(--VC-BG-COLOR-ACTIVE);
}
.vcelm-l.vcelm-noc .vcelm-node:active {
  background-color: transparent;
}
.vcelm-t {
  white-space: pre-wrap;
  word-wrap: break-word;
}
/* level */
/* arrow */
.vcelm-l:before {
  content: "";
  display: block;
  position: absolute;
  top: 6px;
  left: 3px;
  width: 0;
  height: 0;
  border: transparent solid 3px;
  border-left-color: var(--VC-FG-1);
}
.vcelm-l.vc-toggle:before {
  display: block;
  top: 6px;
  left: 0;
  border-top-color: var(--VC-FG-1);
  border-left-color: transparent;
}
.vcelm-l.vcelm-noc:before {
  display: none;
}
`,""]),e.Z=r},3327:function(s,e,t){var n=t(6738),o=t.n(n),a=t(7705),r=t.n(a)()(o());r.push([s.id,"",""]),e.Z=r},1130:function(s,e,t){var n=t(6738),o=t.n(n),a=t(7705),r=t.n(a)()(o());r.push([s.id,`.vc-cmd {
  height: 3.07692308em;
  border-top: 1px solid var(--VC-FG-3);
  display: flex;
  flex-direction: row;
}
.vc-cmd.vc-filter {
  bottom: 0;
}
.vc-cmd-input-wrap {
  display: flex;
  align-items: center;
  flex: 1;
  position: relative;
  height: 2.15384615em;
  padding: 0.46153846em 0.61538462em;
}
.vc-cmd-input {
  width: 100%;
  border: none;
  resize: none;
  outline: none;
  padding: 0;
  font-size: 0.92307692em;
  background-color: transparent;
  color: var(--VC-FG-0);
}
.vc-cmd-input::-webkit-input-placeholder {
  line-height: 2.15384615em;
}
.vc-cmd-btn {
  width: 3.07692308em;
  border: none;
  background-color: var(--VC-BG-0);
  color: var(--VC-FG-0);
  outline: none;
  -webkit-touch-callout: none;
  font-size: 1em;
}
.vc-cmd-clear-btn {
  flex: 1 3.07692308em;
  text-align: center;
  line-height: 3.07692308em;
}
.vc-cmd-btn:active,
.vc-cmd-clear-btn:active {
  background-color: var(--VC-BG-COLOR-ACTIVE);
}
.vc-cmd-prompted {
  position: absolute;
  left: 0.46153846em;
  right: 0.46153846em;
  background-color: var(--VC-BG-3);
  border: 1px solid var(--VC-FG-3);
  overflow-x: scroll;
  display: none;
}
.vc-cmd-prompted li {
  list-style: none;
  line-height: 30px;
  padding: 0 0.46153846em;
  border-bottom: 1px solid var(--VC-FG-3);
}
.vc-cmd-prompted li:active {
  background-color: var(--VC-BG-COLOR-ACTIVE);
}
.vc-cmd-prompted-hide {
  text-align: center;
}
`,""]),e.Z=r},7147:function(s,e,t){var n=t(6738),o=t.n(n),a=t(7705),r=t.n(a)()(o());r.push([s.id,`.vc-log-row {
  margin: 0;
  padding: 0.46153846em 0.61538462em;
  overflow: hidden;
  line-height: 1.3;
  border-bottom: 1px solid var(--VC-FG-3);
  word-break: break-word;
  position: relative;
  display: flex;
}
.vc-log-info {
  color: var(--VC-PURPLE);
}
.vc-log-debug {
  color: var(--VC-YELLOW);
}
.vc-log-warn {
  color: var(--VC-ORANGE);
  border-color: var(--VC-WARN-BORDER);
  background-color: var(--VC-WARN-BG);
}
.vc-log-error {
  color: var(--VC-RED);
  border-color: var(--VC-ERROR-BORDER);
  background-color: var(--VC-ERROR-BG);
}
.vc-logrow-icon {
  margin-left: auto;
}
.vc-log-padding {
  width: 1.53846154em;
  border-left: 1px solid var(--VC-FG-3);
}
.vc-log-group .vc-log-content {
  font-weight: bold;
}
.vc-log-group-toggle {
  padding-left: 0.76923077em;
}
.vc-log-group-toggle {
  display: block;
  font-style: italic;
  padding-left: 0.76923077em;
  position: relative;
}
.vc-log-group-toggle:active {
  background-color: var(--VC-BG-COLOR-ACTIVE);
}
.vc-log-group > .vc-log-group-toggle::before {
  content: "";
  position: absolute;
  top: 0.30769231em;
  left: 0.15384615em;
  width: 0;
  height: 0;
  border: transparent solid 0.30769231em;
  border-left-color: var(--VC-FG-1);
}
.vc-log-group.vc-toggle > .vc-log-group-toggle::before {
  top: 0.46153846em;
  left: 0;
  border-top-color: var(--VC-FG-1);
  border-left-color: transparent;
}
.vc-log-time {
  width: 6.15384615em;
  color: #777;
}
.vc-log-repeat i {
  margin-right: 0.30769231em;
  padding: 0 6.5px;
  color: #D7E0EF;
  background-color: #42597F;
  border-radius: 8.66666667px;
}
.vc-log-error .vc-log-repeat i {
  color: #901818;
  background-color: var(--VC-RED);
}
.vc-log-warn .vc-log-repeat i {
  color: #987D20;
  background-color: #F4BD02;
}
.vc-log-content {
  flex: 1;
}
.vc-log-input,
.vc-log-output {
  padding-left: 0.92307692em;
}
.vc-log-input:before,
.vc-log-output:before {
  content: "›";
  position: absolute;
  top: 0.15384615em;
  left: 0;
  font-size: 1.23076923em;
  color: #6A5ACD;
}
.vc-log-output:before {
  content: "‹";
}
`,""]),e.Z=r},1237:function(s,e,t){var n=t(6738),o=t.n(n),a=t(7705),r=t.n(a)()(o());r.push([s.id,`.vc-log-tree {
  display: block;
  overflow: auto;
  position: relative;
  -webkit-overflow-scrolling: touch;
}
.vc-log-tree-node {
  display: block;
  font-style: italic;
  padding-left: 0.76923077em;
  position: relative;
}
.vc-log-tree.vc-is-tree > .vc-log-tree-node:active {
  background-color: var(--VC-BG-COLOR-ACTIVE);
}
.vc-log-tree.vc-is-tree > .vc-log-tree-node::before {
  content: "";
  position: absolute;
  top: 0.30769231em;
  left: 0.15384615em;
  width: 0;
  height: 0;
  border: transparent solid 0.30769231em;
  border-left-color: var(--VC-FG-1);
}
.vc-log-tree.vc-is-tree.vc-toggle > .vc-log-tree-node::before {
  top: 0.46153846em;
  left: 0;
  border-top-color: var(--VC-FG-1);
  border-left-color: transparent;
}
.vc-log-tree-child {
  margin-left: 0.76923077em;
}
.vc-log-tree-loadmore {
  text-decoration: underline;
  padding-left: 1.84615385em;
  position: relative;
  color: var(--VC-CODE-FUNC-FG);
}
.vc-log-tree-loadmore::before {
  content: "››";
  position: absolute;
  top: -0.15384615em;
  left: 0.76923077em;
  font-size: 1.23076923em;
  color: var(--VC-CODE-FUNC-FG);
}
.vc-log-tree-loadmore:active {
  background-color: var(--VC-BG-COLOR-ACTIVE);
}
`,""]),e.Z=r},845:function(s,e,t){var n=t(6738),o=t.n(n),a=t(7705),r=t.n(a)()(o());r.push([s.id,`.vc-log-key {
  color: var(--VC-CODE-KEY-FG);
}
.vc-log-key-private {
  color: var(--VC-CODE-PRIVATE-KEY-FG);
}
.vc-log-val {
  white-space: pre-line;
}
.vc-log-val-function {
  color: var(--VC-CODE-FUNC-FG);
  font-style: italic !important;
}
.vc-log-val-bigint {
  color: var(--VC-CODE-FUNC-FG);
}
.vc-log-val-number,
.vc-log-val-boolean {
  color: var(--VC-CODE-NUMBER-FG);
}
.vc-log-val-string {
  white-space: pre-wrap;
}
.vc-log-val-string.vc-log-val-haskey {
  color: var(--VC-CODE-STR-FG);
  white-space: normal;
}
.vc-log-val-null,
.vc-log-val-undefined,
.vc-log-val-uninvocatable {
  color: var(--VC-CODE-NULL-FG);
}
.vc-log-val-symbol {
  color: var(--VC-CODE-STR-FG);
}
`,""]),e.Z=r},8747:function(s,e,t){var n=t(6738),o=t.n(n),a=t(7705),r=t.n(a)()(o());r.push([s.id,`.vc-group .vc-group-preview {
  -webkit-touch-callout: none;
}
.vc-group .vc-group-preview:active {
  background-color: var(--VC-BG-COLOR-ACTIVE);
}
.vc-group .vc-group-detail {
  display: none;
  padding: 0 0 0.76923077em 1.53846154em;
  border-bottom: 1px solid var(--VC-FG-3);
}
.vc-group.vc-actived .vc-group-detail {
  display: block;
  background-color: var(--VC-BG-1);
}
.vc-group.vc-actived .vc-table-row {
  background-color: var(--VC-BG-2);
}
.vc-group.vc-actived .vc-group-preview {
  background-color: var(--VC-BG-1);
}
`,""]),e.Z=r},3411:function(s,e,t){var n=t(3379),o=t.n(n),a=t(7795),r=t.n(a),l=t(569),d=t.n(l),h=t(3565),f=t.n(h),_=t(9216),g=t.n(_),b=t(4589),w=t.n(b),x=t(1130),v={};x.Z&&x.Z.locals&&(v.locals=x.Z.locals);var T,D=0,C={};C.styleTagTransform=w(),C.setAttributes=f(),C.insert=d().bind(null,"head"),C.domAPI=r(),C.insertStyleElement=g(),v.use=function(I){return C.options=I||{},D++||(T=o()(x.Z,C)),v},v.unuse=function(){D>0&&!--D&&(T(),T=null)},e.Z=v},3379:function(s){var e=[];function t(a){for(var r=-1,l=0;l<e.length;l++)if(e[l].identifier===a){r=l;break}return r}function n(a,r){for(var l={},d=[],h=0;h<a.length;h++){var f=a[h],_=r.base?f[0]+r.base:f[0],g=l[_]||0,b="".concat(_," ").concat(g);l[_]=g+1;var w=t(b),x={css:f[1],media:f[2],sourceMap:f[3],supports:f[4],layer:f[5]};if(w!==-1)e[w].references++,e[w].updater(x);else{var v=o(x,r);r.byIndex=h,e.splice(h,0,{identifier:b,updater:v,references:1})}d.push(b)}return d}function o(a,r){var l=r.domAPI(r);return l.update(a),function(d){if(d){if(d.css===a.css&&d.media===a.media&&d.sourceMap===a.sourceMap&&d.supports===a.supports&&d.layer===a.layer)return;l.update(a=d)}else l.remove()}}s.exports=function(a,r){var l=n(a=a||[],r=r||{});return function(d){d=d||[];for(var h=0;h<l.length;h++){var f=t(l[h]);e[f].references--}for(var _=n(d,r),g=0;g<l.length;g++){var b=t(l[g]);e[b].references===0&&(e[b].updater(),e.splice(b,1))}l=_}}},569:function(s){var e={};s.exports=function(t,n){var o=function(a){if(e[a]===void 0){var r=document.querySelector(a);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch{r=null}e[a]=r}return e[a]}(t);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},9216:function(s){s.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},3565:function(s,e,t){s.exports=function(n){var o=t.nc;o&&n.setAttribute("nonce",o)}},7795:function(s){s.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){(function(o,a,r){var l="";r.supports&&(l+="@supports (".concat(r.supports,") {")),r.media&&(l+="@media ".concat(r.media," {"));var d=r.layer!==void 0;d&&(l+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),l+=r.css,d&&(l+="}"),r.media&&(l+="}"),r.supports&&(l+="}");var h=r.sourceMap;h&&typeof btoa<"u"&&(l+=`
/*# sourceMappingURL=data:application/json;base64,`.concat(btoa(unescape(encodeURIComponent(JSON.stringify(h))))," */")),a.styleTagTransform(l,o,a.options)})(t,e,n)},remove:function(){(function(n){if(n.parentNode===null)return!1;n.parentNode.removeChild(n)})(t)}}}},4589:function(s){s.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},6464:function(s,e,t){function n(o){if(o===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return o}t.d(e,{Z:function(){return n}})},4296:function(s,e,t){function n(a,r){for(var l=0;l<r.length;l++){var d=r[l];d.enumerable=d.enumerable||!1,d.configurable=!0,"value"in d&&(d.writable=!0),Object.defineProperty(a,d.key,d)}}function o(a,r,l){return r&&n(a.prototype,r),l&&n(a,l),Object.defineProperty(a,"prototype",{writable:!1}),a}t.d(e,{Z:function(){return o}})},8270:function(s,e,t){function n(o,a,r){return a in o?Object.defineProperty(o,a,{value:r,enumerable:!0,configurable:!0,writable:!0}):o[a]=r,o}t.d(e,{Z:function(){return n}})},6881:function(s,e,t){t.d(e,{Z:function(){return o}});var n=t(2717);function o(a,r){a.prototype=Object.create(r.prototype),a.prototype.constructor=a,(0,n.Z)(a,r)}},2717:function(s,e,t){function n(o,a){return n=Object.setPrototypeOf||function(r,l){return r.__proto__=l,r},n(o,a)}t.d(e,{Z:function(){return n}})},7003:function(s,e,t){t.d(e,{H3:function(){return n.H3E},ev:function(){return n.evW},x:function(){return n.xa3}});var n=t(2942)},2942:function(s,e,t){t.d(e,{f_C:function(){return en},hjT:function(){return pt},R3I:function(){return N},Ljt:function(){return Q},akz:function(){return ge},VnY:function(){return ke},cKT:function(){return De},gbL:function(){return be},FIv:function(){return b},XGm:function(){return C},xa3:function(){return Le},YCL:function(){return Ee},nuO:function(){return w},vpE:function(){return Pe},RMB:function(){return L},ogt:function(){return G},bGB:function(){return B},cSb:function(){return Y},yl1:function(){return Mn},VOJ:function(){return D},u2N:function(){return v},$XI:function(){return g},lig:function(){return Ie},dvw:function(){return we},S1n:function(){return mt},$Tr:function(){return F},oLt:function(){return q},yef:function(){return Ce},ZTd:function(){return n},AqN:function(){return h},evW:function(){return Se},H3E:function(){return ye},cly:function(){return pe},AT7:function(){return ie},j7q:function(){return r},N8:function(){return d},rTO:function(){return K},BmG:function(){return le},fxP:function(){return I},czc:function(){return de},DhX:function(){return se},XET:function(){return me},LdU:function(){return _},bi5:function(){return W},fLW:function(){return oe},VHj:function(){return ve},Ui:function(){return Re},etI:function(){return Fe},GQg:function(){return ze},kmG:function(){return T}}),t(2717),t(6881);function n(){}function o(O){return O()}function a(){return Object.create(null)}function r(O){O.forEach(o)}function l(O){return typeof O=="function"}function d(O,X){return O!=O?X==X:O!==X||O&&typeof O=="object"||typeof O=="function"}function h(O,X){return O!=O?X==X:O!==X}function f(O){return Object.keys(O).length===0}function _(O){if(O==null)return n;for(var X=arguments.length,Z=new Array(X>1?X-1:0),ae=1;ae<X;ae++)Z[ae-1]=arguments[ae];var xe=O.subscribe.apply(O,Z);return xe.unsubscribe?function(){return xe.unsubscribe()}:xe}function g(O){var X;return _(O,function(Z){return X=Z})(),X}function b(O,X,Z){O.$$.on_destroy.push(_(X,Z))}function w(O,X,Z,ae){if(O){var xe=x(O,X,Z,ae);return O[0](xe)}}function x(O,X,Z,ae){return O[1]&&ae?function(xe,He){for(var Ze in He)xe[Ze]=He[Ze];return xe}(Z.ctx.slice(),O[1](ae(X))):Z.ctx}function v(O,X,Z,ae){if(O[2]&&ae){var xe=O[2](ae(Z));if(X.dirty===void 0)return xe;if(typeof xe=="object"){for(var He=[],Ze=Math.max(X.dirty.length,xe.length),nn=0;nn<Ze;nn+=1)He[nn]=X.dirty[nn]|xe[nn];return He}return X.dirty|xe}return X.dirty}function T(O,X,Z,ae,xe,He){if(xe){var Ze=x(X,Z,ae,He);O.p(Ze,xe)}}function D(O){if(O.ctx.length>32){for(var X=[],Z=O.ctx.length/32,ae=0;ae<Z;ae++)X[ae]=-1;return X}return-1}function C(O){var X={};for(var Z in O)X[Z]=!0;return X}function I(O,X,Z){return O.set(Z),X}function N(O,X){O.appendChild(X)}function F(O,X,Z){O.insertBefore(X,Z||null)}function G(O){O.parentNode.removeChild(O)}function L(O,X){for(var Z=0;Z<O.length;Z+=1)O[Z]&&O[Z].d(X)}function B(O){return document.createElement(O)}function W(O){return document.createElementNS("http://www.w3.org/2000/svg",O)}function oe(O){return document.createTextNode(O)}function se(){return oe(" ")}function Y(){return oe("")}function q(O,X,Z,ae){return O.addEventListener(X,Z,ae),function(){return O.removeEventListener(X,Z,ae)}}function ie(O){return function(X){return X.preventDefault(),O.call(this,X)}}function me(O){return function(X){return X.stopPropagation(),O.call(this,X)}}function Q(O,X,Z){Z==null?O.removeAttribute(X):O.getAttribute(X)!==Z&&O.setAttribute(X,Z)}function K(O,X){X=""+X,O.wholeText!==X&&(O.data=X)}function le(O,X){O.value=X??""}function de(O,X,Z,ae){Z===null?O.style.removeProperty(X):O.style.setProperty(X,Z,ae?"important":"")}function ve(O,X,Z){O.classList[Z?"add":"remove"](X)}function $(O,X,Z){Z===void 0&&(Z=!1);var ae=document.createEvent("CustomEvent");return ae.initCustomEvent(O,Z,!1,X),ae}var z;function ne(O){z=O}function V(){if(!z)throw new Error("Function called outside component initialization");return z}function ye(O){V().$$.on_mount.push(O)}function Se(O){V().$$.on_destroy.push(O)}function Le(){var O=V();return function(X,Z){var ae=O.$$.callbacks[X];if(ae){var xe=$(X,Z);ae.slice().forEach(function(He){He.call(O,xe)})}}}function De(O,X){var Z=this,ae=O.$$.callbacks[X.type];ae&&ae.slice().forEach(function(xe){return xe.call(Z,X)})}var Oe=[],ke=[],Ve=[],je=[],$t=Promise.resolve(),jt=!1;function Ot(){jt||(jt=!0,$t.then(Mn))}function _t(O){Ve.push(O)}function pt(O){je.push(O)}var vt=new Set,cn=0;function Mn(){var O=z;do{for(;cn<Oe.length;){var X=Oe[cn];cn++,ne(X),U(X.$$)}for(ne(null),Oe.length=0,cn=0;ke.length;)ke.pop()();for(var Z=0;Z<Ve.length;Z+=1){var ae=Ve[Z];vt.has(ae)||(vt.add(ae),ae())}Ve.length=0}while(Oe.length);for(;je.length;)je.pop()();jt=!1,vt.clear(),ne(O)}function U(O){if(O.fragment!==null){O.update(),r(O.before_update);var X=O.dirty;O.dirty=[-1],O.fragment&&O.fragment.p(O.ctx,X),O.after_update.forEach(_t)}}var R,ce=new Set;function we(){R={r:0,c:[],p:R}}function be(){R.r||r(R.c),R=R.p}function Re(O,X){O&&O.i&&(ce.delete(O),O.i(X))}function Fe(O,X,Z,ae){if(O&&O.o){if(ce.has(O))return;ce.add(O),R.c.push(function(){ce.delete(O),ae&&(Z&&O.d(1),ae())}),O.o(X)}}var Ie=typeof window<"u"?window:typeof globalThis<"u"?globalThis:commonjsGlobal;function pe(O,X){Fe(O,1,1,function(){X.delete(O.key)})}function ze(O,X,Z,ae,xe,He,Ze,nn,pn,Tt,xn,Cn){for(var Vn=O.length,kn=He.length,$n=Vn,A={};$n--;)A[O[$n].key]=$n;var ee=[],ue=new Map,J=new Map;for($n=kn;$n--;){var he=Cn(xe,He,$n),Be=Z(he),We=Ze.get(Be);We?ae&&We.p(he,X):(We=Tt(Be,he)).c(),ue.set(Be,ee[$n]=We),Be in A&&J.set(Be,Math.abs($n-A[Be]))}var qe=new Set,Ke=new Set;function Pt(Bn){Re(Bn,1),Bn.m(nn,xn),Ze.set(Bn.key,Bn),xn=Bn.first,kn--}for(;Vn&&kn;){var Ye=ee[kn-1],Qe=O[Vn-1],an=Ye.key,yn=Qe.key;Ye===Qe?(xn=Ye.first,Vn--,kn--):ue.has(yn)?!Ze.has(an)||qe.has(an)?Pt(Ye):Ke.has(yn)?Vn--:J.get(an)>J.get(yn)?(Ke.add(an),Pt(Ye)):(qe.add(yn),Vn--):(pn(Qe,Ze),Vn--)}for(;Vn--;){var In=O[Vn];ue.has(In.key)||pn(In,Ze)}for(;kn;)Pt(ee[kn-1]);return ee}function ge(O,X,Z){var ae=O.$$.props[X];ae!==void 0&&(O.$$.bound[ae]=Z,Z(O.$$.ctx[ae]))}function Ee(O){O&&O.c()}function Ce(O,X,Z,ae){var xe=O.$$,He=xe.fragment,Ze=xe.on_mount,nn=xe.on_destroy,pn=xe.after_update;He&&He.m(X,Z),ae||_t(function(){var Tt=Ze.map(o).filter(l);nn?nn.push.apply(nn,Tt):r(Tt),O.$$.on_mount=[]}),pn.forEach(_t)}function Pe(O,X){var Z=O.$$;Z.fragment!==null&&(r(Z.on_destroy),Z.fragment&&Z.fragment.d(X),Z.on_destroy=Z.fragment=null,Z.ctx=[])}function $e(O,X){O.$$.dirty[0]===-1&&(Oe.push(O),Ot(),O.$$.dirty.fill(0)),O.$$.dirty[X/31|0]|=1<<X%31}function mt(O,X,Z,ae,xe,He,Ze,nn){nn===void 0&&(nn=[-1]);var pn=z;ne(O);var Tt=O.$$={fragment:null,ctx:null,props:He,update:n,not_equal:xe,bound:a(),on_mount:[],on_destroy:[],on_disconnect:[],before_update:[],after_update:[],context:new Map(X.context||(pn?pn.$$.context:[])),callbacks:a(),dirty:nn,skip_bound:!1,root:X.target||pn.$$.root};Ze&&Ze(Tt.root);var xn,Cn=!1;if(Tt.ctx=Z?Z(O,X.props||{},function(kn,$n){var A=!(arguments.length<=2)&&arguments.length-2?arguments.length<=2?void 0:arguments[2]:$n;return Tt.ctx&&xe(Tt.ctx[kn],Tt.ctx[kn]=A)&&(!Tt.skip_bound&&Tt.bound[kn]&&Tt.bound[kn](A),Cn&&$e(O,kn)),$n}):[],Tt.update(),Cn=!0,r(Tt.before_update),Tt.fragment=!!ae&&ae(Tt.ctx),X.target){if(X.hydrate){var Vn=(xn=X.target,Array.from(xn.childNodes));Tt.fragment&&Tt.fragment.l(Vn),Vn.forEach(G)}else Tt.fragment&&Tt.fragment.c();X.intro&&Re(O.$$.fragment),Ce(O,X.target,X.anchor,X.customElement),Mn()}ne(pn)}var en=function(){function O(){}var X=O.prototype;return X.$destroy=function(){Pe(this,1),this.$destroy=n},X.$on=function(Z,ae){var xe=this.$$.callbacks[Z]||(this.$$.callbacks[Z]=[]);return xe.push(ae),function(){var He=xe.indexOf(ae);He!==-1&&xe.splice(He,1)}},X.$set=function(Z){this.$$set&&!f(Z)&&(this.$$.skip_bound=!0,this.$$set(Z),this.$$.skip_bound=!1)},O}()},3313:function(s,e,t){t.d(e,{U2:function(){return n.$XI},fZ:function(){return l}});var n=t(2942);function o(d,h){var f=typeof Symbol<"u"&&d[Symbol.iterator]||d["@@iterator"];if(f)return(f=f.call(d)).next.bind(f);if(Array.isArray(d)||(f=function(g,b){if(g){if(typeof g=="string")return a(g,b);var w=Object.prototype.toString.call(g).slice(8,-1);if(w==="Object"&&g.constructor&&(w=g.constructor.name),w==="Map"||w==="Set")return Array.from(g);if(w==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(w))return a(g,b)}}(d))||h&&d&&typeof d.length=="number"){f&&(d=f);var _=0;return function(){return _>=d.length?{done:!0}:{done:!1,value:d[_++]}}}throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function a(d,h){(h==null||h>d.length)&&(h=d.length);for(var f=0,_=new Array(h);f<h;f++)_[f]=d[f];return _}var r=[];function l(d,h){var f;h===void 0&&(h=n.ZTd);var _=new Set;function g(b){if((0,n.N8)(d,b)&&(d=b,f)){for(var w,x=!r.length,v=o(_);!(w=v()).done;){var T=w.value;T[1](),r.push(T,d)}if(x){for(var D=0;D<r.length;D+=2)r[D][0](r[D+1]);r.length=0}}}return{set:g,update:function(b){g(b(d))},subscribe:function(b,w){w===void 0&&(w=n.ZTd);var x=[b,w];return _.add(x),_.size===1&&(f=h(g)||n.ZTd),b(d),function(){_.delete(x),_.size===0&&(f(),f=null)}}}}}},__webpack_module_cache__={};function __webpack_require__(s){var e=__webpack_module_cache__[s];if(e!==void 0)return e.exports;var t=__webpack_module_cache__[s]={id:s,exports:{}};return __webpack_modules__[s](t,t.exports,__webpack_require__),t.exports}__webpack_require__.n=function(s){var e=s&&s.__esModule?function(){return s.default}:function(){return s};return __webpack_require__.d(e,{a:e}),e},__webpack_require__.d=function(s,e){for(var t in e)__webpack_require__.o(e,t)&&!__webpack_require__.o(s,t)&&Object.defineProperty(s,t,{enumerable:!0,get:e[t]})},__webpack_require__.g=function(){if(typeof globalThis=="object")return globalThis;try{return this||new Function("return this")()}catch{if(typeof window=="object")return window}}(),__webpack_require__.o=function(s,e){return Object.prototype.hasOwnProperty.call(s,e)};var __webpack_exports__={};return function(){__webpack_require__.d(__webpack_exports__,{default:function(){return al}}),__webpack_require__(5441),__webpack_require__(8765);var s=__webpack_require__(4296),e=__webpack_require__(5103),t={one:function(M,p){p===void 0&&(p=document);try{return p.querySelector(M)||void 0}catch{return}},all:function(M,p){p===void 0&&(p=document);try{var c=p.querySelectorAll(M);return[].slice.call(c)}catch{return[]}},addClass:function(M,p){if(M)for(var c=(0,e.kJ)(M)?M:[M],u=0;u<c.length;u++){var y=(c[u].className||"").split(" ");y.indexOf(p)>-1||(y.push(p),c[u].className=y.join(" "))}},removeClass:function(M,p){if(M)for(var c=(0,e.kJ)(M)?M:[M],u=0;u<c.length;u++){for(var y=c[u].className.split(" "),S=0;S<y.length;S++)y[S]==p&&(y[S]="");c[u].className=y.join(" ").trim()}},hasClass:function(M,p){return!(!M||!M.classList)&&M.classList.contains(p)},bind:function(M,p,c,u){u===void 0&&(u=!1),M&&((0,e.kJ)(M)?M:[M]).forEach(function(y){y.addEventListener(p,c,!!u)})},delegate:function(M,p,c,u){M&&M.addEventListener(p,function(y){var S=t.all(c,M);if(S)e:for(var E=0;E<S.length;E++)for(var P=y.target;P;){if(P==S[E]){u.call(P,y,P);break e}if((P=P.parentNode)==M)break}},!1)},removeChildren:function(M){for(;M.firstChild;)M.removeChild(M.lastChild);return M}},n=t,o=__webpack_require__(6464),a=__webpack_require__(6881),r=__webpack_require__(2942),l=__webpack_require__(7003),d=__webpack_require__(3379),h=__webpack_require__.n(d),f=__webpack_require__(7795),_=__webpack_require__.n(f),g=__webpack_require__(569),b=__webpack_require__.n(g),w=__webpack_require__(3565),x=__webpack_require__.n(w),v=__webpack_require__(9216),T=__webpack_require__.n(v),D=__webpack_require__(4589),C=__webpack_require__.n(D),I=__webpack_require__(7558),N={};I.Z&&I.Z.locals&&(N.locals=I.Z.locals);var F,G=0,L={};L.styleTagTransform=C(),L.setAttributes=x(),L.insert=b().bind(null,"head"),L.domAPI=_(),L.insertStyleElement=T(),N.use=function(M){return L.options=M||{},G++||(F=h()(I.Z,L)),N},N.unuse=function(){G>0&&!--G&&(F(),F=null)};var B=N;function W(M){var p,c,u,y;return{c:function(){p=(0,r.bGB)("div"),c=(0,r.fLW)("vConsole"),(0,r.Ljt)(p,"class","vc-switch"),(0,r.czc)(p,"right",M[2].x+"px"),(0,r.czc)(p,"bottom",M[2].y+"px"),(0,r.czc)(p,"display",M[0]?"block":"none")},m:function(S,E){(0,r.$Tr)(S,p,E),(0,r.R3I)(p,c),M[8](p),u||(y=[(0,r.oLt)(p,"touchstart",M[3],{passive:!1}),(0,r.oLt)(p,"touchend",M[4],{passive:!1}),(0,r.oLt)(p,"touchmove",M[5],{passive:!1}),(0,r.oLt)(p,"click",M[7])],u=!0)},p:function(S,E){var P=E[0];4&P&&(0,r.czc)(p,"right",S[2].x+"px"),4&P&&(0,r.czc)(p,"bottom",S[2].y+"px"),1&P&&(0,r.czc)(p,"display",S[0]?"block":"none")},i:r.ZTd,o:r.ZTd,d:function(S){S&&(0,r.ogt)(p),M[8](null),u=!1,(0,r.j7q)(y)}}}function oe(M,p,c){var u,y=p.show,S=y===void 0||y,E=p.position,P=E===void 0?{x:0,y:0}:E,k={hasMoved:!1,x:0,y:0,startX:0,startY:0,endX:0,endY:0},j={x:0,y:0};(0,l.H3)(function(){B.use()}),(0,l.ev)(function(){B.unuse()});var te=function(re,Me){var _e=fe(re,Me);re=_e[0],Me=_e[1],k.x=re,k.y=Me,c(2,j.x=re,j),c(2,j.y=Me,j),e.po("switch_x",re+""),e.po("switch_y",Me+"")},fe=function(re,Me){var _e=Math.max(document.documentElement.offsetWidth,window.innerWidth),Te=Math.max(document.documentElement.offsetHeight,window.innerHeight);return re+u.offsetWidth>_e&&(re=_e-u.offsetWidth),Me+u.offsetHeight>Te&&(Me=Te-u.offsetHeight),re<0&&(re=0),Me<20&&(Me=20),[re,Me]};return M.$$set=function(re){"show"in re&&c(0,S=re.show),"position"in re&&c(6,P=re.position)},M.$$.update=function(){66&M.$$.dirty&&u&&te(P.x,P.y)},[S,u,j,function(re){k.startX=re.touches[0].pageX,k.startY=re.touches[0].pageY,k.hasMoved=!1},function(re){k.hasMoved&&(k.startX=0,k.startY=0,k.hasMoved=!1,te(k.endX,k.endY))},function(re){if(!(re.touches.length<=0)){var Me=re.touches[0].pageX-k.startX,_e=re.touches[0].pageY-k.startY,Te=Math.floor(k.x-Me),Ae=Math.floor(k.y-_e),Ue=fe(Te,Ae);Te=Ue[0],Ae=Ue[1],c(2,j.x=Te,j),c(2,j.y=Ae,j),k.endX=Te,k.endY=Ae,k.hasMoved=!0,re.preventDefault()}},P,function(re){r.cKT.call(this,M,re)},function(re){r.VnY[re?"unshift":"push"](function(){c(1,u=re)})}]}var se=function(M){function p(c){var u;return u=M.call(this)||this,(0,r.S1n)((0,o.Z)(u),c,oe,W,r.N8,{show:0,position:6}),u}return(0,a.Z)(p,M),(0,s.Z)(p,[{key:"show",get:function(){return this.$$.ctx[0]},set:function(c){this.$$set({show:c}),(0,r.yl1)()}},{key:"position",get:function(){return this.$$.ctx[6]},set:function(c){this.$$set({position:c}),(0,r.yl1)()}}]),p}(r.f_C),Y=se,q=__webpack_require__(4687),ie=__webpack_require__(3283),me={};ie.Z&&ie.Z.locals&&(me.locals=ie.Z.locals);var Q,K=0,le={};le.styleTagTransform=C(),le.setAttributes=x(),le.insert=b().bind(null,"head"),le.domAPI=_(),le.insertStyleElement=T(),me.use=function(M){return le.options=M||{},K++||(Q=h()(ie.Z,le)),me},me.unuse=function(){K>0&&!--K&&(Q(),Q=null)};var de=me;function ve(M,p,c){var u=M.slice();return u[39]=p[c][0],u[40]=p[c][1],u}function $(M,p,c){var u=M.slice();return u[43]=p[c],u[45]=c,u}function z(M,p,c){var u=M.slice();return u[39]=p[c][0],u[40]=p[c][1],u}function ne(M,p,c){var u=M.slice();return u[39]=p[c][0],u[40]=p[c][1],u}function V(M,p,c){var u=M.slice();return u[43]=p[c],u[45]=c,u}function ye(M,p,c){var u=M.slice();return u[39]=p[c][0],u[40]=p[c][1],u}function Se(M){var p,c,u,y,S,E=M[40].name+"";function P(){return M[25](M[40])}return{c:function(){p=(0,r.bGB)("a"),c=(0,r.fLW)(E),(0,r.Ljt)(p,"class","vc-tab"),(0,r.Ljt)(p,"id",u="__vc_tab_"+M[40].id),(0,r.VHj)(p,"vc-actived",M[40].id===M[2])},m:function(k,j){(0,r.$Tr)(k,p,j),(0,r.R3I)(p,c),y||(S=(0,r.oLt)(p,"click",P),y=!0)},p:function(k,j){M=k,8&j[0]&&E!==(E=M[40].name+"")&&(0,r.rTO)(c,E),8&j[0]&&u!==(u="__vc_tab_"+M[40].id)&&(0,r.Ljt)(p,"id",u),12&j[0]&&(0,r.VHj)(p,"vc-actived",M[40].id===M[2])},d:function(k){k&&(0,r.ogt)(p),y=!1,S()}}}function Le(M){var p,c=M[40].hasTabPanel&&Se(M);return{c:function(){c&&c.c(),p=(0,r.cSb)()},m:function(u,y){c&&c.m(u,y),(0,r.$Tr)(u,p,y)},p:function(u,y){u[40].hasTabPanel?c?c.p(u,y):((c=Se(u)).c(),c.m(p.parentNode,p)):c&&(c.d(1),c=null)},d:function(u){c&&c.d(u),u&&(0,r.ogt)(p)}}}function De(M){var p,c,u,y,S,E=M[43].name+"";function P(){for(var k,j=arguments.length,te=new Array(j),fe=0;fe<j;fe++)te[fe]=arguments[fe];return(k=M)[26].apply(k,[M[40],M[45]].concat(te))}return{c:function(){p=(0,r.bGB)("i"),c=(0,r.fLW)(E),(0,r.Ljt)(p,"class",u="vc-toptab vc-topbar-"+M[40].id+" "+M[43].className),(0,r.VHj)(p,"vc-toggle",M[40].id===M[2]),(0,r.VHj)(p,"vc-actived",M[43].actived)},m:function(k,j){(0,r.$Tr)(k,p,j),(0,r.R3I)(p,c),y||(S=(0,r.oLt)(p,"click",P),y=!0)},p:function(k,j){M=k,8&j[0]&&E!==(E=M[43].name+"")&&(0,r.rTO)(c,E),8&j[0]&&u!==(u="vc-toptab vc-topbar-"+M[40].id+" "+M[43].className)&&(0,r.Ljt)(p,"class",u),12&j[0]&&(0,r.VHj)(p,"vc-toggle",M[40].id===M[2]),8&j[0]&&(0,r.VHj)(p,"vc-actived",M[43].actived)},d:function(k){k&&(0,r.ogt)(p),y=!1,S()}}}function Oe(M){for(var p,c=M[40].topbarList,u=[],y=0;y<c.length;y+=1)u[y]=De(V(M,c,y));return{c:function(){for(var S=0;S<u.length;S+=1)u[S].c();p=(0,r.cSb)()},m:function(S,E){for(var P=0;P<u.length;P+=1)u[P].m(S,E);(0,r.$Tr)(S,p,E)},p:function(S,E){if(8204&E[0]){var P;for(c=S[40].topbarList,P=0;P<c.length;P+=1){var k=V(S,c,P);u[P]?u[P].p(k,E):(u[P]=De(k),u[P].c(),u[P].m(p.parentNode,p))}for(;P<u.length;P+=1)u[P].d(1);u.length=c.length}},d:function(S){(0,r.RMB)(u,S),S&&(0,r.ogt)(p)}}}function ke(M){var p,c;return{c:function(){var u;p=(0,r.bGB)("div"),(0,r.Ljt)(p,"id",c="__vc_plug_"+M[40].id),(0,r.Ljt)(p,"class","vc-plugin-box"),(0,r.VHj)(p,"vc-fixed-height",(u=M[40].tabOptions)==null?void 0:u.fixedHeight),(0,r.VHj)(p,"vc-actived",M[40].id===M[2])},m:function(u,y){(0,r.$Tr)(u,p,y)},p:function(u,y){var S;8&y[0]&&c!==(c="__vc_plug_"+u[40].id)&&(0,r.Ljt)(p,"id",c),8&y[0]&&(0,r.VHj)(p,"vc-fixed-height",(S=u[40].tabOptions)==null?void 0:S.fixedHeight),12&y[0]&&(0,r.VHj)(p,"vc-actived",u[40].id===u[2])},d:function(u){u&&(0,r.ogt)(p)}}}function Ve(M){var p,c,u,y,S,E=M[43].name+"";function P(){for(var k,j=arguments.length,te=new Array(j),fe=0;fe<j;fe++)te[fe]=arguments[fe];return(k=M)[28].apply(k,[M[40],M[45]].concat(te))}return{c:function(){p=(0,r.bGB)("i"),c=(0,r.fLW)(E),(0,r.Ljt)(p,"class",u="vc-tool vc-tool-"+M[40].id),(0,r.VHj)(p,"vc-global-tool",M[43].global),(0,r.VHj)(p,"vc-toggle",M[40].id===M[2])},m:function(k,j){(0,r.$Tr)(k,p,j),(0,r.R3I)(p,c),y||(S=(0,r.oLt)(p,"click",P),y=!0)},p:function(k,j){M=k,8&j[0]&&E!==(E=M[43].name+"")&&(0,r.rTO)(c,E),8&j[0]&&u!==(u="vc-tool vc-tool-"+M[40].id)&&(0,r.Ljt)(p,"class",u),8&j[0]&&(0,r.VHj)(p,"vc-global-tool",M[43].global),12&j[0]&&(0,r.VHj)(p,"vc-toggle",M[40].id===M[2])},d:function(k){k&&(0,r.ogt)(p),y=!1,S()}}}function je(M){for(var p,c=M[40].toolbarList,u=[],y=0;y<c.length;y+=1)u[y]=Ve($(M,c,y));return{c:function(){for(var S=0;S<u.length;S+=1)u[S].c();p=(0,r.cSb)()},m:function(S,E){for(var P=0;P<u.length;P+=1)u[P].m(S,E);(0,r.$Tr)(S,p,E)},p:function(S,E){if(16396&E[0]){var P;for(c=S[40].toolbarList,P=0;P<c.length;P+=1){var k=$(S,c,P);u[P]?u[P].p(k,E):(u[P]=Ve(k),u[P].c(),u[P].m(p.parentNode,p))}for(;P<u.length;P+=1)u[P].d(1);u.length=c.length}},d:function(S){(0,r.RMB)(u,S),S&&(0,r.ogt)(p)}}}function $t(M){var p,c,u,y,S,E,P,k,j,te,fe,re,Me,_e,Te,Ae,Ue,Ne,Xe,tn,bt;function gn(Xt){M[23](Xt)}function Sn(Xt){M[24](Xt)}var vn={};M[0]!==void 0&&(vn.show=M[0]),M[1]!==void 0&&(vn.position=M[1]),c=new Y({props:vn}),r.VnY.push(function(){return(0,r.akz)(c,"show",gn)}),r.VnY.push(function(){return(0,r.akz)(c,"position",Sn)}),c.$on("click",M[10]);for(var zt=Object.entries(M[3]),Zt=[],bn=0;bn<zt.length;bn+=1)Zt[bn]=Le(ye(M,zt,bn));for(var On=Object.entries(M[3]),_n=[],sn=0;sn<On.length;sn+=1)_n[sn]=Oe(ne(M,On,sn));for(var hn=Object.entries(M[3]),Wt=[],Vt=0;Vt<hn.length;Vt+=1)Wt[Vt]=ke(z(M,hn,Vt));for(var on=Object.entries(M[3]),Ge=[],dn=0;dn<on.length;dn+=1)Ge[dn]=je(ve(M,on,dn));return{c:function(){var Xt,rn;p=(0,r.bGB)("div"),(0,r.YCL)(c.$$.fragment),S=(0,r.DhX)(),E=(0,r.bGB)("div"),P=(0,r.DhX)(),k=(0,r.bGB)("div"),j=(0,r.bGB)("div");for(var Nn=0;Nn<Zt.length;Nn+=1)Zt[Nn].c();te=(0,r.DhX)(),fe=(0,r.bGB)("div");for(var Fn=0;Fn<_n.length;Fn+=1)_n[Fn].c();re=(0,r.DhX)(),Me=(0,r.bGB)("div");for(var Dn=0;Dn<Wt.length;Dn+=1)Wt[Dn].c();_e=(0,r.DhX)(),Te=(0,r.bGB)("div");for(var Tn=0;Tn<Ge.length;Tn+=1)Ge[Tn].c();Ae=(0,r.DhX)(),(Ue=(0,r.bGB)("i")).textContent="Hide",(0,r.Ljt)(E,"class","vc-mask"),(0,r.czc)(E,"display",M[9]?"block":"none"),(0,r.Ljt)(j,"class","vc-tabbar"),(0,r.Ljt)(fe,"class","vc-topbar"),(0,r.Ljt)(Me,"class","vc-content"),(0,r.VHj)(Me,"vc-has-topbar",((Xt=M[3][M[2]])==null||(rn=Xt.topbarList)==null?void 0:rn.length)>0),(0,r.Ljt)(Ue,"class","vc-tool vc-global-tool vc-tool-last vc-hide"),(0,r.Ljt)(Te,"class","vc-toolbar"),(0,r.Ljt)(k,"class","vc-panel"),(0,r.czc)(k,"display",M[8]?"block":"none"),(0,r.Ljt)(p,"id","__vconsole"),(0,r.Ljt)(p,"style",Ne=M[6]?"font-size:"+M[6]+";":""),(0,r.Ljt)(p,"data-theme",M[5]),(0,r.VHj)(p,"vc-toggle",M[7])},m:function(Xt,rn){(0,r.$Tr)(Xt,p,rn),(0,r.yef)(c,p,null),(0,r.R3I)(p,S),(0,r.R3I)(p,E),(0,r.R3I)(p,P),(0,r.R3I)(p,k),(0,r.R3I)(k,j);for(var Nn=0;Nn<Zt.length;Nn+=1)Zt[Nn].m(j,null);(0,r.R3I)(k,te),(0,r.R3I)(k,fe);for(var Fn=0;Fn<_n.length;Fn+=1)_n[Fn].m(fe,null);(0,r.R3I)(k,re),(0,r.R3I)(k,Me);for(var Dn=0;Dn<Wt.length;Dn+=1)Wt[Dn].m(Me,null);M[27](Me),(0,r.R3I)(k,_e),(0,r.R3I)(k,Te);for(var Tn=0;Tn<Ge.length;Tn+=1)Ge[Tn].m(Te,null);(0,r.R3I)(Te,Ae),(0,r.R3I)(Te,Ue),Xe=!0,tn||(bt=[(0,r.oLt)(E,"click",M[11]),(0,r.oLt)(Me,"touchstart",M[15]),(0,r.oLt)(Me,"touchmove",M[16]),(0,r.oLt)(Me,"touchend",M[17]),(0,r.oLt)(Me,"scroll",M[18]),(0,r.oLt)(Ue,"click",M[11]),(0,r.oLt)(p,"touchstart",M[19].touchStart,{passive:!1,capture:!0}),(0,r.oLt)(p,"touchmove",M[19].touchMove,{passive:!1,capture:!0}),(0,r.oLt)(p,"touchend",M[19].touchEnd,{passive:!1,capture:!0})],tn=!0)},p:function(Xt,rn){var Nn,Fn,Dn={};if(!u&&1&rn[0]&&(u=!0,Dn.show=Xt[0],(0,r.hjT)(function(){return u=!1})),!y&&2&rn[0]&&(y=!0,Dn.position=Xt[1],(0,r.hjT)(function(){return y=!1})),c.$set(Dn),(!Xe||512&rn[0])&&(0,r.czc)(E,"display",Xt[9]?"block":"none"),4108&rn[0]){var Tn;for(zt=Object.entries(Xt[3]),Tn=0;Tn<zt.length;Tn+=1){var Ti=ye(Xt,zt,Tn);Zt[Tn]?Zt[Tn].p(Ti,rn):(Zt[Tn]=Le(Ti),Zt[Tn].c(),Zt[Tn].m(j,null))}for(;Tn<Zt.length;Tn+=1)Zt[Tn].d(1);Zt.length=zt.length}if(8204&rn[0]){var Un;for(On=Object.entries(Xt[3]),Un=0;Un<On.length;Un+=1){var Ci=ne(Xt,On,Un);_n[Un]?_n[Un].p(Ci,rn):(_n[Un]=Oe(Ci),_n[Un].c(),_n[Un].m(fe,null))}for(;Un<_n.length;Un+=1)_n[Un].d(1);_n.length=On.length}if(12&rn[0]){var Hn;for(hn=Object.entries(Xt[3]),Hn=0;Hn<hn.length;Hn+=1){var mi=z(Xt,hn,Hn);Wt[Hn]?Wt[Hn].p(mi,rn):(Wt[Hn]=ke(mi),Wt[Hn].c(),Wt[Hn].m(Me,null))}for(;Hn<Wt.length;Hn+=1)Wt[Hn].d(1);Wt.length=hn.length}if(12&rn[0]&&(0,r.VHj)(Me,"vc-has-topbar",((Nn=Xt[3][Xt[2]])==null||(Fn=Nn.topbarList)==null?void 0:Fn.length)>0),16396&rn[0]){var zn;for(on=Object.entries(Xt[3]),zn=0;zn<on.length;zn+=1){var Ui=ve(Xt,on,zn);Ge[zn]?Ge[zn].p(Ui,rn):(Ge[zn]=je(Ui),Ge[zn].c(),Ge[zn].m(Te,Ae))}for(;zn<Ge.length;zn+=1)Ge[zn].d(1);Ge.length=on.length}(!Xe||256&rn[0])&&(0,r.czc)(k,"display",Xt[8]?"block":"none"),(!Xe||64&rn[0]&&Ne!==(Ne=Xt[6]?"font-size:"+Xt[6]+";":""))&&(0,r.Ljt)(p,"style",Ne),(!Xe||32&rn[0])&&(0,r.Ljt)(p,"data-theme",Xt[5]),128&rn[0]&&(0,r.VHj)(p,"vc-toggle",Xt[7])},i:function(Xt){Xe||((0,r.Ui)(c.$$.fragment,Xt),Xe=!0)},o:function(Xt){(0,r.etI)(c.$$.fragment,Xt),Xe=!1},d:function(Xt){Xt&&(0,r.ogt)(p),(0,r.vpE)(c),(0,r.RMB)(Zt,Xt),(0,r.RMB)(_n,Xt),(0,r.RMB)(Wt,Xt),M[27](null),(0,r.RMB)(Ge,Xt),tn=!1,(0,r.j7q)(bt)}}}function jt(M,p,c){var u,y=p.theme,S=y===void 0?"":y,E=p.disableScrolling,P=E!==void 0&&E,k=p.show,j=k!==void 0&&k,te=p.showSwitchButton,fe=te===void 0||te,re=p.switchButtonPosition,Me=re===void 0?{x:0,y:0}:re,_e=p.activedPluginId,Te=_e===void 0?"":_e,Ae=p.pluginList,Ue=Ae===void 0?{}:Ae,Ne=p.divContent,Xe=(0,l.x)(),tn=!1,bt="",gn=!1,Sn=!1,vn=!1,zt=!0,Zt=0,bn=null,On={};(0,l.H3)(function(){var Ge=document.querySelectorAll('[name="viewport"]');if(Ge&&Ge[0]){var dn=(Ge[Ge.length-1].getAttribute("content")||"").match(/initial\-scale\=\d+(\.\d+)?/),Xt=dn?parseFloat(dn[0].split("=")[1]):1;Xt!==1&&c(6,bt=Math.floor(1/Xt*13)+"px")}de.use&&de.use(),u=q.x.subscribe(function(rn){j&&Zt!==rn.updateTime&&(Zt=rn.updateTime,_n())})}),(0,l.ev)(function(){de.unuse&&de.unuse(),u&&u()});var _n=function(){!P&&zt&&Ne&&c(4,Ne.scrollTop=Ne.scrollHeight-Ne.offsetHeight,Ne)},sn=function(Ge){Ge!==Te&&(c(2,Te=Ge),Xe("changePanel",{pluginId:Ge}),setTimeout(function(){Ne&&c(4,Ne.scrollTop=On[Te]||0,Ne)},0))},hn=function(Ge,dn,Xt){var rn=Ue[dn].topbarList[Xt],Nn=!0;if(e.mf(rn.onClick)&&(Nn=rn.onClick.call(Ge.target,Ge,rn.data)),Nn!==!1){for(var Fn=0;Fn<Ue[dn].topbarList.length;Fn++)c(3,Ue[dn].topbarList[Fn].actived=Xt===Fn,Ue);c(3,Ue)}},Wt=function(Ge,dn,Xt){var rn=Ue[dn].toolbarList[Xt];e.mf(rn.onClick)&&rn.onClick.call(Ge.target,Ge,rn.data)},Vt={tapTime:700,tapBoundary:10,lastTouchStartTime:0,touchstartX:0,touchstartY:0,touchHasMoved:!1,targetElem:null},on={touchStart:function(Ge){if(Vt.lastTouchStartTime===0){var dn=Ge.targetTouches[0];Vt.touchstartX=dn.pageX,Vt.touchstartY=dn.pageY,Vt.lastTouchStartTime=Ge.timeStamp,Vt.targetElem=Ge.target.nodeType===Node.TEXT_NODE?Ge.target.parentNode:Ge.target}},touchMove:function(Ge){var dn=Ge.changedTouches[0];(Math.abs(dn.pageX-Vt.touchstartX)>Vt.tapBoundary||Math.abs(dn.pageY-Vt.touchstartY)>Vt.tapBoundary)&&(Vt.touchHasMoved=!0)},touchEnd:function(Ge){if(Vt.touchHasMoved===!1&&Ge.timeStamp-Vt.lastTouchStartTime<Vt.tapTime&&Vt.targetElem!=null){var dn=!1;switch(Vt.targetElem.tagName.toLowerCase()){case"textarea":dn=!0;break;case"select":dn=!Vt.targetElem.disabled&&!Vt.targetElem.readOnly;break;case"input":switch(Vt.targetElem.type){case"button":case"checkbox":case"file":case"image":case"radio":case"submit":dn=!1;break;default:dn=!Vt.targetElem.disabled&&!Vt.targetElem.readOnly}}dn?Vt.targetElem.focus():Ge.preventDefault();var Xt=Ge.changedTouches[0],rn=new MouseEvent("click",{bubbles:!0,cancelable:!0,view:window,screenX:Xt.screenX,screenY:Xt.screenY,clientX:Xt.clientX,clientY:Xt.clientY});Vt.targetElem.dispatchEvent(rn)}Vt.lastTouchStartTime=0,Vt.touchHasMoved=!1,Vt.targetElem=null}};return M.$$set=function(Ge){"theme"in Ge&&c(5,S=Ge.theme),"disableScrolling"in Ge&&c(20,P=Ge.disableScrolling),"show"in Ge&&c(21,j=Ge.show),"showSwitchButton"in Ge&&c(0,fe=Ge.showSwitchButton),"switchButtonPosition"in Ge&&c(1,Me=Ge.switchButtonPosition),"activedPluginId"in Ge&&c(2,Te=Ge.activedPluginId),"pluginList"in Ge&&c(3,Ue=Ge.pluginList),"divContent"in Ge&&c(4,Ne=Ge.divContent)},M.$$.update=function(){6291456&M.$$.dirty[0]&&(j===!0?(c(8,Sn=!0),c(9,vn=!0),bn&&clearTimeout(bn),c(22,bn=setTimeout(function(){c(7,gn=!0),_n()},10))):(c(7,gn=!1),bn&&clearTimeout(bn),c(22,bn=setTimeout(function(){c(8,Sn=!1),c(9,vn=!1)},330))))},[fe,Me,Te,Ue,Ne,S,bt,gn,Sn,vn,function(Ge){Xe("show",{show:!0})},function(Ge){Xe("show",{show:!1})},sn,hn,Wt,function(Ge){if(!(Ge.target.tagName==="INPUT"||Ge.target.tagName==="TEXTAREA")){var dn=!1;if(typeof window.getComputedStyle=="function"){var Xt=window.getComputedStyle(Ge.target);Xt.overflow!=="auto"&&Xt.overflow!=="scroll"||(dn=!0)}if(!dn){var rn=Ne.scrollTop,Nn=Ne.scrollHeight,Fn=rn+Ne.offsetHeight;rn===0?(c(4,Ne.scrollTop=1,Ne),Ne.scrollTop===0&&(tn=!0)):Fn===Nn&&(c(4,Ne.scrollTop=rn-1,Ne),Ne.scrollTop===rn&&(tn=!0))}}},function(Ge){tn&&Ge.preventDefault()},function(Ge){tn=!1},function(Ge){j&&(zt=Ne.scrollTop+Ne.offsetHeight>=Ne.scrollHeight-50,On[Te]=Ne.scrollTop)},on,P,j,bn,function(Ge){c(0,fe=Ge)},function(Ge){c(1,Me=Ge)},function(Ge){return sn(Ge.id)},function(Ge,dn,Xt){return hn(Xt,Ge.id,dn)},function(Ge){r.VnY[Ge?"unshift":"push"](function(){c(4,Ne=Ge)})},function(Ge,dn,Xt){return Wt(Xt,Ge.id,dn)}]}var Ot=function(M){function p(c){var u;return u=M.call(this)||this,(0,r.S1n)((0,o.Z)(u),c,jt,$t,r.N8,{theme:5,disableScrolling:20,show:21,showSwitchButton:0,switchButtonPosition:1,activedPluginId:2,pluginList:3,divContent:4},null,[-1,-1]),u}return(0,a.Z)(p,M),(0,s.Z)(p,[{key:"theme",get:function(){return this.$$.ctx[5]},set:function(c){this.$$set({theme:c}),(0,r.yl1)()}},{key:"disableScrolling",get:function(){return this.$$.ctx[20]},set:function(c){this.$$set({disableScrolling:c}),(0,r.yl1)()}},{key:"show",get:function(){return this.$$.ctx[21]},set:function(c){this.$$set({show:c}),(0,r.yl1)()}},{key:"showSwitchButton",get:function(){return this.$$.ctx[0]},set:function(c){this.$$set({showSwitchButton:c}),(0,r.yl1)()}},{key:"switchButtonPosition",get:function(){return this.$$.ctx[1]},set:function(c){this.$$set({switchButtonPosition:c}),(0,r.yl1)()}},{key:"activedPluginId",get:function(){return this.$$.ctx[2]},set:function(c){this.$$set({activedPluginId:c}),(0,r.yl1)()}},{key:"pluginList",get:function(){return this.$$.ctx[3]},set:function(c){this.$$set({pluginList:c}),(0,r.yl1)()}},{key:"divContent",get:function(){return this.$$.ctx[4]},set:function(c){this.$$set({divContent:c}),(0,r.yl1)()}}]),p}(r.f_C),_t=Ot,pt=function(){function M(c,u){u===void 0&&(u="newPlugin"),this.isReady=!1,this.eventMap=new Map,this.exporter=void 0,this._id=void 0,this._name=void 0,this._vConsole=void 0,this.id=c,this.name=u,this.isReady=!1}var p=M.prototype;return p.on=function(c,u){return this.eventMap.set(c,u),this},p.onRemove=function(){this.unbindExporter()},p.trigger=function(c,u){var y=this.eventMap.get(c);if(typeof y=="function")y.call(this,u);else{var S="on"+c.charAt(0).toUpperCase()+c.slice(1);typeof this[S]=="function"&&this[S].call(this,u)}return this},p.bindExporter=function(){if(this._vConsole&&this.exporter){var c=this.id==="default"?"log":this.id;this._vConsole[c]=this.exporter}},p.unbindExporter=function(){var c=this.id==="default"?"log":this.id;this._vConsole&&this._vConsole[c]&&(this._vConsole[c]=void 0)},p.getUniqueID=function(c){return c===void 0&&(c=""),(0,e.QI)(c)},(0,s.Z)(M,[{key:"id",get:function(){return this._id},set:function(c){if(typeof c!="string")throw"[vConsole] Plugin ID must be a string.";if(!c)throw"[vConsole] Plugin ID cannot be empty.";this._id=c.toLowerCase()}},{key:"name",get:function(){return this._name},set:function(c){if(typeof c!="string")throw"[vConsole] Plugin name must be a string.";if(!c)throw"[vConsole] Plugin name cannot be empty.";this._name=c}},{key:"vConsole",get:function(){return this._vConsole||void 0},set:function(c){if(!c)throw"[vConsole] vConsole cannot be empty";this._vConsole=c,this.bindExporter()}}]),M}(),vt=function(M){function p(u,y,S,E){var P;return(P=M.call(this,u,y)||this).CompClass=void 0,P.compInstance=void 0,P.initialProps=void 0,P.CompClass=S,P.initialProps=E,P}(0,a.Z)(p,M);var c=p.prototype;return c.onReady=function(){this.isReady=!0},c.onRenderTab=function(u){var y=document.createElement("div"),S=this.compInstance=new this.CompClass({target:y,props:this.initialProps});u(y.firstElementChild,S.options)},c.onRemove=function(){M.prototype.onRemove&&M.prototype.onRemove.call(this),this.compInstance&&this.compInstance.$destroy()},p}(pt),cn=__webpack_require__(8665),Mn=__webpack_require__(9923),U=__webpack_require__(8702);function R(M){var p,c;return(p=new U.Z({props:{name:M[0]?"success":"copy"}})).$on("click",M[1]),{c:function(){(0,r.YCL)(p.$$.fragment)},m:function(u,y){(0,r.yef)(p,u,y),c=!0},p:function(u,y){var S={};1&y[0]&&(S.name=u[0]?"success":"copy"),p.$set(S)},i:function(u){c||((0,r.Ui)(p.$$.fragment,u),c=!0)},o:function(u){(0,r.etI)(p.$$.fragment,u),c=!1},d:function(u){(0,r.vpE)(p,u)}}}function ce(M,p,c){var u=p.content,y=u===void 0?"":u,S=p.handler,E=S===void 0?void 0:S,P={target:document.documentElement},k=!1;return M.$$set=function(j){"content"in j&&c(2,y=j.content),"handler"in j&&c(3,E=j.handler)},[k,function(j){(function(te,fe){var re=(fe===void 0?{}:fe).target,Me=re===void 0?document.body:re,_e=document.createElement("textarea"),Te=document.activeElement;_e.value=te,_e.setAttribute("readonly",""),_e.style.contain="strict",_e.style.position="absolute",_e.style.left="-9999px",_e.style.fontSize="12pt";var Ae=document.getSelection(),Ue=!1;Ae.rangeCount>0&&(Ue=Ae.getRangeAt(0)),Me.append(_e),_e.select(),_e.selectionStart=0,_e.selectionEnd=te.length;var Ne=!1;try{Ne=document.execCommand("copy")}catch{}_e.remove(),Ue&&(Ae.removeAllRanges(),Ae.addRange(Ue)),Te&&Te.focus()})(e.mf(E)?E(y)||"":e.Kn(y)||e.kJ(y)?e.hZ(y,{maxDepth:10,keyMaxLen:1e4,pretty:!1,standardJSON:!0}):y,P),c(0,k=!0),setTimeout(function(){c(0,k=!1)},600)},y,E]}var we=function(M){function p(c){var u;return u=M.call(this)||this,(0,r.S1n)((0,o.Z)(u),c,ce,R,r.N8,{content:2,handler:3}),u}return(0,a.Z)(p,M),(0,s.Z)(p,[{key:"content",get:function(){return this.$$.ctx[2]},set:function(c){this.$$set({content:c}),(0,r.yl1)()}},{key:"handler",get:function(){return this.$$.ctx[3]},set:function(c){this.$$set({handler:c}),(0,r.yl1)()}}]),p}(r.f_C),be=we,Re=__webpack_require__(845),Fe={};Re.Z&&Re.Z.locals&&(Fe.locals=Re.Z.locals);var Ie,pe=0,ze={};ze.styleTagTransform=C(),ze.setAttributes=x(),ze.insert=b().bind(null,"head"),ze.domAPI=_(),ze.insertStyleElement=T(),Fe.use=function(M){return ze.options=M||{},pe++||(Ie=h()(Re.Z,ze)),Fe},Fe.unuse=function(){pe>0&&!--pe&&(Ie(),Ie=null)};var ge=Fe;function Ee(M){var p,c,u,y=e.rE(M[1])+"";return{c:function(){p=(0,r.bGB)("i"),c=(0,r.fLW)(y),u=(0,r.fLW)(":"),(0,r.Ljt)(p,"class","vc-log-key"),(0,r.VHj)(p,"vc-log-key-symbol",M[2]==="symbol"),(0,r.VHj)(p,"vc-log-key-private",M[2]==="private")},m:function(S,E){(0,r.$Tr)(S,p,E),(0,r.R3I)(p,c),(0,r.$Tr)(S,u,E)},p:function(S,E){2&E&&y!==(y=e.rE(S[1])+"")&&(0,r.rTO)(c,y),4&E&&(0,r.VHj)(p,"vc-log-key-symbol",S[2]==="symbol"),4&E&&(0,r.VHj)(p,"vc-log-key-private",S[2]==="private")},d:function(S){S&&(0,r.ogt)(p),S&&(0,r.ogt)(u)}}}function Ce(M){var p,c,u,y,S=M[1]!==void 0&&Ee(M);return{c:function(){S&&S.c(),p=(0,r.DhX)(),c=(0,r.bGB)("i"),u=(0,r.fLW)(M[3]),(0,r.Ljt)(c,"class",y="vc-log-val vc-log-val-"+M[4]),(0,r.Ljt)(c,"style",M[0]),(0,r.VHj)(c,"vc-log-val-haskey",M[1]!==void 0)},m:function(E,P){S&&S.m(E,P),(0,r.$Tr)(E,p,P),(0,r.$Tr)(E,c,P),(0,r.R3I)(c,u)},p:function(E,P){var k=P[0];E[1]!==void 0?S?S.p(E,k):((S=Ee(E)).c(),S.m(p.parentNode,p)):S&&(S.d(1),S=null),8&k&&(0,r.rTO)(u,E[3]),16&k&&y!==(y="vc-log-val vc-log-val-"+E[4])&&(0,r.Ljt)(c,"class",y),1&k&&(0,r.Ljt)(c,"style",E[0]),18&k&&(0,r.VHj)(c,"vc-log-val-haskey",E[1]!==void 0)},i:r.ZTd,o:r.ZTd,d:function(E){S&&S.d(E),E&&(0,r.ogt)(p),E&&(0,r.ogt)(c)}}}function Pe(M,p,c){var u=p.origData,y=p.style,S=y===void 0?"":y,E=p.dataKey,P=E===void 0?void 0:E,k=p.keyType,j=k===void 0?"":k,te="",fe="",re=!1;return(0,l.H3)(function(){ge.use()}),(0,l.ev)(function(){ge.unuse()}),M.$$set=function(Me){"origData"in Me&&c(5,u=Me.origData),"style"in Me&&c(0,S=Me.style),"dataKey"in Me&&c(1,P=Me.dataKey),"keyType"in Me&&c(2,j=Me.keyType)},M.$$.update=function(){if(122&M.$$.dirty){c(6,re=P!==void 0);var Me=(0,cn.LH)(u,re);c(4,fe=Me.valueType),c(3,te=Me.text),re||fe!=="string"||c(3,te=te.replace(/\\n/g,`
`).replace(/\\t/g,"    "))}},[S,P,j,te,fe,u,re]}var $e=function(M){function p(c){var u;return u=M.call(this)||this,(0,r.S1n)((0,o.Z)(u),c,Pe,Ce,r.AqN,{origData:5,style:0,dataKey:1,keyType:2}),u}return(0,a.Z)(p,M),(0,s.Z)(p,[{key:"origData",get:function(){return this.$$.ctx[5]},set:function(c){this.$$set({origData:c}),(0,r.yl1)()}},{key:"style",get:function(){return this.$$.ctx[0]},set:function(c){this.$$set({style:c}),(0,r.yl1)()}},{key:"dataKey",get:function(){return this.$$.ctx[1]},set:function(c){this.$$set({dataKey:c}),(0,r.yl1)()}},{key:"keyType",get:function(){return this.$$.ctx[2]},set:function(c){this.$$set({keyType:c}),(0,r.yl1)()}}]),p}(r.f_C),mt=$e,en=__webpack_require__(1237),O={};en.Z&&en.Z.locals&&(O.locals=en.Z.locals);var X,Z=0,ae={};ae.styleTagTransform=C(),ae.setAttributes=x(),ae.insert=b().bind(null,"head"),ae.domAPI=_(),ae.insertStyleElement=T(),O.use=function(M){return ae.options=M||{},Z++||(X=h()(en.Z,ae)),O},O.unuse=function(){Z>0&&!--Z&&(X(),X=null)};var xe=O;function He(M,p,c){var u=M.slice();return u[19]=p[c],u[21]=c,u}function Ze(M,p,c){var u=M.slice();return u[19]=p[c],u}function nn(M,p,c){var u=M.slice();return u[19]=p[c],u[21]=c,u}function pn(M){for(var p,c,u,y,S,E,P,k=[],j=new Map,te=[],fe=new Map,re=[],Me=new Map,_e=M[7],Te=function(Wt){return Wt[19]},Ae=0;Ae<_e.length;Ae+=1){var Ue=nn(M,_e,Ae),Ne=Te(Ue);j.set(Ne,k[Ae]=xn(Ne,Ue))}for(var Xe=M[11]<M[7].length&&Cn(M),tn=M[9],bt=function(Wt){return Wt[19]},gn=0;gn<tn.length;gn+=1){var Sn=Ze(M,tn,gn),vn=bt(Sn);fe.set(vn,te[gn]=Vn(vn,Sn))}for(var zt=M[8],Zt=function(Wt){return Wt[19]},bn=0;bn<zt.length;bn+=1){var On=He(M,zt,bn),_n=Zt(On);Me.set(_n,re[bn]=$n(_n,On))}var sn=M[12]<M[8].length&&A(M),hn=M[10]&&ee(M);return{c:function(){p=(0,r.bGB)("div");for(var Wt=0;Wt<k.length;Wt+=1)k[Wt].c();c=(0,r.DhX)(),Xe&&Xe.c(),u=(0,r.DhX)();for(var Vt=0;Vt<te.length;Vt+=1)te[Vt].c();y=(0,r.DhX)();for(var on=0;on<re.length;on+=1)re[on].c();S=(0,r.DhX)(),sn&&sn.c(),E=(0,r.DhX)(),hn&&hn.c(),(0,r.Ljt)(p,"class","vc-log-tree-child")},m:function(Wt,Vt){(0,r.$Tr)(Wt,p,Vt);for(var on=0;on<k.length;on+=1)k[on].m(p,null);(0,r.R3I)(p,c),Xe&&Xe.m(p,null),(0,r.R3I)(p,u);for(var Ge=0;Ge<te.length;Ge+=1)te[Ge].m(p,null);(0,r.R3I)(p,y);for(var dn=0;dn<re.length;dn+=1)re[dn].m(p,null);(0,r.R3I)(p,S),sn&&sn.m(p,null),(0,r.R3I)(p,E),hn&&hn.m(p,null),P=!0},p:function(Wt,Vt){67721&Vt&&(_e=Wt[7],(0,r.dvw)(),k=(0,r.GQg)(k,Vt,Te,1,Wt,_e,j,p,r.cly,xn,c,nn),(0,r.gbL)()),Wt[11]<Wt[7].length?Xe?Xe.p(Wt,Vt):((Xe=Cn(Wt)).c(),Xe.m(p,u)):Xe&&(Xe.d(1),Xe=null),66057&Vt&&(tn=Wt[9],(0,r.dvw)(),te=(0,r.GQg)(te,Vt,bt,1,Wt,tn,fe,p,r.cly,Vn,y,Ze),(0,r.gbL)()),69897&Vt&&(zt=Wt[8],(0,r.dvw)(),re=(0,r.GQg)(re,Vt,Zt,1,Wt,zt,Me,p,r.cly,$n,S,He),(0,r.gbL)()),Wt[12]<Wt[8].length?sn?sn.p(Wt,Vt):((sn=A(Wt)).c(),sn.m(p,E)):sn&&(sn.d(1),sn=null),Wt[10]?hn?(hn.p(Wt,Vt),1024&Vt&&(0,r.Ui)(hn,1)):((hn=ee(Wt)).c(),(0,r.Ui)(hn,1),hn.m(p,null)):hn&&((0,r.dvw)(),(0,r.etI)(hn,1,1,function(){hn=null}),(0,r.gbL)())},i:function(Wt){if(!P){for(var Vt=0;Vt<_e.length;Vt+=1)(0,r.Ui)(k[Vt]);for(var on=0;on<tn.length;on+=1)(0,r.Ui)(te[on]);for(var Ge=0;Ge<zt.length;Ge+=1)(0,r.Ui)(re[Ge]);(0,r.Ui)(hn),P=!0}},o:function(Wt){for(var Vt=0;Vt<k.length;Vt+=1)(0,r.etI)(k[Vt]);for(var on=0;on<te.length;on+=1)(0,r.etI)(te[on]);for(var Ge=0;Ge<re.length;Ge+=1)(0,r.etI)(re[Ge]);(0,r.etI)(hn),P=!1},d:function(Wt){Wt&&(0,r.ogt)(p);for(var Vt=0;Vt<k.length;Vt+=1)k[Vt].d();Xe&&Xe.d();for(var on=0;on<te.length;on+=1)te[on].d();for(var Ge=0;Ge<re.length;Ge+=1)re[Ge].d();sn&&sn.d(),hn&&hn.d()}}}function Tt(M){var p,c;return p=new he({props:{origData:M[16](M[19]),dataKey:M[19],keyPath:M[3]+"."+M[19],toggle:M[0]}}),{c:function(){(0,r.YCL)(p.$$.fragment)},m:function(u,y){(0,r.yef)(p,u,y),c=!0},p:function(u,y){var S={};128&y&&(S.origData=u[16](u[19])),128&y&&(S.dataKey=u[19]),136&y&&(S.keyPath=u[3]+"."+u[19]),1&y&&(S.toggle=u[0]),p.$set(S)},i:function(u){c||((0,r.Ui)(p.$$.fragment,u),c=!0)},o:function(u){(0,r.etI)(p.$$.fragment,u),c=!1},d:function(u){(0,r.vpE)(p,u)}}}function xn(M,p){var c,u,y,S=p[21]<p[11]&&Tt(p);return{key:M,first:null,c:function(){c=(0,r.cSb)(),S&&S.c(),u=(0,r.cSb)(),this.first=c},m:function(E,P){(0,r.$Tr)(E,c,P),S&&S.m(E,P),(0,r.$Tr)(E,u,P),y=!0},p:function(E,P){(p=E)[21]<p[11]?S?(S.p(p,P),2176&P&&(0,r.Ui)(S,1)):((S=Tt(p)).c(),(0,r.Ui)(S,1),S.m(u.parentNode,u)):S&&((0,r.dvw)(),(0,r.etI)(S,1,1,function(){S=null}),(0,r.gbL)())},i:function(E){y||((0,r.Ui)(S),y=!0)},o:function(E){(0,r.etI)(S),y=!1},d:function(E){E&&(0,r.ogt)(c),S&&S.d(E),E&&(0,r.ogt)(u)}}}function Cn(M){var p,c,u,y,S=M[14](M[7].length-M[11])+"";return{c:function(){p=(0,r.bGB)("div"),c=(0,r.fLW)(S),(0,r.Ljt)(p,"class","vc-log-tree-loadmore")},m:function(E,P){(0,r.$Tr)(E,p,P),(0,r.R3I)(p,c),u||(y=(0,r.oLt)(p,"click",M[17]),u=!0)},p:function(E,P){2176&P&&S!==(S=E[14](E[7].length-E[11])+"")&&(0,r.rTO)(c,S)},d:function(E){E&&(0,r.ogt)(p),u=!1,y()}}}function Vn(M,p){var c,u,y;return u=new he({props:{origData:p[16](p[19]),dataKey:String(p[19]),keyType:"symbol",keyPath:p[3]+"["+String(p[19])+"]",toggle:p[0]}}),{key:M,first:null,c:function(){c=(0,r.cSb)(),(0,r.YCL)(u.$$.fragment),this.first=c},m:function(S,E){(0,r.$Tr)(S,c,E),(0,r.yef)(u,S,E),y=!0},p:function(S,E){p=S;var P={};512&E&&(P.origData=p[16](p[19])),512&E&&(P.dataKey=String(p[19])),520&E&&(P.keyPath=p[3]+"["+String(p[19])+"]"),1&E&&(P.toggle=p[0]),u.$set(P)},i:function(S){y||((0,r.Ui)(u.$$.fragment,S),y=!0)},o:function(S){(0,r.etI)(u.$$.fragment,S),y=!1},d:function(S){S&&(0,r.ogt)(c),(0,r.vpE)(u,S)}}}function kn(M){var p,c;return p=new he({props:{origData:M[16](M[19]),dataKey:M[19],keyType:"private",keyPath:M[3]+"."+M[19],toggle:M[0]}}),{c:function(){(0,r.YCL)(p.$$.fragment)},m:function(u,y){(0,r.yef)(p,u,y),c=!0},p:function(u,y){var S={};256&y&&(S.origData=u[16](u[19])),256&y&&(S.dataKey=u[19]),264&y&&(S.keyPath=u[3]+"."+u[19]),1&y&&(S.toggle=u[0]),p.$set(S)},i:function(u){c||((0,r.Ui)(p.$$.fragment,u),c=!0)},o:function(u){(0,r.etI)(p.$$.fragment,u),c=!1},d:function(u){(0,r.vpE)(p,u)}}}function $n(M,p){var c,u,y,S=p[21]<p[12]&&kn(p);return{key:M,first:null,c:function(){c=(0,r.cSb)(),S&&S.c(),u=(0,r.cSb)(),this.first=c},m:function(E,P){(0,r.$Tr)(E,c,P),S&&S.m(E,P),(0,r.$Tr)(E,u,P),y=!0},p:function(E,P){(p=E)[21]<p[12]?S?(S.p(p,P),4352&P&&(0,r.Ui)(S,1)):((S=kn(p)).c(),(0,r.Ui)(S,1),S.m(u.parentNode,u)):S&&((0,r.dvw)(),(0,r.etI)(S,1,1,function(){S=null}),(0,r.gbL)())},i:function(E){y||((0,r.Ui)(S),y=!0)},o:function(E){(0,r.etI)(S),y=!1},d:function(E){E&&(0,r.ogt)(c),S&&S.d(E),E&&(0,r.ogt)(u)}}}function A(M){var p,c,u,y,S=M[14](M[8].length-M[12])+"";return{c:function(){p=(0,r.bGB)("div"),c=(0,r.fLW)(S),(0,r.Ljt)(p,"class","vc-log-tree-loadmore")},m:function(E,P){(0,r.$Tr)(E,p,P),(0,r.R3I)(p,c),u||(y=(0,r.oLt)(p,"click",M[18]),u=!0)},p:function(E,P){4352&P&&S!==(S=E[14](E[8].length-E[12])+"")&&(0,r.rTO)(c,S)},d:function(E){E&&(0,r.ogt)(p),u=!1,y()}}}function ee(M){var p,c;return p=new he({props:{origData:M[16]("__proto__"),dataKey:"__proto__",keyType:"private",keyPath:M[3]+".__proto__",toggle:M[0]}}),{c:function(){(0,r.YCL)(p.$$.fragment)},m:function(u,y){(0,r.yef)(p,u,y),c=!0},p:function(u,y){var S={};8&y&&(S.keyPath=u[3]+".__proto__"),1&y&&(S.toggle=u[0]),p.$set(S)},i:function(u){c||((0,r.Ui)(p.$$.fragment,u),c=!0)},o:function(u){(0,r.etI)(p.$$.fragment,u),c=!1},d:function(u){(0,r.vpE)(p,u)}}}function ue(M){var p,c,u,y,S,E,P;u=new mt({props:{origData:M[1],dataKey:M[2],keyType:M[4]}});var k=M[6]&&M[5]&&pn(M);return{c:function(){p=(0,r.bGB)("div"),c=(0,r.bGB)("div"),(0,r.YCL)(u.$$.fragment),y=(0,r.DhX)(),k&&k.c(),(0,r.Ljt)(c,"class","vc-log-tree-node"),(0,r.Ljt)(p,"class","vc-log-tree"),(0,r.Ljt)(p,"data-keypath",M[3]),(0,r.VHj)(p,"vc-toggle",M[5]),(0,r.VHj)(p,"vc-is-tree",M[6])},m:function(j,te){(0,r.$Tr)(j,p,te),(0,r.R3I)(p,c),(0,r.yef)(u,c,null),(0,r.R3I)(p,y),k&&k.m(p,null),S=!0,E||(P=(0,r.oLt)(c,"click",(0,r.XET)(M[15])),E=!0)},p:function(j,te){var fe=te[0],re={};2&fe&&(re.origData=j[1]),4&fe&&(re.dataKey=j[2]),16&fe&&(re.keyType=j[4]),u.$set(re),j[6]&&j[5]?k?(k.p(j,fe),96&fe&&(0,r.Ui)(k,1)):((k=pn(j)).c(),(0,r.Ui)(k,1),k.m(p,null)):k&&((0,r.dvw)(),(0,r.etI)(k,1,1,function(){k=null}),(0,r.gbL)()),(!S||8&fe)&&(0,r.Ljt)(p,"data-keypath",j[3]),32&fe&&(0,r.VHj)(p,"vc-toggle",j[5]),64&fe&&(0,r.VHj)(p,"vc-is-tree",j[6])},i:function(j){S||((0,r.Ui)(u.$$.fragment,j),(0,r.Ui)(k),S=!0)},o:function(j){(0,r.etI)(u.$$.fragment,j),(0,r.etI)(k),S=!1},d:function(j){j&&(0,r.ogt)(p),(0,r.vpE)(u),k&&k.d(),E=!1,P()}}}function J(M,p,c){var u,y,S,E=p.origData,P=p.dataKey,k=P===void 0?void 0:P,j=p.keyPath,te=j===void 0?"":j,fe=p.keyType,re=fe===void 0?"":fe,Me=p.toggle,_e=Me===void 0?{}:Me,Te=!1,Ae=!1,Ue=!1,Ne=50,Xe=50;(0,l.H3)(function(){xe.use()}),(0,l.ev)(function(){xe.unuse()});var tn=function(bt){bt==="enum"?c(11,Ne+=50):bt==="nonEnum"&&c(12,Xe+=50)};return M.$$set=function(bt){"origData"in bt&&c(1,E=bt.origData),"dataKey"in bt&&c(2,k=bt.dataKey),"keyPath"in bt&&c(3,te=bt.keyPath),"keyType"in bt&&c(4,re=bt.keyType),"toggle"in bt&&c(0,_e=bt.toggle)},M.$$.update=function(){1003&M.$$.dirty&&(c(5,Te=_e[te]||!1),c(6,Ae=!(E instanceof cn.Tg)&&(e.kJ(E)||e.Kn(E))),Ae&&Te&&(c(7,u=u||e.qr(e.MH(E))),c(8,y=y||e.qr(e.QK(E))),c(9,S=S||e._D(E)),c(10,Ue=e.Kn(E)&&y.indexOf("__proto__")===-1)))},[_e,E,k,te,re,Te,Ae,u,y,S,Ue,Ne,Xe,tn,function(bt){return"(..."+bt+" Key"+(bt>1?"s":"")+" Left)"},function(){c(5,Te=!Te),c(0,_e[te]=Te,_e)},function(bt){try{return E[bt]}catch{return new cn.Tg}},function(){return tn("enum")},function(){return tn("nonEnum")}]}var he=function(M){function p(c){var u;return u=M.call(this)||this,(0,r.S1n)((0,o.Z)(u),c,J,ue,r.AqN,{origData:1,dataKey:2,keyPath:3,keyType:4,toggle:0}),u}return(0,a.Z)(p,M),(0,s.Z)(p,[{key:"origData",get:function(){return this.$$.ctx[1]},set:function(c){this.$$set({origData:c}),(0,r.yl1)()}},{key:"dataKey",get:function(){return this.$$.ctx[2]},set:function(c){this.$$set({dataKey:c}),(0,r.yl1)()}},{key:"keyPath",get:function(){return this.$$.ctx[3]},set:function(c){this.$$set({keyPath:c}),(0,r.yl1)()}},{key:"keyType",get:function(){return this.$$.ctx[4]},set:function(c){this.$$set({keyType:c}),(0,r.yl1)()}},{key:"toggle",get:function(){return this.$$.ctx[0]},set:function(c){this.$$set({toggle:c}),(0,r.yl1)()}}]),p}(r.f_C),Be=he,We=__webpack_require__(7147),qe={};We.Z&&We.Z.locals&&(qe.locals=We.Z.locals);var Ke,Pt=0,Ye={};Ye.styleTagTransform=C(),Ye.setAttributes=x(),Ye.insert=b().bind(null,"head"),Ye.domAPI=_(),Ye.insertStyleElement=T(),qe.use=function(M){return Ye.options=M||{},Pt++||(Ke=h()(We.Z,Ye)),qe},qe.unuse=function(){Pt>0&&!--Pt&&(Ke(),Ke=null)};var Qe=qe;function an(M,p,c){var u=M.slice();return u[9]=p[c],u[11]=c,u}function yn(M,p,c){var u=M.slice();return u[12]=p[c],u}function In(M){for(var p,c,u,y,S,E,P,k,j,te,fe,re,Me,_e=[],Te=new Map,Ae=M[0].groupLevel&&Bn(M),Ue=M[2]>0&&ut(),Ne=M[1]&&bi(M),Xe=M[0].repeated&&An(M),tn=M[0].data,bt=function(zt){return zt[11]},gn=0;gn<tn.length;gn+=1){var Sn=an(M,tn,gn),vn=bt(Sn);Te.set(vn,_e[gn]=ui(vn,Sn))}return j=new be({props:{handler:M[6]}}),{c:function(){p=(0,r.bGB)("div"),Ae&&Ae.c(),c=(0,r.DhX)(),Ue&&Ue.c(),u=(0,r.DhX)(),Ne&&Ne.c(),y=(0,r.DhX)(),Xe&&Xe.c(),S=(0,r.DhX)(),E=(0,r.bGB)("div");for(var zt=0;zt<_e.length;zt+=1)_e[zt].c();P=(0,r.DhX)(),k=(0,r.bGB)("div"),(0,r.YCL)(j.$$.fragment),(0,r.Ljt)(E,"class","vc-log-content"),(0,r.Ljt)(k,"class","vc-logrow-icon"),(0,r.Ljt)(p,"class",te="vc-log-row vc-log-"+M[0].type),(0,r.VHj)(p,"vc-log-input",M[0].cmdType==="input"),(0,r.VHj)(p,"vc-log-output",M[0].cmdType==="output"),(0,r.VHj)(p,"vc-log-group",M[2]>0),(0,r.VHj)(p,"vc-toggle",M[2]===1)},m:function(zt,Zt){(0,r.$Tr)(zt,p,Zt),Ae&&Ae.m(p,null),(0,r.R3I)(p,c),Ue&&Ue.m(p,null),(0,r.R3I)(p,u),Ne&&Ne.m(p,null),(0,r.R3I)(p,y),Xe&&Xe.m(p,null),(0,r.R3I)(p,S),(0,r.R3I)(p,E);for(var bn=0;bn<_e.length;bn+=1)_e[bn].m(E,null);(0,r.R3I)(p,P),(0,r.R3I)(p,k),(0,r.yef)(j,k,null),fe=!0,re||(Me=(0,r.oLt)(p,"click",M[5]),re=!0)},p:function(zt,Zt){zt[0].groupLevel?Ae?Ae.p(zt,Zt):((Ae=Bn(zt)).c(),Ae.m(p,c)):Ae&&(Ae.d(1),Ae=null),zt[2]>0?Ue||((Ue=ut()).c(),Ue.m(p,u)):Ue&&(Ue.d(1),Ue=null),zt[1]?Ne?Ne.p(zt,Zt):((Ne=bi(zt)).c(),Ne.m(p,y)):Ne&&(Ne.d(1),Ne=null),zt[0].repeated?Xe?Xe.p(zt,Zt):((Xe=An(zt)).c(),Xe.m(p,S)):Xe&&(Xe.d(1),Xe=null),17&Zt&&(tn=zt[0].data,(0,r.dvw)(),_e=(0,r.GQg)(_e,Zt,bt,1,zt,tn,Te,E,r.cly,ui,null,an),(0,r.gbL)()),(!fe||1&Zt&&te!==(te="vc-log-row vc-log-"+zt[0].type))&&(0,r.Ljt)(p,"class",te),1&Zt&&(0,r.VHj)(p,"vc-log-input",zt[0].cmdType==="input"),1&Zt&&(0,r.VHj)(p,"vc-log-output",zt[0].cmdType==="output"),5&Zt&&(0,r.VHj)(p,"vc-log-group",zt[2]>0),5&Zt&&(0,r.VHj)(p,"vc-toggle",zt[2]===1)},i:function(zt){if(!fe){for(var Zt=0;Zt<tn.length;Zt+=1)(0,r.Ui)(_e[Zt]);(0,r.Ui)(j.$$.fragment,zt),fe=!0}},o:function(zt){for(var Zt=0;Zt<_e.length;Zt+=1)(0,r.etI)(_e[Zt]);(0,r.etI)(j.$$.fragment,zt),fe=!1},d:function(zt){zt&&(0,r.ogt)(p),Ae&&Ae.d(),Ue&&Ue.d(),Ne&&Ne.d(),Xe&&Xe.d();for(var Zt=0;Zt<_e.length;Zt+=1)_e[Zt].d();(0,r.vpE)(j),re=!1,Me()}}}function Bn(M){for(var p,c=new Array(M[0].groupLevel),u=[],y=0;y<c.length;y+=1)u[y]=un(yn(M,c,y));return{c:function(){for(var S=0;S<u.length;S+=1)u[S].c();p=(0,r.cSb)()},m:function(S,E){for(var P=0;P<u.length;P+=1)u[P].m(S,E);(0,r.$Tr)(S,p,E)},p:function(S,E){if(1&E){var P;for(c=new Array(S[0].groupLevel),P=0;P<c.length;P+=1){var k=yn(S,c,P);u[P]?u[P].p(k,E):(u[P]=un(),u[P].c(),u[P].m(p.parentNode,p))}for(;P<u.length;P+=1)u[P].d(1);u.length=c.length}},d:function(S){(0,r.RMB)(u,S),S&&(0,r.ogt)(p)}}}function un(M){var p;return{c:function(){p=(0,r.bGB)("i"),(0,r.Ljt)(p,"class","vc-log-padding")},m:function(c,u){(0,r.$Tr)(c,p,u)},p:r.ZTd,d:function(c){c&&(0,r.ogt)(p)}}}function ut(M){var p;return{c:function(){p=(0,r.bGB)("div"),(0,r.Ljt)(p,"class","vc-log-group-toggle")},m:function(c,u){(0,r.$Tr)(c,p,u)},d:function(c){c&&(0,r.ogt)(p)}}}function bi(M){var p,c;return{c:function(){p=(0,r.bGB)("div"),c=(0,r.fLW)(M[3]),(0,r.Ljt)(p,"class","vc-log-time")},m:function(u,y){(0,r.$Tr)(u,p,y),(0,r.R3I)(p,c)},p:function(u,y){8&y&&(0,r.rTO)(c,u[3])},d:function(u){u&&(0,r.ogt)(p)}}}function An(M){var p,c,u,y=M[0].repeated+"";return{c:function(){p=(0,r.bGB)("div"),c=(0,r.bGB)("i"),u=(0,r.fLW)(y),(0,r.Ljt)(p,"class","vc-log-repeat")},m:function(S,E){(0,r.$Tr)(S,p,E),(0,r.R3I)(p,c),(0,r.R3I)(c,u)},p:function(S,E){1&E&&y!==(y=S[0].repeated+"")&&(0,r.rTO)(u,y)},d:function(S){S&&(0,r.ogt)(p)}}}function qn(M){var p,c;return p=new mt({props:{origData:M[9].origData,style:M[9].style}}),{c:function(){(0,r.YCL)(p.$$.fragment)},m:function(u,y){(0,r.yef)(p,u,y),c=!0},p:function(u,y){var S={};1&y&&(S.origData=u[9].origData),1&y&&(S.style=u[9].style),p.$set(S)},i:function(u){c||((0,r.Ui)(p.$$.fragment,u),c=!0)},o:function(u){(0,r.etI)(p.$$.fragment,u),c=!1},d:function(u){(0,r.vpE)(p,u)}}}function ki(M){var p,c;return p=new Be({props:{origData:M[9].origData,keyPath:String(M[11]),toggle:M[0].toggle}}),{c:function(){(0,r.YCL)(p.$$.fragment)},m:function(u,y){(0,r.yef)(p,u,y),c=!0},p:function(u,y){var S={};1&y&&(S.origData=u[9].origData),1&y&&(S.keyPath=String(u[11])),1&y&&(S.toggle=u[0].toggle),p.$set(S)},i:function(u){c||((0,r.Ui)(p.$$.fragment,u),c=!0)},o:function(u){(0,r.etI)(p.$$.fragment,u),c=!1},d:function(u){(0,r.vpE)(p,u)}}}function ui(M,p){var c,u,y,S,E,P,k=[ki,qn],j=[];function te(fe,re){return 1&re&&(u=null),u==null&&(u=!!fe[4](fe[9].origData)),u?0:1}return y=te(p,-1),S=j[y]=k[y](p),{key:M,first:null,c:function(){c=(0,r.cSb)(),S.c(),E=(0,r.cSb)(),this.first=c},m:function(fe,re){(0,r.$Tr)(fe,c,re),j[y].m(fe,re),(0,r.$Tr)(fe,E,re),P=!0},p:function(fe,re){var Me=y;(y=te(p=fe,re))===Me?j[y].p(p,re):((0,r.dvw)(),(0,r.etI)(j[Me],1,1,function(){j[Me]=null}),(0,r.gbL)(),(S=j[y])?S.p(p,re):(S=j[y]=k[y](p)).c(),(0,r.Ui)(S,1),S.m(E.parentNode,E))},i:function(fe){P||((0,r.Ui)(S),P=!0)},o:function(fe){(0,r.etI)(S),P=!1},d:function(fe){fe&&(0,r.ogt)(c),j[y].d(fe),fe&&(0,r.ogt)(E)}}}function Ri(M){var p,c,u=M[0]&&In(M);return{c:function(){u&&u.c(),p=(0,r.cSb)()},m:function(y,S){u&&u.m(y,S),(0,r.$Tr)(y,p,S),c=!0},p:function(y,S){var E=S[0];y[0]?u?(u.p(y,E),1&E&&(0,r.Ui)(u,1)):((u=In(y)).c(),(0,r.Ui)(u,1),u.m(p.parentNode,p)):u&&((0,r.dvw)(),(0,r.etI)(u,1,1,function(){u=null}),(0,r.gbL)())},i:function(y){c||((0,r.Ui)(u),c=!0)},o:function(y){(0,r.etI)(u),c=!1},d:function(y){u&&u.d(y),y&&(0,r.ogt)(p)}}}function wn(M,p,c){var u=p.log,y=p.showTimestamps,S=y!==void 0&&y,E=p.groupHeader,P=E===void 0?0:E,k=(0,l.x)(),j="",te=function(fe,re){var Me="000"+fe;return Me.substring(Me.length-re)};return(0,l.H3)(function(){Qe.use()}),(0,l.ev)(function(){Qe.unuse()}),M.$$set=function(fe){"log"in fe&&c(0,u=fe.log),"showTimestamps"in fe&&c(1,S=fe.showTimestamps),"groupHeader"in fe&&c(2,P=fe.groupHeader)},M.$$.update=function(){if(3&M.$$.dirty&&S){var fe=new Date(u.date);c(3,j=te(fe.getHours(),2)+":"+te(fe.getMinutes(),2)+":"+te(fe.getSeconds(),2)+":"+te(fe.getMilliseconds(),3))}},[u,S,P,j,function(fe){return!(fe instanceof cn.Tg)&&(e.kJ(fe)||e.Kn(fe))},function(){P>0&&k("groupCollapsed",{groupLabel:u.groupLabel,groupHeader:P===1?2:1,isGroupCollapsed:P===1})},function(){var fe=[];try{for(var re=0;re<u.data.length;re++)e.HD(u.data[re].origData)||e.hj(u.data[re].origData)?fe.push(u.data[re].origData):fe.push(e.hZ(u.data[re].origData,{maxDepth:10,keyMaxLen:1e4,pretty:!1,standardJSON:!0}))}catch{}return fe.join(" ")}]}var Kn=function(M){function p(c){var u;return u=M.call(this)||this,(0,r.S1n)((0,o.Z)(u),c,wn,Ri,r.AqN,{log:0,showTimestamps:1,groupHeader:2}),u}return(0,a.Z)(p,M),(0,s.Z)(p,[{key:"log",get:function(){return this.$$.ctx[0]},set:function(c){this.$$set({log:c}),(0,r.yl1)()}},{key:"showTimestamps",get:function(){return this.$$.ctx[1]},set:function(c){this.$$set({showTimestamps:c}),(0,r.yl1)()}},{key:"groupHeader",get:function(){return this.$$.ctx[2]},set:function(c){this.$$set({groupHeader:c}),(0,r.yl1)()}}]),p}(r.f_C),Ii=Kn,Ln=__webpack_require__(3903),pi=__webpack_require__(3327),Ai={};pi.Z&&pi.Z.locals&&(Ai.locals=pi.Z.locals);var Oi,Sr=0,Vi={};Vi.styleTagTransform=C(),Vi.setAttributes=x(),Vi.insert=b().bind(null,"head"),Vi.domAPI=_(),Vi.insertStyleElement=T(),Ai.use=function(M){return Vi.options=M||{},Sr++||(Oi=h()(pi.Z,Vi)),Ai},Ai.unuse=function(){Sr>0&&!--Sr&&(Oi(),Oi=null)};var zr=Ai,ka=__webpack_require__(4264),Rn=__webpack_require__.n(ka);function za(M){var p,c,u=M[1]+"px",y=M[5].default,S=(0,r.nuO)(y,M,M[4],null);return{c:function(){p=(0,r.bGB)("div"),S&&S.c(),(0,r.Ljt)(p,"class","vc-scroller-item"),(0,r.czc)(p,"display",M[0]?"block":"none",!1),(0,r.czc)(p,"top",u,!1)},m:function(E,P){(0,r.$Tr)(E,p,P),S&&S.m(p,null),M[6](p),c=!0},p:function(E,P){var k=P[0];S&&S.p&&(!c||16&k)&&(0,r.kmG)(S,y,E,E[4],c?(0,r.u2N)(y,E[4],k,null):(0,r.VOJ)(E[4]),null),1&k&&(0,r.czc)(p,"display",E[0]?"block":"none",!1),2&k&&u!==(u=E[1]+"px")&&(0,r.czc)(p,"top",u,!1)},i:function(E){c||((0,r.Ui)(S,E),c=!0)},o:function(E){(0,r.etI)(S,E),c=!1},d:function(E){E&&(0,r.ogt)(p),S&&S.d(E),M[6](null)}}}function Va(M,p,c){var u,y=p.$$slots,S=y===void 0?{}:y,E=p.$$scope,P=p.show,k=p.top,j=p.onResize,te=j===void 0?function(){}:j,fe=null;return(0,l.H3)(function(){P&&te(u.getBoundingClientRect().height),(fe=new ResizeObserver(function(re){var Me=re[0];P&&te(Me.contentRect.height)})).observe(u)}),(0,l.ev)(function(){fe.disconnect()}),M.$$set=function(re){"show"in re&&c(0,P=re.show),"top"in re&&c(1,k=re.top),"onResize"in re&&c(3,te=re.onResize),"$$scope"in re&&c(4,E=re.$$scope)},[P,k,u,te,E,S,function(re){r.VnY[re?"unshift":"push"](function(){c(2,u=re)})}]}var Ha=function(M){function p(c){var u;return u=M.call(this)||this,(0,r.S1n)((0,o.Z)(u),c,Va,za,r.N8,{show:0,top:1,onResize:3}),u}return(0,a.Z)(p,M),(0,s.Z)(p,[{key:"show",get:function(){return this.$$.ctx[0]},set:function(c){this.$$set({show:c}),(0,r.yl1)()}},{key:"top",get:function(){return this.$$.ctx[1]},set:function(c){this.$$set({top:c}),(0,r.yl1)()}},{key:"onResize",get:function(){return this.$$.ctx[3]},set:function(c){this.$$set({onResize:c}),(0,r.yl1)()}}]),p}(r.f_C),Wa=Ha,$a=function(){function M(){this._x=0,this._endX=0,this._v=0,this._startTime=0,this._endTime=0}var p=M.prototype;return p.set=function(c,u,y,S){this._x=c,this._endX=u,this._v=(u-c)/y,this._startTime=S||Date.now(),this._endTime=this._startTime+y},p.x=function(c){if(this.done(c))return this._endX;var u=c-this._startTime;return this._x+this._v*u},p.dx=function(c){return this.done(c)?0:this._v},p.done=function(c){return c>=this._endTime},M}(),ja=function(){function M(c){this._drag=void 0,this._dragLog=void 0,this._x=0,this._v=0,this._startTime=0,this._drag=c,this._dragLog=Math.log(c)}var p=M.prototype;return p.set=function(c,u,y){this._x=c,this._v=u,this._startTime=y||Date.now()},p.x=function(c){var u=(c-this._startTime)/1e3;return this._x+this._v*Math.pow(this._drag,u)/this._dragLog-this._v/this._dragLog},p.dx=function(c){var u=(c-this._startTime)/1e3;return this._v*Math.pow(this._drag,u)},p.done=function(c){return Math.abs(this.dx(c))<3},M}(),Vr=function(M,p){return M>p-.1&&M<p+.1},Hr=function(M){return Vr(M,0)},Xa=function(){function M(c,u,y){this._solver=void 0,this._solution=void 0,this._endPosition=void 0,this._startTime=void 0,this._solver=function(S,E,P){var k=P,j=S,te=E,fe=k*k-4*j*te;if(fe==0){var re=-k/(2*j);return function(Ue,Ne){var Xe=Ue,tn=Ne/(re*Ue);return{x:function(bt){return(Xe+tn*bt)*Math.pow(Math.E,re*bt)},dx:function(bt){return(re*(Xe+tn*bt)+tn)*Math.pow(Math.E,re*bt)}}}}if(fe>0){var Me=(-k-Math.sqrt(fe))/(2*j),_e=(-k+Math.sqrt(fe))/(2*j);return function(Ue,Ne){var Xe=(Ne-Me*Ue)/(_e-Me),tn=Ue-Xe;return{x:function(bt){return tn*Math.pow(Math.E,Me*bt)+Xe*Math.pow(Math.E,_e*bt)},dx:function(bt){return tn*Me*Math.pow(Math.E,Me*bt)+Xe*_e*Math.pow(Math.E,_e*bt)}}}}var Te=Math.sqrt(4*j*te-k*k)/(2*j),Ae=-k/2*j;return function(Ue,Ne){var Xe=Ue,tn=(Ne-Ae*Ue)/Te;return{x:function(bt){return Math.pow(Math.E,Ae*bt)*(Xe*Math.cos(Te*bt)+tn*Math.sin(Te*bt))},dx:function(bt){var gn=Math.pow(Math.E,Ae*bt),Sn=Math.cos(Te*bt),vn=Math.sin(Te*bt);return gn*(tn*Te*Sn-Xe*Te*vn)+Ae*gn*(tn*vn+Xe*Sn)}}}}(c,u,y),this._solution=null,this._endPosition=0,this._startTime=0}var p=M.prototype;return p.x=function(c){if(!this._solution)return 0;var u=(c-this._startTime)/1e3;return this._endPosition+this._solution.x(u)},p.dx=function(c){if(!this._solution)return 0;var u=(c-this._startTime)/1e3;return this._solution.dx(u)},p.set=function(c,u,y,S){S||(S=Date.now()),this._endPosition=c,u==c&&Hr(y)||(this._solution=this._solver(u-c,y),this._startTime=S)},p.done=function(c){return c||(c=Date.now()),Vr(this.x(c),this._endPosition)&&Hr(this.dx(c))},M}(),qa=function(){function M(c,u){this._enableSpring=u,this._getExtend=void 0,this._friction=new ja(.05),this._spring=new Xa(1,90,20),this._toEdge=!1,this._getExtend=c}var p=M.prototype;return p.set=function(c,u,y){if(y===void 0&&(y=Date.now()),this._friction.set(c,u,y),c>0&&u>=0)this._toEdge=!0,this._enableSpring&&this._spring.set(0,c,u,y);else{var S=this._getExtend();c<-S&&u<=0?(this._toEdge=!0,this._enableSpring&&this._spring.set(-S,c,u,y)):this._toEdge=!1}},p.x=function(c){if(this._enableSpring&&this._toEdge)return this._spring.x(c);var u=this._friction.x(c),y=this._friction.dx(c);if(u>0&&y>=0){if(this._toEdge=!0,!this._enableSpring)return 0;this._spring.set(0,u,y,c)}else{var S=this._getExtend();if(u<-S&&y<=0){if(this._toEdge=!0,!this._enableSpring)return-S;this._spring.set(-S,u,y,c)}}return u},p.dx=function(c){return this._toEdge?this._enableSpring?this._spring.dx(c):0:this._friction.dx(c)},p.done=function(c){return this._toEdge?!this._enableSpring||this._spring.done(c):this._friction.done(c)},M}();function wr(M,p){var c,u;return function y(){if(!u){var S=Date.now();p(S),M.done(S)||(c=requestAnimationFrame(y))}}(),{cancel:function(){cancelAnimationFrame(c),u=!0}}}var Ka=function(){function M(c,u){this._updatePosition=u,this._scrollModel=void 0,this._linearModel=void 0,this._startPosition=0,this._position=0,this._animate=null,this._getExtent=void 0,this._getExtent=c,this._scrollModel=new qa(c,!1),this._linearModel=new $a}var p=M.prototype;return p.onTouchStart=function(){var c=this._position;if(c>0)c*=0;else{var u=this._getExtent();c<-u&&(c=0*(c+u)-u)}this._startPosition=this._position=c,this._animate&&(this._animate.cancel(),this._animate=null),this._updatePosition(-c)},p.onTouchMove=function(c,u){var y=u+this._startPosition;if(y>0)y*=0;else{var S=this._getExtent();y<-S&&(y=0*(y+S)-S)}this._position=y,this._updatePosition(-y)},p.onTouchEnd=function(c,u,y,S){var E=this,P=u+this._startPosition;if(P>0)P*=0;else{var k=this._getExtent();P<-k&&(P=0*(P+k)-k)}if(this._position=P,this._updatePosition(-P),!(Math.abs(u)<=.1&&Math.abs(S)<=.1)){var j=this._scrollModel;j.set(P,S),this._animate=wr(j,function(te){var fe=E._position=j.x(te);E._updatePosition(-fe)})}},p.onTouchCancel=function(){var c=this,u=this._position;if(u>0)u*=0;else{var y=this._getExtent();u<-y&&(u=0*(u+y)-y)}this._position=u;var S=this._scrollModel;S.set(u,0),this._animate=wr(S,function(E){var P=c._position=S.x(E);c._updatePosition(-P)})},p.onWheel=function(c,u){var y=this._position-u;if(this._animate&&(this._animate.cancel(),this._animate=null),y>0)y=0;else{var S=this._getExtent();y<-S&&(y=-S)}this._position=y,this._updatePosition(-y)},p.getPosition=function(){return-this._position},p.updatePosition=function(c){var u=-c-this._position;this._startPosition+=u,this._position+=u;var y=this._position;this._updatePosition(-y);var S=this._scrollModel,E=Date.now();if(!S.done(E)){var P=S.dx(E);S.set(y,P,E)}},p.scrollTo=function(c,u){var y=this;if(this._animate&&(this._animate.cancel(),this._animate=null),u>0){var S=this._linearModel;S.set(this._position,-c,u),this._animate=wr(this._linearModel,function(E){var P=y._position=S.x(E);y._updatePosition(-P)})}else this._updatePosition(c)},M}();function Ya(M,p){var c=typeof Symbol<"u"&&M[Symbol.iterator]||M["@@iterator"];if(c)return(c=c.call(M)).next.bind(c);if(Array.isArray(M)||(c=function(y,S){if(y){if(typeof y=="string")return Wr(y,S);var E=Object.prototype.toString.call(y).slice(8,-1);if(E==="Object"&&y.constructor&&(E=y.constructor.name),E==="Map"||E==="Set")return Array.from(y);if(E==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(E))return Wr(y,S)}}(M))||p&&M&&typeof M.length=="number"){c&&(M=c);var u=0;return function(){return u>=M.length?{done:!0}:{done:!1,value:M[u++]}}}throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function Wr(M,p){(p==null||p>M.length)&&(p=M.length);for(var c=0,u=new Array(p);c<p;c++)u[c]=M[c];return u}var Za=function(M){var p=null,c=!1,u=function y(){c=!1,M(),p=requestAnimationFrame(function(){p=null,c&&y()})};return{trigger:function(){p===null?u():c=!0},cancel:function(){p&&(cancelAnimationFrame(p),c=!1,p=null)}}},Ja=function(){function M(p){var c=this;this._handler=p,this._touchId=null,this._startX=0,this._startY=0,this._historyX=[],this._historyY=[],this._historyTime=[],this._wheelDeltaX=0,this._wheelDeltaY=0,this._onTouchMove=function(){var u=c._historyX[c._historyX.length-1],y=c._historyY[c._historyY.length-1];c._handler.onTouchMove(u,y)},this._onWheel=Za(function(){var u=c._wheelDeltaX,y=c._wheelDeltaY;c._wheelDeltaX=0,c._wheelDeltaY=0,c._handler.onWheel(u,y)}),this.handleTouchStart=function(u){var y;if(((y=u.target.dataset)==null?void 0:y.scrollable)!=="1"){u.preventDefault();var S=u.touches[0];c._touchId=S.identifier,c._startX=S.pageX,c._startY=S.pageY,c._historyX=[0],c._historyY=[0],c._historyTime=[Date.now()],c._handler.onTouchStart()}},this.handleTouchMove=function(u){var y;if(((y=u.target.dataset)==null?void 0:y.scrollable)!=="1"){u.preventDefault();var S=c._getTouchDelta(u);S!==null&&(c._historyX.push(S.x),c._historyY.push(S.y),c._historyTime.push(Date.now()),c._onTouchMove())}},this.handleTouchEnd=function(u){var y;if(((y=u.target.dataset)==null?void 0:y.scrollable)!=="1"){u.preventDefault();var S=c._getTouchDelta(u);if(S!==null){for(var E=0,P=0,k=Date.now(),j=S.y,te=S.x,fe=c._historyTime,re=fe.length-1;re>0;re-=1){var Me=k-fe[re];if(Me>30){E=1e3*(te-c._historyX[re])/Me,P=1e3*(j-c._historyY[re])/Me;break}}c._touchId=null,c._handler.onTouchEnd(S.x,S.y,E,P)}}},this.handleTouchCancel=function(u){var y;((y=u.target.dataset)==null?void 0:y.scrollable)!=="1"&&(u.preventDefault(),c._getTouchDelta(u)!==null&&(c._touchId=null,c._handler.onTouchCancel()))},this.handleWheel=function(u){var y;((y=u.target.dataset)==null?void 0:y.scrollable)!=="1"&&(u.preventDefault(),c._wheelDeltaX+=u.deltaX,c._wheelDeltaY+=u.deltaY,c._onWheel.trigger())}}return M.prototype._getTouchDelta=function(p){if(this._touchId===null)return null;for(var c,u=Ya(p.changedTouches);!(c=u()).done;){var y=c.value;if(y.identifier===this._touchId)return{x:y.pageX-this._startX,y:y.pageY-this._startY}}return null},M}(),or=__webpack_require__(1142),Zi={};or.Z&&or.Z.locals&&(Zi.locals=or.Z.locals);var Er,Tr=0,Hi={};Hi.styleTagTransform=C(),Hi.setAttributes=x(),Hi.insert=b().bind(null,"head"),Hi.domAPI=_(),Hi.insertStyleElement=T(),Zi.use=function(M){return Hi.options=M||{},Tr++||(Er=h()(or.Z,Hi)),Zi},Zi.unuse=function(){Tr>0&&!--Tr&&(Er(),Er=null)};var $r=Zi,es=function(){var M=[],p=[],c=0,u=0,y=0,S=0,E=0;return function(P,k,j){if(y===P&&S===k&&E===j)return M;var te=p.length,fe=k<=u?Math.max(0,Math.min(k,Math.max(c,Math.min(u-1,j-te)))):k,re=c<=j?Math.max(j,Math.min(P,Math.max(c+1,Math.min(u,fe+te)))):j;if(te===0||re-fe<te){for(var Me=M.length=p.length=j-k,_e=0;_e<Me;_e+=1)p[_e]=_e,M[_e]={key:_e,index:_e+k,show:!0};return c=k,u=j,y=P,S=k,E=j,M}var Te=0,Ae=0,Ue=0,Ne=0;u<fe||re<c?(Ue=fe,Ne=fe+te):c<fe?(Ae=fe-c,Ue=fe,Ne=fe+te):re<u?(Ae=te-(u-re),Ue=re-te,Ne=re):fe<=c&&u<=re&&(Ue=c,Ne=u);for(var Xe=fe;Xe<k;Xe+=1,Te+=1){var tn=p[(Ae+Te)%te],bt=M[Xe-fe];bt.key=tn,bt.index=Xe,bt.show=!1}for(var gn=k,Sn=0;gn<j;gn+=1){var vn=void 0;Ue<=gn&&gn<Ne?(vn=p[(Ae+Te)%te],Te+=1):(vn=te+Sn,Sn+=1);var zt=gn-fe;if(zt<M.length){var Zt=M[zt];Zt.key=vn,Zt.index=gn,Zt.show=!0}else M.push({key:vn,index:gn,show:!0})}for(var bn=j;bn<re;bn+=1,Te+=1){var On=p[(Ae+Te)%te],_n=M[bn-fe];_n.key=On,_n.index=bn,_n.show=!1}for(var sn=0;sn<M.length;sn+=1)p[sn]=M[sn].key;return M.sort(function(hn,Wt){return hn.key-Wt.key}),c=fe,u=re,y=P,S=k,E=j,M}},ts=r.lig.Map,ns=function(M){return{}},jr=function(M){return{}},is=function(M){return{}},Xr=function(M){return{}};function qr(M,p,c){var u=M.slice();return u[48]=p[c],u[50]=c,u}var rs=function(M){return{item:1025&M[0]}},Kr=function(M){return{item:M[0][M[48].index]}},os=function(M){return{}},Yr=function(M){return{}};function Zr(M){var p,c,u=M[22].header,y=(0,r.nuO)(u,M,M[29],Yr);return{c:function(){p=(0,r.bGB)("div"),y&&y.c(),(0,r.Ljt)(p,"class","vc-scroller-header")},m:function(S,E){(0,r.$Tr)(S,p,E),y&&y.m(p,null),M[23](p),c=!0},p:function(S,E){y&&y.p&&(!c||536870912&E[0])&&(0,r.kmG)(y,u,S,S[29],c?(0,r.u2N)(u,S[29],E,os):(0,r.VOJ)(S[29]),Yr)},i:function(S){c||((0,r.Ui)(y,S),c=!0)},o:function(S){(0,r.etI)(y,S),c=!1},d:function(S){S&&(0,r.ogt)(p),y&&y.d(S),M[23](null)}}}function as(M){var p,c=M[22].empty,u=(0,r.nuO)(c,M,M[29],Xr);return{c:function(){u&&u.c()},m:function(y,S){u&&u.m(y,S),p=!0},p:function(y,S){u&&u.p&&(!p||536870912&S[0])&&(0,r.kmG)(u,c,y,y[29],p?(0,r.u2N)(c,y[29],S,is):(0,r.VOJ)(y[29]),Xr)},i:function(y){p||((0,r.Ui)(u,y),p=!0)},o:function(y){(0,r.etI)(u,y),p=!1},d:function(y){u&&u.d(y)}}}function ss(M){for(var p,c,u=[],y=new ts,S=M[10],E=function(te){return te[48].key},P=0;P<S.length;P+=1){var k=qr(M,S,P),j=E(k);y.set(j,u[P]=Qr(j,k))}return{c:function(){for(var te=0;te<u.length;te+=1)u[te].c();p=(0,r.cSb)()},m:function(te,fe){for(var re=0;re<u.length;re+=1)u[re].m(te,fe);(0,r.$Tr)(te,p,fe),c=!0},p:function(te,fe){536874497&fe[0]&&(S=te[10],(0,r.dvw)(),u=(0,r.GQg)(u,fe,E,1,te,S,y,p.parentNode,r.cly,Qr,p,qr),(0,r.gbL)())},i:function(te){if(!c){for(var fe=0;fe<S.length;fe+=1)(0,r.Ui)(u[fe]);c=!0}},o:function(te){for(var fe=0;fe<u.length;fe+=1)(0,r.etI)(u[fe]);c=!1},d:function(te){for(var fe=0;fe<u.length;fe+=1)u[fe].d(te);te&&(0,r.ogt)(p)}}}function ls(M){var p,c,u=M[22].item,y=(0,r.nuO)(u,M,M[29],Kr),S=y||function(E){var P;return{c:function(){P=(0,r.fLW)("Missing template")},m:function(k,j){(0,r.$Tr)(k,P,j)},d:function(k){k&&(0,r.ogt)(P)}}}();return{c:function(){S&&S.c(),p=(0,r.DhX)()},m:function(E,P){S&&S.m(E,P),(0,r.$Tr)(E,p,P),c=!0},p:function(E,P){y&&y.p&&(!c||536871937&P[0])&&(0,r.kmG)(y,u,E,E[29],c?(0,r.u2N)(u,E[29],P,rs):(0,r.VOJ)(E[29]),Kr)},i:function(E){c||((0,r.Ui)(S,E),c=!0)},o:function(E){(0,r.etI)(S,E),c=!1},d:function(E){S&&S.d(E),E&&(0,r.ogt)(p)}}}function Qr(M,p){var c,u,y;function S(){for(var E,P=arguments.length,k=new Array(P),j=0;j<P;j++)k[j]=arguments[j];return(E=p)[24].apply(E,[p[48]].concat(k))}return u=new Wa({props:{show:p[48].show,top:p[9][p[48].index],onResize:S,$$slots:{default:[ls]},$$scope:{ctx:p}}}),{key:M,first:null,c:function(){c=(0,r.cSb)(),(0,r.YCL)(u.$$.fragment),this.first=c},m:function(E,P){(0,r.$Tr)(E,c,P),(0,r.yef)(u,E,P),y=!0},p:function(E,P){p=E;var k={};1024&P[0]&&(k.show=p[48].show),1536&P[0]&&(k.top=p[9][p[48].index]),1024&P[0]&&(k.onResize=S),536871937&P[0]&&(k.$$scope={dirty:P,ctx:p}),u.$set(k)},i:function(E){y||((0,r.Ui)(u.$$.fragment,E),y=!0)},o:function(E){(0,r.etI)(u.$$.fragment,E),y=!1},d:function(E){E&&(0,r.ogt)(c),(0,r.vpE)(u,E)}}}function Jr(M){var p,c,u=M[22].footer,y=(0,r.nuO)(u,M,M[29],jr);return{c:function(){p=(0,r.bGB)("div"),y&&y.c(),(0,r.Ljt)(p,"class","vc-scroller-footer")},m:function(S,E){(0,r.$Tr)(S,p,E),y&&y.m(p,null),M[26](p),c=!0},p:function(S,E){y&&y.p&&(!c||536870912&E[0])&&(0,r.kmG)(y,u,S,S[29],c?(0,r.u2N)(u,S[29],E,ns):(0,r.VOJ)(S[29]),jr)},i:function(S){c||((0,r.Ui)(y,S),c=!0)},o:function(S){(0,r.etI)(y,S),c=!1},d:function(S){S&&(0,r.ogt)(p),y&&y.d(S),M[26](null)}}}function io(M){var p,c,u=M[7]+"%",y=M[8]+"%";return{c:function(){p=(0,r.bGB)("div"),c=(0,r.bGB)("div"),(0,r.Ljt)(c,"class","vc-scroller-scrollbar-thumb"),(0,r.czc)(c,"height",u,!1),(0,r.czc)(c,"top",y,!1),(0,r.Ljt)(p,"class","vc-scroller-scrollbar-track"),(0,r.czc)(p,"display",M[7]<100?"block":"none",!1)},m:function(S,E){(0,r.$Tr)(S,p,E),(0,r.R3I)(p,c)},p:function(S,E){128&E[0]&&u!==(u=S[7]+"%")&&(0,r.czc)(c,"height",u,!1),256&E[0]&&y!==(y=S[8]+"%")&&(0,r.czc)(c,"top",y,!1),128&E[0]&&(0,r.czc)(p,"display",S[7]<100?"block":"none",!1)},d:function(S){S&&(0,r.ogt)(p)}}}function cs(M){var p,c,u,y,S,E,P,k,j,te,fe,re=M[13].header&&Zr(M),Me=[ss,as],_e=[];function Te(Ne,Xe){return Ne[0].length?0:1}S=Te(M),E=_e[S]=Me[S](M);var Ae=M[13].footer&&Jr(M),Ue=M[1]&&io(M);return{c:function(){p=(0,r.bGB)("div"),c=(0,r.bGB)("div"),re&&re.c(),u=(0,r.DhX)(),y=(0,r.bGB)("div"),E.c(),P=(0,r.DhX)(),Ae&&Ae.c(),k=(0,r.DhX)(),Ue&&Ue.c(),(0,r.Ljt)(y,"class","vc-scroller-items"),(0,r.Ljt)(c,"class","vc-scroller-contents"),(0,r.Ljt)(p,"class","vc-scroller-viewport")},m:function(Ne,Xe){(0,r.$Tr)(Ne,p,Xe),(0,r.R3I)(p,c),re&&re.m(c,null),(0,r.R3I)(c,u),(0,r.R3I)(c,y),_e[S].m(y,null),M[25](y),(0,r.R3I)(c,P),Ae&&Ae.m(c,null),M[27](c),(0,r.R3I)(p,k),Ue&&Ue.m(p,null),M[28](p),j=!0,te||(fe=[(0,r.oLt)(p,"touchstart",M[12].handleTouchStart),(0,r.oLt)(p,"touchmove",M[12].handleTouchMove),(0,r.oLt)(p,"touchend",M[12].handleTouchEnd),(0,r.oLt)(p,"touchcancel",M[12].handleTouchCancel),(0,r.oLt)(p,"wheel",M[12].handleWheel)],te=!0)},p:function(Ne,Xe){Ne[13].header?re?(re.p(Ne,Xe),8192&Xe[0]&&(0,r.Ui)(re,1)):((re=Zr(Ne)).c(),(0,r.Ui)(re,1),re.m(c,u)):re&&((0,r.dvw)(),(0,r.etI)(re,1,1,function(){re=null}),(0,r.gbL)());var tn=S;(S=Te(Ne))===tn?_e[S].p(Ne,Xe):((0,r.dvw)(),(0,r.etI)(_e[tn],1,1,function(){_e[tn]=null}),(0,r.gbL)(),(E=_e[S])?E.p(Ne,Xe):(E=_e[S]=Me[S](Ne)).c(),(0,r.Ui)(E,1),E.m(y,null)),Ne[13].footer?Ae?(Ae.p(Ne,Xe),8192&Xe[0]&&(0,r.Ui)(Ae,1)):((Ae=Jr(Ne)).c(),(0,r.Ui)(Ae,1),Ae.m(c,null)):Ae&&((0,r.dvw)(),(0,r.etI)(Ae,1,1,function(){Ae=null}),(0,r.gbL)()),Ne[1]?Ue?Ue.p(Ne,Xe):((Ue=io(Ne)).c(),Ue.m(p,null)):Ue&&(Ue.d(1),Ue=null)},i:function(Ne){j||((0,r.Ui)(re),(0,r.Ui)(E),(0,r.Ui)(Ae),j=!0)},o:function(Ne){(0,r.etI)(re),(0,r.etI)(E),(0,r.etI)(Ae),j=!1},d:function(Ne){Ne&&(0,r.ogt)(p),re&&re.d(),_e[S].d(),M[25](null),Ae&&Ae.d(),M[27](null),Ue&&Ue.d(),M[28](null),te=!1,(0,r.j7q)(fe)}}}function us(M,p,c){var u,y,S,E,P,k=p.$$slots,j=k===void 0?{}:k,te=p.$$scope,fe=(0,r.XGm)(j),re=this&&this.__awaiter||function(Je,mn,ln,fn){return new(ln||(ln=Promise))(function(En,Gn){function di(Wn){try{gi(fn.next(Wn))}catch(ri){Gn(ri)}}function Xn(Wn){try{gi(fn.throw(Wn))}catch(ri){Gn(ri)}}function gi(Wn){var ri;Wn.done?En(Wn.value):(ri=Wn.value,ri instanceof ln?ri:new ln(function(Li){Li(ri)})).then(di,Xn)}gi((fn=fn.apply(Je,mn||[])).next())})},Me=p.items,_e=p.itemKey,Te=_e===void 0?void 0:_e,Ae=p.itemHeight,Ue=Ae===void 0?void 0:Ae,Ne=p.buffer,Xe=Ne===void 0?200:Ne,tn=p.stickToBottom,bt=tn!==void 0&&tn,gn=p.scrollbar,Sn=gn!==void 0&&gn,vn=p.start,zt=vn===void 0?0:vn,Zt=p.end,bn=Zt===void 0?0:Zt,On=0,_n=0,sn=0,hn=0,Wt=100,Vt=0,on=[],Ge=[],dn=[],Xt=es(),rn=function(){return Math.max(0,hn+On+_n-sn)},Nn=!0,Fn=!1,Dn=new Ka(rn,function(Je){return re(void 0,void 0,void 0,Rn().mark(function mn(){var ln;return Rn().wrap(function(fn){for(;;)switch(fn.prev=fn.next){case 0:if(ln=rn(),Nn=Math.abs(Je-ln)<=1,c(5,E.style.transform="translateY("+-Je+"px) translateZ(0)",E),Tn(),!Fn){fn.next=8;break}Fn=!1,fn.next=11;break;case 8:return fn.next=10,new Promise(function(En){return setTimeout(En,0)});case 10:mi(Me,Je,sn);case 11:case"end":return fn.stop()}},mn)}))}),Tn=function(){var Je=Dn.getPosition(),mn=100/(hn+On+_n);c(8,Vt=Je*mn),c(7,Wt=sn*mn)},Ti=function(Je){var mn=rn();(Je||Dn.getPosition()>mn)&&Dn.updatePosition(mn)};function Un(Je){return function(mn,ln,fn){for(var En=new Map,Gn=0;Gn<Hn.length;Gn+=1){var di=Hn[Gn],Xn=Te===void 0?di:di[Te];En.set(Xn,on[Gn])}c(9,Ge.length=on.length=mn.length,Ge);for(var gi=0,Wn=0;Wn<mn.length;Wn+=1){var ri=mn[Wn],Li=Te===void 0?ri:ri[Te];En.has(Li)?on[Wn]=En.get(Li):on[Wn]=fn,c(9,Ge[Wn]=gi,Ge),gi+=on[Wn]}hn=Math.max(gi,ln-On-_n),Hn=mn,mi(mn,Dn.getPosition(),ln),c(6,P.style.height=hn+"px",P),Ti(Nn&&bt),Tn()}(Je,sn,Ue)}var Ci,Hn=[];function mi(Je,mn,ln){for(var fn=0,En=0;fn<Je.length&&En+on[fn]<mn-Xe;)En+=on[fn],fn+=1;for(c(14,zt=fn);fn<Je.length&&ln&&En<mn+ln+Xe;)En+=on[fn],fn+=1;c(15,bn=fn),c(10,dn=Xt(Je.length,zt,bn))}var zn=function(Je,mn){var ln;(0,l.H3)(function(){var fn=Je();fn?(mn(fn.getBoundingClientRect().height),ln&&ln.disconnect(),(ln=new ResizeObserver(function(En){var Gn=En[0];mn(Gn.contentRect.height)})).observe(fn)):(mn(0),ln&&(ln.disconnect(),ln=null))}),(0,l.ev)(function(){ln&&(ln.disconnect(),ln=null)})};zn(function(){return S},function(Je){return re(void 0,void 0,void 0,Rn().mark(function mn(){var ln,fn;return Rn().wrap(function(En){for(;;)switch(En.prev=En.next){case 0:if(sn!==Je){En.next=2;break}return En.abrupt("return");case 2:for(sn=Je,ln=0,fn=0;fn<Me.length;fn+=1)ln+=on[fn];return hn=Math.max(ln,sn-_n),c(6,P.style.height=hn+"px",P),En.next=9,new Promise(function(Gn){return setTimeout(Gn,0)});case 9:Un(Me),mi(Me,Dn.getPosition(),sn),sn!==0&&Ti(Nn&&bt),Tn();case 13:case"end":return En.stop()}},mn)}))}),zn(function(){return y},function(Je){if(_n!==Je){_n=Je;for(var mn=0,ln=0;ln<Me.length;ln+=1)mn+=on[ln];hn=Math.max(mn,sn-On-_n),c(6,P.style.height=hn+"px",P),sn!==0&&Ti(Nn&&bt),Tn()}}),zn(function(){return u},function(Je){On!==Je&&(On=Je,Un(Me),Tn())});var Ui=function(Je,mn){return re(void 0,void 0,void 0,Rn().mark(function ln(){var fn,En,Gn,di;return Rn().wrap(function(Xn){for(;;)switch(Xn.prev=Xn.next){case 0:if(on[Je]!==mn&&sn!==0){Xn.next=2;break}return Xn.abrupt("return");case 2:for(fn=on[Je],on[Je]=mn,En=Me.length,Gn=Je;Gn<En-1;Gn+=1)c(9,Ge[Gn+1]=Ge[Gn]+on[Gn],Ge);return hn=Math.max(Ge[En-1]+on[En-1],sn-On-_n),di=Dn.getPosition(),Fn=!0,Ge[Je]+fn<di?Dn.updatePosition(di+mn-fn):Ti(Nn&&bt),Xn.next=12,new Promise(function(gi){return setTimeout(gi,0)});case 12:mi(Me,Dn.getPosition(),sn),c(6,P.style.height=hn+"px",P),Tn();case 15:case"end":return Xn.stop()}},ln)}))};(0,l.H3)(function(){c(21,Ci=!0),$r.use()}),(0,l.ev)(function(){$r.unuse()});var ir=new Ja(Dn),rr={scrollTo:function(Je){var mn=Ge[Math.max(0,Math.min(Me.length-1,Je))],ln=Math.min(rn(),mn),fn=Math.min(Math.floor(500*Math.abs(Dn.getPosition()-ln)/2e3),500);Dn.scrollTo(ln,fn)}};return M.$$set=function(Je){"items"in Je&&c(0,Me=Je.items),"itemKey"in Je&&c(16,Te=Je.itemKey),"itemHeight"in Je&&c(17,Ue=Je.itemHeight),"buffer"in Je&&c(18,Xe=Je.buffer),"stickToBottom"in Je&&c(19,bt=Je.stickToBottom),"scrollbar"in Je&&c(1,Sn=Je.scrollbar),"start"in Je&&c(14,zt=Je.start),"end"in Je&&c(15,bn=Je.end),"$$scope"in Je&&c(29,te=Je.$$scope)},M.$$.update=function(){2097153&M.$$.dirty[0]&&Ci&&Un(Me)},[Me,Sn,u,y,S,E,P,Wt,Vt,Ge,dn,Ui,ir,fe,zt,bn,Te,Ue,Xe,bt,rr,Ci,j,function(Je){r.VnY[Je?"unshift":"push"](function(){c(2,u=Je)})},function(Je,mn){return Ui(Je.index,mn)},function(Je){r.VnY[Je?"unshift":"push"](function(){c(6,P=Je)})},function(Je){r.VnY[Je?"unshift":"push"](function(){c(3,y=Je)})},function(Je){r.VnY[Je?"unshift":"push"](function(){c(5,E=Je)})},function(Je){r.VnY[Je?"unshift":"push"](function(){c(4,S=Je)})},te]}var hs=function(M){function p(c){var u;return u=M.call(this)||this,(0,r.S1n)((0,o.Z)(u),c,us,cs,r.N8,{items:0,itemKey:16,itemHeight:17,buffer:18,stickToBottom:19,scrollbar:1,start:14,end:15,handler:20},null,[-1,-1]),u}return(0,a.Z)(p,M),(0,s.Z)(p,[{key:"items",get:function(){return this.$$.ctx[0]},set:function(c){this.$$set({items:c}),(0,r.yl1)()}},{key:"itemKey",get:function(){return this.$$.ctx[16]},set:function(c){this.$$set({itemKey:c}),(0,r.yl1)()}},{key:"itemHeight",get:function(){return this.$$.ctx[17]},set:function(c){this.$$set({itemHeight:c}),(0,r.yl1)()}},{key:"buffer",get:function(){return this.$$.ctx[18]},set:function(c){this.$$set({buffer:c}),(0,r.yl1)()}},{key:"stickToBottom",get:function(){return this.$$.ctx[19]},set:function(c){this.$$set({stickToBottom:c}),(0,r.yl1)()}},{key:"scrollbar",get:function(){return this.$$.ctx[1]},set:function(c){this.$$set({scrollbar:c}),(0,r.yl1)()}},{key:"start",get:function(){return this.$$.ctx[14]},set:function(c){this.$$set({start:c}),(0,r.yl1)()}},{key:"end",get:function(){return this.$$.ctx[15]},set:function(c){this.$$set({end:c}),(0,r.yl1)()}},{key:"handler",get:function(){return this.$$.ctx[20]}}]),p}(r.f_C),oo=hs;function ds(M){var p;return{c:function(){(p=(0,r.bGB)("div")).textContent="Empty",(0,r.Ljt)(p,"slot","empty"),(0,r.Ljt)(p,"class","vc-plugin-empty")},m:function(c,u){(0,r.$Tr)(c,p,u)},p:r.ZTd,d:function(c){c&&(0,r.ogt)(p)}}}function fs(M){var p,c;return(p=new Ii({props:{slot:"item",log:M[16],showTimestamps:M[1],groupHeader:M[16].groupHeader}})).$on("groupCollapsed",M[6]),{c:function(){(0,r.YCL)(p.$$.fragment)},m:function(u,y){(0,r.yef)(p,u,y),c=!0},p:function(u,y){var S={};65536&y&&(S.log=u[16]),2&y&&(S.showTimestamps=u[1]),65536&y&&(S.groupHeader=u[16].groupHeader),p.$set(S)},i:function(u){c||((0,r.Ui)(p.$$.fragment,u),c=!0)},o:function(u){(0,r.etI)(p.$$.fragment,u),c=!1},d:function(u){(0,r.vpE)(p,u)}}}function ao(M){var p,c;return(p=new Ln.Z({})).$on("filterText",M[5]),{c:function(){(0,r.YCL)(p.$$.fragment)},m:function(u,y){(0,r.yef)(p,u,y),c=!0},p:r.ZTd,i:function(u){c||((0,r.Ui)(p.$$.fragment,u),c=!0)},o:function(u){(0,r.etI)(p.$$.fragment,u),c=!1},d:function(u){(0,r.vpE)(p,u)}}}function ps(M){var p,c,u=M[0]&&ao(M);return{c:function(){u&&u.c(),p=(0,r.cSb)()},m:function(y,S){u&&u.m(y,S),(0,r.$Tr)(y,p,S),c=!0},p:function(y,S){y[0]?u?(u.p(y,S),1&S&&(0,r.Ui)(u,1)):((u=ao(y)).c(),(0,r.Ui)(u,1),u.m(p.parentNode,p)):u&&((0,r.dvw)(),(0,r.etI)(u,1,1,function(){u=null}),(0,r.gbL)())},i:function(y){c||((0,r.Ui)(u),c=!0)},o:function(y){(0,r.etI)(u),c=!1},d:function(y){u&&u.d(y),y&&(0,r.ogt)(p)}}}function ms(M){var p,c,u,y;function S(P){M[15](P)}var E={items:M[4],itemKey:"_id",itemHeight:30,buffer:100,stickToBottom:!0,scrollbar:!0,$$slots:{footer:[ps],item:[fs,function(P){return{16:P.item}},function(P){return P.item?65536:0}],empty:[ds]},$$scope:{ctx:M}};return M[3]!==void 0&&(E.handler=M[3]),c=new oo({props:E}),r.VnY.push(function(){return(0,r.akz)(c,"handler",S)}),{c:function(){p=(0,r.bGB)("div"),(0,r.YCL)(c.$$.fragment),(0,r.Ljt)(p,"class","vc-plugin-content"),(0,r.VHj)(p,"vc-logs-has-cmd",M[0])},m:function(P,k){(0,r.$Tr)(P,p,k),(0,r.yef)(c,p,null),y=!0},p:function(P,k){var j=k[0],te={};16&j&&(te.items=P[4]),196611&j&&(te.$$scope={dirty:j,ctx:P}),!u&&8&j&&(u=!0,te.handler=P[3],(0,r.hjT)(function(){return u=!1})),c.$set(te),1&j&&(0,r.VHj)(p,"vc-logs-has-cmd",P[0])},i:function(P){y||((0,r.Ui)(c.$$.fragment,P),y=!0)},o:function(P){(0,r.etI)(c.$$.fragment,P),y=!1},d:function(P){P&&(0,r.ogt)(p),(0,r.vpE)(c)}}}function gs(M,p,c){var u,y=r.ZTd;M.$$.on_destroy.push(function(){return y()});var S,E,P=p.pluginId,k=P===void 0?"default":P,j=p.showCmd,te=j!==void 0&&j,fe=p.filterType,re=fe===void 0?"all":fe,Me=p.showTimestamps,_e=Me!==void 0&&Me,Te=!1,Ae="",Ue=[];return(0,l.H3)(function(){zr.use()}),(0,l.ev)(function(){zr.unuse()}),M.$$set=function(Ne){"pluginId"in Ne&&c(7,k=Ne.pluginId),"showCmd"in Ne&&c(0,te=Ne.showCmd),"filterType"in Ne&&c(8,re=Ne.filterType),"showTimestamps"in Ne&&c(1,_e=Ne.showTimestamps)},M.$$.update=function(){29056&M.$$.dirty&&(Te||(c(2,S=Mn.O.get(k)),y(),y=(0,r.LdU)(S,function(Ne){return c(14,u=Ne)}),c(12,Te=!0)),c(4,Ue=u.logList.filter(function(Ne){return(re==="all"||re===Ne.type)&&(Ae===""||(0,cn.HX)(Ne,Ae))&&!Ne.groupCollapsed})))},[te,_e,S,E,Ue,function(Ne){c(13,Ae=Ne.detail.filterText||"")},function(Ne){var Xe=Ne.detail.groupLabel,tn=Ne.detail.groupHeader,bt=Ne.detail.isGroupCollapsed;S.update(function(gn){return gn.logList.forEach(function(Sn){Sn.groupLabel===Xe&&(Sn.groupHeader>0?Sn.groupHeader=tn:Sn.groupCollapsed=bt)}),gn})},k,re,function(){E.scrollTo(0)},function(){E.scrollTo(Ue.length-1)},{fixedHeight:!0},Te,Ae,u,function(Ne){c(3,E=Ne)}]}var _s=function(M){function p(c){var u;return u=M.call(this)||this,(0,r.S1n)((0,o.Z)(u),c,gs,ms,r.N8,{pluginId:7,showCmd:0,filterType:8,showTimestamps:1,scrollToTop:9,scrollToBottom:10,options:11}),u}return(0,a.Z)(p,M),(0,s.Z)(p,[{key:"pluginId",get:function(){return this.$$.ctx[7]},set:function(c){this.$$set({pluginId:c}),(0,r.yl1)()}},{key:"showCmd",get:function(){return this.$$.ctx[0]},set:function(c){this.$$set({showCmd:c}),(0,r.yl1)()}},{key:"filterType",get:function(){return this.$$.ctx[8]},set:function(c){this.$$set({filterType:c}),(0,r.yl1)()}},{key:"showTimestamps",get:function(){return this.$$.ctx[1]},set:function(c){this.$$set({showTimestamps:c}),(0,r.yl1)()}},{key:"scrollToTop",get:function(){return this.$$.ctx[9]}},{key:"scrollToBottom",get:function(){return this.$$.ctx[10]}},{key:"options",get:function(){return this.$$.ctx[11]}}]),p}(r.f_C),vs=_s,ar=__webpack_require__(5629),so=function(){function M(p){this.model=void 0,this.pluginId=void 0,this.pluginId=p}return M.prototype.destroy=function(){this.model=void 0},M}(),xs=function(M){function p(){for(var u,y=arguments.length,S=new Array(y),E=0;E<y;E++)S[E]=arguments[E];return(u=M.call.apply(M,[this].concat(S))||this).model=ar.W.getSingleton(ar.W,"VConsoleLogModel"),u}(0,a.Z)(p,M);var c=p.prototype;return c.log=function(){for(var u=arguments.length,y=new Array(u),S=0;S<u;S++)y[S]=arguments[S];this.addLog.apply(this,["log"].concat(y))},c.info=function(){for(var u=arguments.length,y=new Array(u),S=0;S<u;S++)y[S]=arguments[S];this.addLog.apply(this,["info"].concat(y))},c.debug=function(){for(var u=arguments.length,y=new Array(u),S=0;S<u;S++)y[S]=arguments[S];this.addLog.apply(this,["debug"].concat(y))},c.warn=function(){for(var u=arguments.length,y=new Array(u),S=0;S<u;S++)y[S]=arguments[S];this.addLog.apply(this,["warn"].concat(y))},c.error=function(){for(var u=arguments.length,y=new Array(u),S=0;S<u;S++)y[S]=arguments[S];this.addLog.apply(this,["error"].concat(y))},c.clear=function(){this.model&&this.model.clearPluginLog(this.pluginId)},c.addLog=function(u){if(this.model){for(var y=arguments.length,S=new Array(y>1?y-1:0),E=1;E<y;E++)S[E-1]=arguments[E];S.unshift("["+this.pluginId+"]"),this.model.addLog({type:u,origData:S},{noOrig:!0})}},p}(so),Cr=function(M){function p(u,y){var S;return(S=M.call(this,u,y,vs,{pluginId:u,filterType:"all"})||this).model=ar.W.getSingleton(ar.W,"VConsoleLogModel"),S.isReady=!1,S.isShow=!1,S.isInBottom=!0,S.model.bindPlugin(u),S.exporter=new xs(u),S}(0,a.Z)(p,M);var c=p.prototype;return c.onReady=function(){var u,y;M.prototype.onReady.call(this),this.model.maxLogNumber=Number((u=this.vConsole.option.log)==null?void 0:u.maxLogNumber)||1e3,this.compInstance.showTimestamps=!((y=this.vConsole.option.log)==null||!y.showTimestamps)},c.onRemove=function(){M.prototype.onRemove.call(this),this.model.unbindPlugin(this.id)},c.onAddTopBar=function(u){for(var y=this,S=["All","Log","Info","Warn","Error"],E=[],P=0;P<S.length;P++)E.push({name:S[P],data:{type:S[P].toLowerCase()},actived:P===0,className:"",onClick:function(k,j){if(j.type===y.compInstance.filterType)return!1;y.compInstance.filterType=j.type}});E[0].className="vc-actived",u(E)},c.onAddTool=function(u){var y=this;u([{name:"Clear",global:!1,onClick:function(S){y.model.clearPluginLog(y.id),y.vConsole.triggerEvent("clearLog")}},{name:"Top",global:!1,onClick:function(S){y.compInstance.scrollToTop()}},{name:"Bottom",global:!1,onClick:function(S){y.compInstance.scrollToBottom()}}])},c.onUpdateOption=function(){var u,y,S,E;((u=this.vConsole.option.log)==null?void 0:u.maxLogNumber)!==this.model.maxLogNumber&&(this.model.maxLogNumber=Number((S=this.vConsole.option.log)==null?void 0:S.maxLogNumber)||1e3),!((y=this.vConsole.option.log)==null||!y.showTimestamps)!==this.compInstance.showTimestamps&&(this.compInstance.showTimestamps=!((E=this.vConsole.option.log)==null||!E.showTimestamps))},p}(vt),lo=function(M){function p(){for(var u,y=arguments.length,S=new Array(y),E=0;E<y;E++)S[E]=arguments[E];return(u=M.call.apply(M,[this].concat(S))||this).onErrorHandler=void 0,u.resourceErrorHandler=void 0,u.rejectionHandler=void 0,u}(0,a.Z)(p,M);var c=p.prototype;return c.onReady=function(){M.prototype.onReady.call(this),this.bindErrors(),this.compInstance.showCmd=!0},c.onRemove=function(){M.prototype.onRemove.call(this),this.unbindErrors()},c.bindErrors=function(){e.FJ(window)&&e.mf(window.addEventListener)&&(this.catchWindowOnError(),this.catchResourceError(),this.catchUnhandledRejection())},c.unbindErrors=function(){e.FJ(window)&&e.mf(window.addEventListener)&&(window.removeEventListener("error",this.onErrorHandler),window.removeEventListener("error",this.resourceErrorHandler),window.removeEventListener("unhandledrejection",this.rejectionHandler))},c.catchWindowOnError=function(){var u=this;this.onErrorHandler=this.onErrorHandler?this.onErrorHandler:function(y){var S=y.message;y.filename&&(S+="\\n\\t"+y.filename.replace(location.origin,""),(y.lineno||y.colno)&&(S+=":"+y.lineno+":"+y.colno)),S+="\\n"+(!!y.error&&!!y.error.stack&&y.error.stack.toString()||""),u.model.addLog({type:"error",origData:[S]},{noOrig:!0})},window.removeEventListener("error",this.onErrorHandler),window.addEventListener("error",this.onErrorHandler)},c.catchResourceError=function(){var u=this;this.resourceErrorHandler=this.resourceErrorHandler?this.resourceErrorHandler:function(y){var S=y.target;if(["link","video","script","img","audio"].indexOf(S.localName)>-1){var E=S.href||S.src||S.currentSrc;u.model.addLog({type:"error",origData:["GET <"+S.localName+"> error: "+E]},{noOrig:!0})}},window.removeEventListener("error",this.resourceErrorHandler),window.addEventListener("error",this.resourceErrorHandler,!0)},c.catchUnhandledRejection=function(){var u=this;this.rejectionHandler=this.rejectionHandler?this.rejectionHandler:function(y){var S=y&&y.reason,E="Uncaught (in promise) ",P=[E,S];S instanceof Error&&(P=[E,{name:S.name,message:S.message,stack:S.stack}]),u.model.addLog({type:"error",origData:P},{noOrig:!0})},window.removeEventListener("unhandledrejection",this.rejectionHandler),window.addEventListener("unhandledrejection",this.rejectionHandler)},p}(Cr),uo=function(M){function p(){return M.apply(this,arguments)||this}(0,a.Z)(p,M);var c=p.prototype;return c.onReady=function(){M.prototype.onReady.call(this),this.printSystemInfo()},c.printSystemInfo=function(){var u=navigator.userAgent,y=[],S=u.match(/MicroMessenger\/([\d\.]+)/i),E=S&&S[1]?S[1]:null;location.host==="servicewechat.com"||console.info("[system]","Location:",location.href);var P=u.match(/(ipod).*\s([\d_]+)/i),k=u.match(/(ipad).*\s([\d_]+)/i),j=u.match(/(iphone)\sos\s([\d_]+)/i),te=u.match(/(android)\s([\d\.]+)/i),fe=u.match(/(Mac OS X)\s([\d_]+)/i);y=[],te?y.push("Android "+te[2]):j?y.push("iPhone, iOS "+j[2].replace(/_/g,".")):k?y.push("iPad, iOS "+k[2].replace(/_/g,".")):P?y.push("iPod, iOS "+P[2].replace(/_/g,".")):fe&&y.push("Mac, MacOS "+fe[2].replace(/_/g,".")),E&&y.push("WeChat "+E),console.info("[system]","Client:",y.length?y.join(", "):"Unknown");var re=u.toLowerCase().match(/ nettype\/([^ ]+)/g);re&&re[0]&&(y=[(re=re[0].split("/"))[1]],console.info("[system]","Network:",y.length?y.join(", "):"Unknown")),console.info("[system]","UA:",u),setTimeout(function(){var Me=window.performance||window.msPerformance||window.webkitPerformance;if(Me&&Me.timing){var _e=Me.timing;_e.navigationStart&&console.info("[system]","navigationStart:",_e.navigationStart),_e.navigationStart&&_e.domainLookupStart&&console.info("[system]","navigation:",_e.domainLookupStart-_e.navigationStart+"ms"),_e.domainLookupEnd&&_e.domainLookupStart&&console.info("[system]","dns:",_e.domainLookupEnd-_e.domainLookupStart+"ms"),_e.connectEnd&&_e.connectStart&&(_e.connectEnd&&_e.secureConnectionStart?console.info("[system]","tcp (ssl):",_e.connectEnd-_e.connectStart+"ms ("+(_e.connectEnd-_e.secureConnectionStart)+"ms)"):console.info("[system]","tcp:",_e.connectEnd-_e.connectStart+"ms")),_e.responseStart&&_e.requestStart&&console.info("[system]","request:",_e.responseStart-_e.requestStart+"ms"),_e.responseEnd&&_e.responseStart&&console.info("[system]","response:",_e.responseEnd-_e.responseStart+"ms"),_e.domComplete&&_e.domLoading&&(_e.domContentLoadedEventStart&&_e.domLoading?console.info("[system]","domComplete (domLoaded):",_e.domComplete-_e.domLoading+"ms ("+(_e.domContentLoadedEventStart-_e.domLoading)+"ms)"):console.info("[system]","domComplete:",_e.domComplete-_e.domLoading+"ms")),_e.loadEventEnd&&_e.loadEventStart&&console.info("[system]","loadEvent:",_e.loadEventEnd-_e.loadEventStart+"ms"),_e.navigationStart&&_e.loadEventEnd&&console.info("[system]","total (DOM):",_e.loadEventEnd-_e.navigationStart+"ms ("+(_e.domComplete-_e.navigationStart)+"ms)")}},0)},p}(Cr),jn=__webpack_require__(3313),fo=__webpack_require__(643);function Lr(M,p){var c=typeof Symbol<"u"&&M[Symbol.iterator]||M["@@iterator"];if(c)return(c=c.call(M)).next.bind(c);if(Array.isArray(M)||(c=function(y,S){if(y){if(typeof y=="string")return po(y,S);var E=Object.prototype.toString.call(y).slice(8,-1);if(E==="Object"&&y.constructor&&(E=y.constructor.name),E==="Map"||E==="Set")return Array.from(y);if(E==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(E))return po(y,S)}}(M))||p&&M&&typeof M.length=="number"){c&&(M=c);var u=0;return function(){return u>=M.length?{done:!0}:{done:!1,value:M[u++]}}}throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function po(M,p){(p==null||p>M.length)&&(p=M.length);for(var c=0,u=new Array(p);c<p;c++)u[c]=M[c];return u}var mo=function(M,p){p===void 0&&(p={}),e.Kn(p)||(p={});var c=M?M.split("?"):[];if(c.shift(),c.length>0)for(var u,y=Lr(c=c.join("?").split("&"));!(u=y()).done;){var S=u.value.split("=");try{p[S[0]]=decodeURIComponent(S[1])}catch{p[S[0]]=S[1]}}return p},qi=function(M,p){var c="";switch(M){case"":case"text":case"json":if(e.HD(p))try{c=JSON.parse(p),c=e.hZ(c,{maxDepth:10,keyMaxLen:1e4,pretty:!0,standardJSON:!0})}catch{c=e.id(String(p),1e4)}else e.Kn(p)||e.kJ(p)?c=e.hZ(p,{maxDepth:10,keyMaxLen:1e4,pretty:!0,standardJSON:!0}):p!==void 0&&(c=Object.prototype.toString.call(p));break;default:p!==void 0&&(c=Object.prototype.toString.call(p))}return c},Dr=function(M){if(!M)return null;var p=null;if(typeof M=="string")try{p=JSON.parse(M)}catch{var c=M.split("&");if(c.length===1)p=M;else{p={};for(var u,y=Lr(c);!(u=y()).done;){var S=u.value.split("=");p[S[0]]=S[1]===void 0?"undefined":S[1]}}}else if(e.TW(M)){p={};for(var E,P=Lr(M);!(E=P()).done;){var k=E.value,j=k[0],te=k[1];p[j]=typeof te=="string"?te:"[object Object]"}}else e.PO(M)?p=M:p="[object "+e.zl(M)+"]";return p},Rr=function(M){return M===void 0&&(M=""),M.startsWith("//")&&(M=""+new URL(window.location.href).protocol+M),M.startsWith("http")?new URL(M):new URL(M,window.location.href)},Ji=function(){this.id="",this.name="",this.method="",this.url="",this.status=0,this.statusText="",this.cancelState=0,this.readyState=0,this.header=null,this.responseType="",this.requestType=void 0,this.requestHeader=null,this.response=void 0,this.responseSize=0,this.responseSizeText="",this.startTime=0,this.startTimeText="",this.endTime=0,this.costTime=0,this.getData=null,this.postData=null,this.actived=!1,this.noVConsole=!1,this.id=(0,e.QI)()},_o=function(M){function p(c){var u;return(u=M.call(this)||this)._response=void 0,new Proxy(c,p.Handler)||(0,o.Z)(u)}return(0,a.Z)(p,M),p}(Ji);_o.Handler={get:function(M,p){return p==="response"?M._response:Reflect.get(M,p)},set:function(M,p,c){var u;switch(p){case"response":return M._response=qi(M.responseType,c),!0;case"url":var y=((u=c=String(c))==null?void 0:u.replace(new RegExp("[/]*$"),"").split("/").pop())||"Unknown";Reflect.set(M,"name",y);var S=mo(c,M.getData);Reflect.set(M,"getData",S);break;case"status":var E=String(c)||"Unknown";Reflect.set(M,"statusText",E);break;case"startTime":if(c&&M.endTime){var P=M.endTime-c;Reflect.set(M,"costTime",P)}break;case"endTime":if(c&&M.startTime){var k=c-M.startTime;Reflect.set(M,"costTime",k)}}return Reflect.set(M,p,c)}};var ys=function(){function M(c,u){var y=this;this.XMLReq=void 0,this.item=void 0,this.onUpdateCallback=void 0,this.XMLReq=c,this.XMLReq.onreadystatechange=function(){y.onReadyStateChange()},this.XMLReq.onabort=function(){y.onAbort()},this.XMLReq.ontimeout=function(){y.onTimeout()},this.item=new Ji,this.item.requestType="xhr",this.onUpdateCallback=u}var p=M.prototype;return p.get=function(c,u){switch(u){case"_noVConsole":return this.item.noVConsole;case"open":return this.getOpen(c);case"send":return this.getSend(c);case"setRequestHeader":return this.getSetRequestHeader(c);default:var y=Reflect.get(c,u);return typeof y=="function"?y.bind(c):y}},p.set=function(c,u,y){switch(u){case"_noVConsole":return void(this.item.noVConsole=!!y);case"onreadystatechange":return this.setOnReadyStateChange(c,u,y);case"onabort":return this.setOnAbort(c,u,y);case"ontimeout":return this.setOnTimeout(c,u,y)}return Reflect.set(c,u,y)},p.onReadyStateChange=function(){this.item.readyState=this.XMLReq.readyState,this.item.responseType=this.XMLReq.responseType,this.item.endTime=Date.now(),this.item.costTime=this.item.endTime-this.item.startTime,this.updateItemByReadyState(),this.item.response=qi(this.item.responseType,this.item.response),this.triggerUpdate()},p.onAbort=function(){this.item.cancelState=1,this.item.statusText="Abort",this.triggerUpdate()},p.onTimeout=function(){this.item.cancelState=3,this.item.statusText="Timeout",this.triggerUpdate()},p.triggerUpdate=function(){this.item.noVConsole||this.onUpdateCallback(this.item)},p.getOpen=function(c){var u=this,y=Reflect.get(c,"open");return function(){for(var S=arguments.length,E=new Array(S),P=0;P<S;P++)E[P]=arguments[P];var k=E[0],j=E[1];return u.item.method=k?k.toUpperCase():"GET",u.item.url=j||"",u.item.name=u.item.url.replace(new RegExp("[/]*$"),"").split("/").pop()||"",u.item.getData=mo(u.item.url,{}),u.triggerUpdate(),y.apply(c,E)}},p.getSend=function(c){var u=this,y=Reflect.get(c,"send");return function(){for(var S=arguments.length,E=new Array(S),P=0;P<S;P++)E[P]=arguments[P];var k=E[0];return u.item.postData=Dr(k),u.triggerUpdate(),y.apply(c,E)}},p.getSetRequestHeader=function(c){var u=this,y=Reflect.get(c,"setRequestHeader");return function(){u.item.requestHeader||(u.item.requestHeader={});for(var S=arguments.length,E=new Array(S),P=0;P<S;P++)E[P]=arguments[P];return u.item.requestHeader[E[0]]=E[1],u.triggerUpdate(),y.apply(c,E)}},p.setOnReadyStateChange=function(c,u,y){var S=this;return Reflect.set(c,u,function(){S.onReadyStateChange();for(var E=arguments.length,P=new Array(E),k=0;k<E;k++)P[k]=arguments[k];y.apply(c,P)})},p.setOnAbort=function(c,u,y){var S=this;return Reflect.set(c,u,function(){S.onAbort();for(var E=arguments.length,P=new Array(E),k=0;k<E;k++)P[k]=arguments[k];y.apply(c,P)})},p.setOnTimeout=function(c,u,y){var S=this;return Reflect.set(c,u,function(){S.onTimeout();for(var E=arguments.length,P=new Array(E),k=0;k<E;k++)P[k]=arguments[k];y.apply(c,P)})},p.updateItemByReadyState=function(){switch(this.XMLReq.readyState){case 0:case 1:if(this.item.status=0,this.item.statusText="Pending",!this.item.startTime){this.item.startTime=Date.now();var c=(0,e._3)(this.item.startTime);this.item.startTimeText=c.year+"-"+c.month+"-"+c.day+" "+c.hour+":"+c.minute+":"+c.second+"."+c.millisecond}break;case 2:this.item.status=this.XMLReq.status,this.item.statusText="Loading",this.item.header={};for(var u=(this.XMLReq.getAllResponseHeaders()||"").split(`
`),y=0;y<u.length;y++){var S=u[y];if(S){var E=S.split(": "),P=E[0],k=E.slice(1).join(": ");this.item.header[P]=k}}break;case 3:this.item.status=this.XMLReq.status,this.item.statusText="Loading",this.XMLReq.response&&this.XMLReq.response.length&&(this.item.responseSize=this.XMLReq.response.length,this.item.responseSizeText=(0,e.KL)(this.item.responseSize));break;case 4:this.item.status=this.XMLReq.status||this.item.status||0,this.item.statusText=String(this.item.status),this.item.endTime=Date.now(),this.item.costTime=this.item.endTime-(this.item.startTime||this.item.endTime),this.item.response=this.XMLReq.response,this.XMLReq.response&&this.XMLReq.response.length&&(this.item.responseSize=this.XMLReq.response.length,this.item.responseSizeText=(0,e.KL)(this.item.responseSize));break;default:this.item.status=this.XMLReq.status,this.item.statusText="Unknown"}},M}(),Pr=function(){function M(){}return M.create=function(p){return new Proxy(XMLHttpRequest,{construct:function(c){var u=new c;return new Proxy(u,new ys(u,p))}})},M}();function Ir(M,p){var c=typeof Symbol<"u"&&M[Symbol.iterator]||M["@@iterator"];if(c)return(c=c.call(M)).next.bind(c);if(Array.isArray(M)||(c=function(y,S){if(y){if(typeof y=="string")return xo(y,S);var E=Object.prototype.toString.call(y).slice(8,-1);if(E==="Object"&&y.constructor&&(E=y.constructor.name),E==="Map"||E==="Set")return Array.from(y);if(E==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(E))return xo(y,S)}}(M))||p&&M&&typeof M.length=="number"){c&&(M=c);var u=0;return function(){return u>=M.length?{done:!0}:{done:!1,value:M[u++]}}}throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function xo(M,p){(p==null||p>M.length)&&(p=M.length);for(var c=0,u=new Array(p);c<p;c++)u[c]=M[c];return u}Pr.origXMLHttpRequest=XMLHttpRequest;var bs=function(){function M(c,u,y){this.resp=void 0,this.item=void 0,this.onUpdateCallback=void 0,this.resp=c,this.item=u,this.onUpdateCallback=y,this.mockReader()}var p=M.prototype;return p.set=function(c,u,y){return Reflect.set(c,u,y)},p.get=function(c,u){var y=this,S=Reflect.get(c,u);switch(u){case"arrayBuffer":case"blob":case"formData":case"json":case"text":return function(){return y.item.responseType=u.toLowerCase(),S.apply(c).then(function(E){return y.item.response=qi(y.item.responseType,E),y.onUpdateCallback(y.item),E})}}return typeof S=="function"?S.bind(c):S},p.mockReader=function(){var c,u=this;if(this.resp.body&&typeof this.resp.body.getReader=="function"){var y=this.resp.body.getReader;this.resp.body.getReader=function(){var S=y.apply(u.resp.body);if(u.item.readyState===4)return S;var E=S.read,P=S.cancel;return u.item.responseType="arraybuffer",S.read=function(){return E.apply(S).then(function(k){if(c){var j=new Uint8Array(c.length+k.value.length);j.set(c),j.set(k.value,c.length),c=j}else c=new Uint8Array(k.value);return u.item.endTime=Date.now(),u.item.costTime=u.item.endTime-(u.item.startTime||u.item.endTime),u.item.readyState=k.done?4:3,u.item.statusText=k.done?String(u.item.status):"Loading",u.item.responseSize=c.length,u.item.responseSizeText=e.KL(u.item.responseSize),k.done&&(u.item.response=qi(u.item.responseType,c)),u.onUpdateCallback(u.item),k})},S.cancel=function(){u.item.cancelState=2,u.item.statusText="Cancel",u.item.endTime=Date.now(),u.item.costTime=u.item.endTime-(u.item.startTime||u.item.endTime),u.item.response=qi(u.item.responseType,c),u.onUpdateCallback(u.item);for(var k=arguments.length,j=new Array(k),te=0;te<k;te++)j[te]=arguments[te];return P.apply(S,j)},S}}},M}(),Ms=function(){function M(c){this.onUpdateCallback=void 0,this.onUpdateCallback=c}var p=M.prototype;return p.apply=function(c,u,y){var S=this,E=y[0],P=y[1],k=new Ji;return this.beforeFetch(k,E,P),c.apply(window,y).then(this.afterFetch(k)).catch(function(j){throw k.endTime=Date.now(),k.costTime=k.endTime-(k.startTime||k.endTime),S.onUpdateCallback(k),j})},p.beforeFetch=function(c,u,y){var S,E="GET",P=null;if(e.HD(u)?(E=(y==null?void 0:y.method)||"GET",S=Rr(u),P=(y==null?void 0:y.headers)||null):(E=u.method||"GET",S=Rr(u.url),P=u.headers),c.method=E,c.requestType="fetch",c.requestHeader=P,c.url=S.toString(),c.name=(S.pathname.split("/").pop()||"")+S.search,c.status=0,c.statusText="Pending",c.readyState=1,!c.startTime){c.startTime=Date.now();var k=e._3(c.startTime);c.startTimeText=k.year+"-"+k.month+"-"+k.day+" "+k.hour+":"+k.minute+":"+k.second+"."+k.millisecond}if(Object.prototype.toString.call(P)==="[object Headers]"){c.requestHeader={};for(var j,te=Ir(P);!(j=te()).done;){var fe=j.value,re=fe[0],Me=fe[1];c.requestHeader[re]=Me}}else c.requestHeader=P;if(S.search&&S.searchParams){c.getData={};for(var _e,Te=Ir(S.searchParams);!(_e=Te()).done;){var Ae=_e.value,Ue=Ae[0],Ne=Ae[1];c.getData[Ue]=Ne}}y!=null&&y.body&&(c.postData=Dr(y.body)),this.onUpdateCallback(c)},p.afterFetch=function(c){var u=this;return function(y){c.endTime=Date.now(),c.costTime=c.endTime-(c.startTime||c.endTime),c.status=y.status,c.statusText=String(y.status);var S=!1;c.header={};for(var E,P=Ir(y.headers);!(E=P()).done;){var k=E.value,j=k[0],te=k[1];c.header[j]=te,S=te.toLowerCase().indexOf("chunked")>-1||S}return S?c.readyState=3:(c.readyState=4,u.handleResponseBody(y.clone(),c).then(function(fe){c.responseSize=typeof fe=="string"?fe.length:fe.byteLength,c.responseSizeText=e.KL(c.responseSize),c.response=qi(c.responseType,fe),u.onUpdateCallback(c)})),u.onUpdateCallback(c),new Proxy(y,new bs(y,c,u.onUpdateCallback))}},p.handleResponseBody=function(c,u){var y=c.headers.get("content-type");return y&&y.includes("application/json")?(u.responseType="json",c.text()):y&&(y.includes("text/html")||y.includes("text/plain"))?(u.responseType="text",c.text()):(u.responseType="arraybuffer",c.arrayBuffer())},M}(),Ar=function(){function M(){}return M.create=function(p){return new Proxy(fetch,new Ms(p))},M}();function Ss(M,p){var c=typeof Symbol<"u"&&M[Symbol.iterator]||M["@@iterator"];if(c)return(c=c.call(M)).next.bind(c);if(Array.isArray(M)||(c=function(y,S){if(y){if(typeof y=="string")return yo(y,S);var E=Object.prototype.toString.call(y).slice(8,-1);if(E==="Object"&&y.constructor&&(E=y.constructor.name),E==="Map"||E==="Set")return Array.from(y);if(E==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(E))return yo(y,S)}}(M))||p&&M&&typeof M.length=="number"){c&&(M=c);var u=0;return function(){return u>=M.length?{done:!0}:{done:!1,value:M[u++]}}}throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function yo(M,p){(p==null||p>M.length)&&(p=M.length);for(var c=0,u=new Array(p);c<p;c++)u[c]=M[c];return u}Ar.origFetch=fetch;var ws=function(M){return M instanceof Blob?M.type:M instanceof FormData?"multipart/form-data":M instanceof URLSearchParams?"application/x-www-form-urlencoded;charset=UTF-8":"text/plain;charset=UTF-8"},Es=function(){function M(p){this.onUpdateCallback=void 0,this.onUpdateCallback=p}return M.prototype.apply=function(p,c,u){var y=u[0],S=u[1],E=new Ji,P=Rr(y);if(E.method="POST",E.url=y,E.name=(P.pathname.split("/").pop()||"")+P.search,E.requestType="ping",E.requestHeader={"Content-Type":ws(S)},E.status=0,E.statusText="Pending",P.search&&P.searchParams){E.getData={};for(var k,j=Ss(P.searchParams);!(k=j()).done;){var te=k.value,fe=te[0],re=te[1];E.getData[fe]=re}}E.postData=Dr(S),E.startTime||(E.startTime=Date.now()),this.onUpdateCallback(E);var Me=p.apply(c,u);return Me?(E.endTime=Date.now(),E.costTime=E.endTime-(E.startTime||E.endTime),E.status=0,E.statusText="Sent",E.readyState=4):(E.status=500,E.statusText="Unknown"),this.onUpdateCallback(E),Me},M}(),Or=function(){function M(){}return M.create=function(p){return new Proxy(navigator.sendBeacon,new Es(p))},M}();Or.origSendBeacon=navigator.sendBeacon;var Bi=(0,jn.fZ)({}),sr=function(M){function p(){var u;return(u=M.call(this)||this).maxNetworkNumber=1e3,u.itemCounter=0,u.mockXHR(),u.mockFetch(),u.mockSendBeacon(),u}(0,a.Z)(p,M);var c=p.prototype;return c.unMock=function(){window.hasOwnProperty("XMLHttpRequest")&&(window.XMLHttpRequest=Pr.origXMLHttpRequest),window.hasOwnProperty("fetch")&&(window.fetch=Ar.origFetch),window.navigator.sendBeacon&&(window.navigator.sendBeacon=Or.origSendBeacon)},c.clearLog=function(){Bi.set({})},c.updateRequest=function(u,y){var S=(0,jn.U2)(Bi),E=!!S[u];if(E){var P=S[u];for(var k in y)P[k]=y[k];y=P}Bi.update(function(j){return j[u]=y,j}),E||(q.x.updateTime(),this.limitListLength())},c.mockXHR=function(){var u=this;window.hasOwnProperty("XMLHttpRequest")&&(window.XMLHttpRequest=Pr.create(function(y){u.updateRequest(y.id,y)}))},c.mockFetch=function(){var u=this;window.hasOwnProperty("fetch")&&(window.fetch=Ar.create(function(y){u.updateRequest(y.id,y)}))},c.mockSendBeacon=function(){var u=this;window.navigator.sendBeacon&&(window.navigator.sendBeacon=Or.create(function(y){u.updateRequest(y.id,y)}))},c.limitListLength=function(){var u=this;if(this.itemCounter++,this.itemCounter%10==0){this.itemCounter=0;var y=(0,jn.U2)(Bi),S=Object.keys(y);S.length>this.maxNetworkNumber-10&&Bi.update(function(E){for(var P=S.splice(0,S.length-u.maxNetworkNumber+10),k=0;k<P.length;k++)E[P[k]]=void 0,delete E[P[k]];return E})}},p}(fo.N),lr=__webpack_require__(8747),er={};lr.Z&&lr.Z.locals&&(er.locals=lr.Z.locals);var Nr,Br=0,Wi={};Wi.styleTagTransform=C(),Wi.setAttributes=x(),Wi.insert=b().bind(null,"head"),Wi.domAPI=_(),Wi.insertStyleElement=T(),er.use=function(M){return Wi.options=M||{},Br++||(Nr=h()(lr.Z,Wi)),er},er.unuse=function(){Br>0&&!--Br&&(Nr(),Nr=null)};var bo=er;function wo(M,p,c){var u=M.slice();return u[11]=p[c][0],u[12]=p[c][1],u}function To(M,p,c){var u=M.slice();return u[11]=p[c][0],u[12]=p[c][1],u}function Lo(M,p,c){var u=M.slice();return u[11]=p[c][0],u[12]=p[c][1],u}function Do(M,p,c){var u=M.slice();return u[11]=p[c][0],u[12]=p[c][1],u}function Po(M){var p,c,u;return{c:function(){p=(0,r.fLW)("("),c=(0,r.fLW)(M[0]),u=(0,r.fLW)(")")},m:function(y,S){(0,r.$Tr)(y,p,S),(0,r.$Tr)(y,c,S),(0,r.$Tr)(y,u,S)},p:function(y,S){1&S&&(0,r.rTO)(c,y[0])},d:function(y){y&&(0,r.ogt)(p),y&&(0,r.ogt)(c),y&&(0,r.ogt)(u)}}}function Ts(M){var p,c,u,y,S,E,P=M[0]>0&&Po(M);return{c:function(){p=(0,r.bGB)("dl"),c=(0,r.bGB)("dd"),u=(0,r.fLW)("Name "),P&&P.c(),(y=(0,r.bGB)("dd")).textContent="Method",(S=(0,r.bGB)("dd")).textContent="Status",(E=(0,r.bGB)("dd")).textContent="Time",(0,r.Ljt)(c,"class","vc-table-col vc-table-col-4"),(0,r.Ljt)(y,"class","vc-table-col"),(0,r.Ljt)(S,"class","vc-table-col"),(0,r.Ljt)(E,"class","vc-table-col"),(0,r.Ljt)(p,"class","vc-table-row")},m:function(k,j){(0,r.$Tr)(k,p,j),(0,r.R3I)(p,c),(0,r.R3I)(c,u),P&&P.m(c,null),(0,r.R3I)(p,y),(0,r.R3I)(p,S),(0,r.R3I)(p,E)},p:function(k,j){k[0]>0?P?P.p(k,j):((P=Po(k)).c(),P.m(c,null)):P&&(P.d(1),P=null)},d:function(k){k&&(0,r.ogt)(p),P&&P.d()}}}function Cs(M){var p;return{c:function(){(p=(0,r.bGB)("div")).textContent="Empty",(0,r.Ljt)(p,"slot","empty"),(0,r.Ljt)(p,"class","vc-plugin-empty")},m:function(c,u){(0,r.$Tr)(c,p,u)},p:r.ZTd,d:function(c){c&&(0,r.ogt)(p)}}}function Oo(M){var p,c,u,y,S,E,P,k;E=new be({props:{content:M[10].requestHeader}});for(var j=Object.entries(M[10].requestHeader),te=[],fe=0;fe<j.length;fe+=1)te[fe]=Go(Do(M,j,fe));return{c:function(){p=(0,r.bGB)("div"),c=(0,r.bGB)("dl"),u=(0,r.bGB)("dt"),y=(0,r.fLW)(`Request Headers
                `),S=(0,r.bGB)("i"),(0,r.YCL)(E.$$.fragment),P=(0,r.DhX)();for(var re=0;re<te.length;re+=1)te[re].c();(0,r.Ljt)(S,"class","vc-table-row-icon"),(0,r.Ljt)(u,"class","vc-table-col vc-table-col-title"),(0,r.Ljt)(c,"class","vc-table-row vc-left-border")},m:function(re,Me){(0,r.$Tr)(re,p,Me),(0,r.R3I)(p,c),(0,r.R3I)(c,u),(0,r.R3I)(u,y),(0,r.R3I)(u,S),(0,r.yef)(E,S,null),(0,r.R3I)(p,P);for(var _e=0;_e<te.length;_e+=1)te[_e].m(p,null);k=!0},p:function(re,Me){var _e={};if(1024&Me&&(_e.content=re[10].requestHeader),E.$set(_e),1040&Me){var Te;for(j=Object.entries(re[10].requestHeader),Te=0;Te<j.length;Te+=1){var Ae=Do(re,j,Te);te[Te]?te[Te].p(Ae,Me):(te[Te]=Go(Ae),te[Te].c(),te[Te].m(p,null))}for(;Te<te.length;Te+=1)te[Te].d(1);te.length=j.length}},i:function(re){k||((0,r.Ui)(E.$$.fragment,re),k=!0)},o:function(re){(0,r.etI)(E.$$.fragment,re),k=!1},d:function(re){re&&(0,r.ogt)(p),(0,r.vpE)(E),(0,r.RMB)(te,re)}}}function Go(M){var p,c,u,y,S,E,P,k=M[11]+"",j=M[4](M[12])+"";return{c:function(){p=(0,r.bGB)("div"),c=(0,r.bGB)("div"),u=(0,r.fLW)(k),y=(0,r.DhX)(),S=(0,r.bGB)("div"),E=(0,r.fLW)(j),P=(0,r.DhX)(),(0,r.Ljt)(c,"class","vc-table-col vc-table-col-2"),(0,r.Ljt)(S,"class","vc-table-col vc-table-col-4 vc-table-col-value vc-max-height-line"),(0,r.Ljt)(p,"class","vc-table-row vc-left-border vc-small")},m:function(te,fe){(0,r.$Tr)(te,p,fe),(0,r.R3I)(p,c),(0,r.R3I)(c,u),(0,r.R3I)(p,y),(0,r.R3I)(p,S),(0,r.R3I)(S,E),(0,r.R3I)(p,P)},p:function(te,fe){1024&fe&&k!==(k=te[11]+"")&&(0,r.rTO)(u,k),1024&fe&&j!==(j=te[4](te[12])+"")&&(0,r.rTO)(E,j)},d:function(te){te&&(0,r.ogt)(p)}}}function Ho(M){var p,c,u,y,S,E,P,k;E=new be({props:{content:M[10].getData}});for(var j=Object.entries(M[10].getData),te=[],fe=0;fe<j.length;fe+=1)te[fe]=$o(Lo(M,j,fe));return{c:function(){p=(0,r.bGB)("div"),c=(0,r.bGB)("dl"),u=(0,r.bGB)("dt"),y=(0,r.fLW)(`Query String Parameters
                `),S=(0,r.bGB)("i"),(0,r.YCL)(E.$$.fragment),P=(0,r.DhX)();for(var re=0;re<te.length;re+=1)te[re].c();(0,r.Ljt)(S,"class","vc-table-row-icon"),(0,r.Ljt)(u,"class","vc-table-col vc-table-col-title"),(0,r.Ljt)(c,"class","vc-table-row vc-left-border")},m:function(re,Me){(0,r.$Tr)(re,p,Me),(0,r.R3I)(p,c),(0,r.R3I)(c,u),(0,r.R3I)(u,y),(0,r.R3I)(u,S),(0,r.yef)(E,S,null),(0,r.R3I)(p,P);for(var _e=0;_e<te.length;_e+=1)te[_e].m(p,null);k=!0},p:function(re,Me){var _e={};if(1024&Me&&(_e.content=re[10].getData),E.$set(_e),1040&Me){var Te;for(j=Object.entries(re[10].getData),Te=0;Te<j.length;Te+=1){var Ae=Lo(re,j,Te);te[Te]?te[Te].p(Ae,Me):(te[Te]=$o(Ae),te[Te].c(),te[Te].m(p,null))}for(;Te<te.length;Te+=1)te[Te].d(1);te.length=j.length}},i:function(re){k||((0,r.Ui)(E.$$.fragment,re),k=!0)},o:function(re){(0,r.etI)(E.$$.fragment,re),k=!1},d:function(re){re&&(0,r.ogt)(p),(0,r.vpE)(E),(0,r.RMB)(te,re)}}}function $o(M){var p,c,u,y,S,E,P,k=M[11]+"",j=M[4](M[12])+"";return{c:function(){p=(0,r.bGB)("div"),c=(0,r.bGB)("div"),u=(0,r.fLW)(k),y=(0,r.DhX)(),S=(0,r.bGB)("div"),E=(0,r.fLW)(j),P=(0,r.DhX)(),(0,r.Ljt)(c,"class","vc-table-col vc-table-col-2"),(0,r.Ljt)(S,"class","vc-table-col vc-table-col-4 vc-table-col-value vc-max-height-line"),(0,r.Ljt)(p,"class","vc-table-row vc-left-border vc-small")},m:function(te,fe){(0,r.$Tr)(te,p,fe),(0,r.R3I)(p,c),(0,r.R3I)(c,u),(0,r.R3I)(p,y),(0,r.R3I)(p,S),(0,r.R3I)(S,E),(0,r.R3I)(p,P)},p:function(te,fe){1024&fe&&k!==(k=te[11]+"")&&(0,r.rTO)(u,k),1024&fe&&j!==(j=te[4](te[12])+"")&&(0,r.rTO)(E,j)},d:function(te){te&&(0,r.ogt)(p)}}}function jo(M){var p,c,u,y,S,E,P,k;function j(re,Me){return typeof re[10].postData=="string"?Ds:Ls}E=new be({props:{content:M[10].postData}});var te=j(M),fe=te(M);return{c:function(){p=(0,r.bGB)("div"),c=(0,r.bGB)("dl"),u=(0,r.bGB)("dt"),y=(0,r.fLW)(`Request Payload
                `),S=(0,r.bGB)("i"),(0,r.YCL)(E.$$.fragment),P=(0,r.DhX)(),fe.c(),(0,r.Ljt)(S,"class","vc-table-row-icon"),(0,r.Ljt)(u,"class","vc-table-col vc-table-col-title"),(0,r.Ljt)(c,"class","vc-table-row vc-left-border")},m:function(re,Me){(0,r.$Tr)(re,p,Me),(0,r.R3I)(p,c),(0,r.R3I)(c,u),(0,r.R3I)(u,y),(0,r.R3I)(u,S),(0,r.yef)(E,S,null),(0,r.R3I)(p,P),fe.m(p,null),k=!0},p:function(re,Me){var _e={};1024&Me&&(_e.content=re[10].postData),E.$set(_e),te===(te=j(re))&&fe?fe.p(re,Me):(fe.d(1),(fe=te(re))&&(fe.c(),fe.m(p,null)))},i:function(re){k||((0,r.Ui)(E.$$.fragment,re),k=!0)},o:function(re){(0,r.etI)(E.$$.fragment,re),k=!1},d:function(re){re&&(0,r.ogt)(p),(0,r.vpE)(E),fe.d()}}}function Ls(M){for(var p,c=Object.entries(M[10].postData),u=[],y=0;y<c.length;y+=1)u[y]=Xo(To(M,c,y));return{c:function(){for(var S=0;S<u.length;S+=1)u[S].c();p=(0,r.cSb)()},m:function(S,E){for(var P=0;P<u.length;P+=1)u[P].m(S,E);(0,r.$Tr)(S,p,E)},p:function(S,E){if(1040&E){var P;for(c=Object.entries(S[10].postData),P=0;P<c.length;P+=1){var k=To(S,c,P);u[P]?u[P].p(k,E):(u[P]=Xo(k),u[P].c(),u[P].m(p.parentNode,p))}for(;P<u.length;P+=1)u[P].d(1);u.length=c.length}},d:function(S){(0,r.RMB)(u,S),S&&(0,r.ogt)(p)}}}function Ds(M){var p,c,u,y=M[10].postData+"";return{c:function(){p=(0,r.bGB)("div"),c=(0,r.bGB)("pre"),u=(0,r.fLW)(y),(0,r.Ljt)(c,"class","vc-table-col vc-table-col-value vc-max-height-line"),(0,r.Ljt)(c,"data-scrollable","1"),(0,r.Ljt)(p,"class","vc-table-row vc-left-border vc-small")},m:function(S,E){(0,r.$Tr)(S,p,E),(0,r.R3I)(p,c),(0,r.R3I)(c,u)},p:function(S,E){1024&E&&y!==(y=S[10].postData+"")&&(0,r.rTO)(u,y)},d:function(S){S&&(0,r.ogt)(p)}}}function Xo(M){var p,c,u,y,S,E,P,k=M[11]+"",j=M[4](M[12])+"";return{c:function(){p=(0,r.bGB)("div"),c=(0,r.bGB)("div"),u=(0,r.fLW)(k),y=(0,r.DhX)(),S=(0,r.bGB)("div"),E=(0,r.fLW)(j),P=(0,r.DhX)(),(0,r.Ljt)(c,"class","vc-table-col vc-table-col-2"),(0,r.Ljt)(S,"class","vc-table-col vc-table-col-4 vc-table-col-value vc-max-height-line"),(0,r.Ljt)(S,"data-scrollable","1"),(0,r.Ljt)(p,"class","vc-table-row vc-left-border vc-small")},m:function(te,fe){(0,r.$Tr)(te,p,fe),(0,r.R3I)(p,c),(0,r.R3I)(c,u),(0,r.R3I)(p,y),(0,r.R3I)(p,S),(0,r.R3I)(S,E),(0,r.R3I)(p,P)},p:function(te,fe){1024&fe&&k!==(k=te[11]+"")&&(0,r.rTO)(u,k),1024&fe&&j!==(j=te[4](te[12])+"")&&(0,r.rTO)(E,j)},d:function(te){te&&(0,r.ogt)(p)}}}function qo(M){var p,c,u,y,S,E,P,k;E=new be({props:{content:M[10].header}});for(var j=Object.entries(M[10].header),te=[],fe=0;fe<j.length;fe+=1)te[fe]=Yo(wo(M,j,fe));return{c:function(){p=(0,r.bGB)("div"),c=(0,r.bGB)("dl"),u=(0,r.bGB)("dt"),y=(0,r.fLW)(`Response Headers
                `),S=(0,r.bGB)("i"),(0,r.YCL)(E.$$.fragment),P=(0,r.DhX)();for(var re=0;re<te.length;re+=1)te[re].c();(0,r.Ljt)(S,"class","vc-table-row-icon"),(0,r.Ljt)(u,"class","vc-table-col vc-table-col-title"),(0,r.Ljt)(c,"class","vc-table-row vc-left-border")},m:function(re,Me){(0,r.$Tr)(re,p,Me),(0,r.R3I)(p,c),(0,r.R3I)(c,u),(0,r.R3I)(u,y),(0,r.R3I)(u,S),(0,r.yef)(E,S,null),(0,r.R3I)(p,P);for(var _e=0;_e<te.length;_e+=1)te[_e].m(p,null);k=!0},p:function(re,Me){var _e={};if(1024&Me&&(_e.content=re[10].header),E.$set(_e),1040&Me){var Te;for(j=Object.entries(re[10].header),Te=0;Te<j.length;Te+=1){var Ae=wo(re,j,Te);te[Te]?te[Te].p(Ae,Me):(te[Te]=Yo(Ae),te[Te].c(),te[Te].m(p,null))}for(;Te<te.length;Te+=1)te[Te].d(1);te.length=j.length}},i:function(re){k||((0,r.Ui)(E.$$.fragment,re),k=!0)},o:function(re){(0,r.etI)(E.$$.fragment,re),k=!1},d:function(re){re&&(0,r.ogt)(p),(0,r.vpE)(E),(0,r.RMB)(te,re)}}}function Yo(M){var p,c,u,y,S,E,P,k=M[11]+"",j=M[4](M[12])+"";return{c:function(){p=(0,r.bGB)("div"),c=(0,r.bGB)("div"),u=(0,r.fLW)(k),y=(0,r.DhX)(),S=(0,r.bGB)("div"),E=(0,r.fLW)(j),P=(0,r.DhX)(),(0,r.Ljt)(c,"class","vc-table-col vc-table-col-2"),(0,r.Ljt)(S,"class","vc-table-col vc-table-col-4 vc-table-col-value vc-max-height-line"),(0,r.Ljt)(p,"class","vc-table-row vc-left-border vc-small")},m:function(te,fe){(0,r.$Tr)(te,p,fe),(0,r.R3I)(p,c),(0,r.R3I)(c,u),(0,r.R3I)(p,y),(0,r.R3I)(p,S),(0,r.R3I)(S,E),(0,r.R3I)(p,P)},p:function(te,fe){1024&fe&&k!==(k=te[11]+"")&&(0,r.rTO)(u,k),1024&fe&&j!==(j=te[4](te[12])+"")&&(0,r.rTO)(E,j)},d:function(te){te&&(0,r.ogt)(p)}}}function ea(M){var p,c,u,y,S,E=M[10].responseSizeText+"";return{c:function(){p=(0,r.bGB)("div"),(c=(0,r.bGB)("div")).textContent="Size",u=(0,r.DhX)(),y=(0,r.bGB)("div"),S=(0,r.fLW)(E),(0,r.Ljt)(c,"class","vc-table-col vc-table-col-2"),(0,r.Ljt)(y,"class","vc-table-col vc-table-col-4 vc-table-col-value vc-max-height-line"),(0,r.Ljt)(p,"class","vc-table-row vc-left-border vc-small")},m:function(P,k){(0,r.$Tr)(P,p,k),(0,r.R3I)(p,c),(0,r.R3I)(p,u),(0,r.R3I)(p,y),(0,r.R3I)(y,S)},p:function(P,k){1024&k&&E!==(E=P[10].responseSizeText+"")&&(0,r.rTO)(S,E)},d:function(P){P&&(0,r.ogt)(p)}}}function Rs(M){var p,c,u,y,S,E,P,k,j,te,fe,re,Me,_e,Te,Ae,Ue,Ne,Xe,tn,bt,gn,Sn,vn,zt,Zt,bn,On,_n,sn,hn,Wt,Vt,on,Ge,dn,Xt,rn,Nn,Fn,Dn,Tn,Ti,Un,Ci,Hn,mi,zn,Ui,ir,rr,Je,mn,ln,fn,En,Gn,di,Xn,gi,Wn,ri,Li,Gr,dr,ci,kr,Fa,fr=M[10].name+"",pr=M[10].method+"",mr=M[10].statusText+"",gr=M[10].costTime+"",_r=M[10].url+"",vr=M[10].method+"",xr=M[10].requestType+"",yr=M[10].status+"",br=M[10].startTimeText+"",Mr=(M[10].response||"")+"";function sl(){return M[7](M[10])}Ne=new be({props:{handler:M[3],content:M[10]}});var Zn=M[10].requestHeader!==null&&Oo(M),Qn=M[10].getData!==null&&Ho(M),Jn=M[10].postData!==null&&jo(M),ni=M[10].header!==null&&qo(M);Xn=new be({props:{content:M[10].response}});var fi=M[10].responseSize>0&&ea(M);return{c:function(){p=(0,r.bGB)("div"),c=(0,r.bGB)("dl"),u=(0,r.bGB)("dd"),y=(0,r.fLW)(fr),S=(0,r.bGB)("dd"),E=(0,r.fLW)(pr),P=(0,r.bGB)("dd"),k=(0,r.fLW)(mr),j=(0,r.bGB)("dd"),te=(0,r.fLW)(gr),fe=(0,r.DhX)(),re=(0,r.bGB)("div"),Me=(0,r.bGB)("div"),_e=(0,r.bGB)("dl"),Te=(0,r.bGB)("dt"),Ae=(0,r.fLW)(`General
                `),Ue=(0,r.bGB)("i"),(0,r.YCL)(Ne.$$.fragment),Xe=(0,r.DhX)(),tn=(0,r.bGB)("div"),(bt=(0,r.bGB)("div")).textContent="URL",gn=(0,r.DhX)(),Sn=(0,r.bGB)("div"),vn=(0,r.fLW)(_r),zt=(0,r.DhX)(),Zt=(0,r.bGB)("div"),(bn=(0,r.bGB)("div")).textContent="Method",On=(0,r.DhX)(),_n=(0,r.bGB)("div"),sn=(0,r.fLW)(vr),hn=(0,r.DhX)(),Wt=(0,r.bGB)("div"),(Vt=(0,r.bGB)("div")).textContent="Request Type",on=(0,r.DhX)(),Ge=(0,r.bGB)("div"),dn=(0,r.fLW)(xr),Xt=(0,r.DhX)(),rn=(0,r.bGB)("div"),(Nn=(0,r.bGB)("div")).textContent="HTTP Status",Fn=(0,r.DhX)(),Dn=(0,r.bGB)("div"),Tn=(0,r.fLW)(yr),Ti=(0,r.DhX)(),Un=(0,r.bGB)("div"),(Ci=(0,r.bGB)("div")).textContent="Start Time",Hn=(0,r.DhX)(),mi=(0,r.bGB)("div"),zn=(0,r.fLW)(br),Ui=(0,r.DhX)(),Zn&&Zn.c(),ir=(0,r.DhX)(),Qn&&Qn.c(),rr=(0,r.DhX)(),Jn&&Jn.c(),Je=(0,r.DhX)(),ni&&ni.c(),mn=(0,r.DhX)(),ln=(0,r.bGB)("div"),fn=(0,r.bGB)("dl"),En=(0,r.bGB)("dt"),Gn=(0,r.fLW)(`Response
                `),di=(0,r.bGB)("i"),(0,r.YCL)(Xn.$$.fragment),gi=(0,r.DhX)(),fi&&fi.c(),Wn=(0,r.DhX)(),ri=(0,r.bGB)("div"),Li=(0,r.bGB)("pre"),Gr=(0,r.fLW)(Mr),(0,r.Ljt)(u,"class","vc-table-col vc-table-col-4"),(0,r.Ljt)(S,"class","vc-table-col"),(0,r.Ljt)(P,"class","vc-table-col"),(0,r.Ljt)(j,"class","vc-table-col"),(0,r.Ljt)(c,"class","vc-table-row vc-group-preview"),(0,r.VHj)(c,"vc-table-row-error",M[10].status>=400),(0,r.Ljt)(Ue,"class","vc-table-row-icon"),(0,r.Ljt)(Te,"class","vc-table-col vc-table-col-title"),(0,r.Ljt)(_e,"class","vc-table-row vc-left-border"),(0,r.Ljt)(bt,"class","vc-table-col vc-table-col-2"),(0,r.Ljt)(Sn,"class","vc-table-col vc-table-col-4 vc-table-col-value vc-max-height-line"),(0,r.Ljt)(tn,"class","vc-table-row vc-left-border vc-small"),(0,r.Ljt)(bn,"class","vc-table-col vc-table-col-2"),(0,r.Ljt)(_n,"class","vc-table-col vc-table-col-4 vc-table-col-value vc-max-height-line"),(0,r.Ljt)(Zt,"class","vc-table-row vc-left-border vc-small"),(0,r.Ljt)(Vt,"class","vc-table-col vc-table-col-2"),(0,r.Ljt)(Ge,"class","vc-table-col vc-table-col-4 vc-table-col-value vc-max-height-line"),(0,r.Ljt)(Wt,"class","vc-table-row vc-left-border vc-small"),(0,r.Ljt)(Nn,"class","vc-table-col vc-table-col-2"),(0,r.Ljt)(Dn,"class","vc-table-col vc-table-col-4 vc-table-col-value vc-max-height-line"),(0,r.Ljt)(rn,"class","vc-table-row vc-left-border vc-small"),(0,r.Ljt)(Ci,"class","vc-table-col vc-table-col-2"),(0,r.Ljt)(mi,"class","vc-table-col vc-table-col-4 vc-table-col-value vc-max-height-line"),(0,r.Ljt)(Un,"class","vc-table-row vc-left-border vc-small"),(0,r.Ljt)(di,"class","vc-table-row-icon"),(0,r.Ljt)(En,"class","vc-table-col vc-table-col-title"),(0,r.Ljt)(fn,"class","vc-table-row vc-left-border"),(0,r.Ljt)(Li,"class","vc-table-col vc-max-height vc-min-height"),(0,r.Ljt)(Li,"data-scrollable","1"),(0,r.Ljt)(ri,"class","vc-table-row vc-left-border vc-small"),(0,r.Ljt)(re,"class","vc-group-detail"),(0,r.Ljt)(p,"slot","item"),(0,r.Ljt)(p,"class","vc-group"),(0,r.Ljt)(p,"id",dr=M[10].id),(0,r.VHj)(p,"vc-actived",M[10].actived)},m:function(xi,Pn){(0,r.$Tr)(xi,p,Pn),(0,r.R3I)(p,c),(0,r.R3I)(c,u),(0,r.R3I)(u,y),(0,r.R3I)(c,S),(0,r.R3I)(S,E),(0,r.R3I)(c,P),(0,r.R3I)(P,k),(0,r.R3I)(c,j),(0,r.R3I)(j,te),(0,r.R3I)(p,fe),(0,r.R3I)(p,re),(0,r.R3I)(re,Me),(0,r.R3I)(Me,_e),(0,r.R3I)(_e,Te),(0,r.R3I)(Te,Ae),(0,r.R3I)(Te,Ue),(0,r.yef)(Ne,Ue,null),(0,r.R3I)(Me,Xe),(0,r.R3I)(Me,tn),(0,r.R3I)(tn,bt),(0,r.R3I)(tn,gn),(0,r.R3I)(tn,Sn),(0,r.R3I)(Sn,vn),(0,r.R3I)(Me,zt),(0,r.R3I)(Me,Zt),(0,r.R3I)(Zt,bn),(0,r.R3I)(Zt,On),(0,r.R3I)(Zt,_n),(0,r.R3I)(_n,sn),(0,r.R3I)(Me,hn),(0,r.R3I)(Me,Wt),(0,r.R3I)(Wt,Vt),(0,r.R3I)(Wt,on),(0,r.R3I)(Wt,Ge),(0,r.R3I)(Ge,dn),(0,r.R3I)(Me,Xt),(0,r.R3I)(Me,rn),(0,r.R3I)(rn,Nn),(0,r.R3I)(rn,Fn),(0,r.R3I)(rn,Dn),(0,r.R3I)(Dn,Tn),(0,r.R3I)(Me,Ti),(0,r.R3I)(Me,Un),(0,r.R3I)(Un,Ci),(0,r.R3I)(Un,Hn),(0,r.R3I)(Un,mi),(0,r.R3I)(mi,zn),(0,r.R3I)(re,Ui),Zn&&Zn.m(re,null),(0,r.R3I)(re,ir),Qn&&Qn.m(re,null),(0,r.R3I)(re,rr),Jn&&Jn.m(re,null),(0,r.R3I)(re,Je),ni&&ni.m(re,null),(0,r.R3I)(re,mn),(0,r.R3I)(re,ln),(0,r.R3I)(ln,fn),(0,r.R3I)(fn,En),(0,r.R3I)(En,Gn),(0,r.R3I)(En,di),(0,r.yef)(Xn,di,null),(0,r.R3I)(ln,gi),fi&&fi.m(ln,null),(0,r.R3I)(ln,Wn),(0,r.R3I)(ln,ri),(0,r.R3I)(ri,Li),(0,r.R3I)(Li,Gr),ci=!0,kr||(Fa=(0,r.oLt)(c,"click",sl),kr=!0)},p:function(xi,Pn){M=xi,(!ci||1024&Pn)&&fr!==(fr=M[10].name+"")&&(0,r.rTO)(y,fr),(!ci||1024&Pn)&&pr!==(pr=M[10].method+"")&&(0,r.rTO)(E,pr),(!ci||1024&Pn)&&mr!==(mr=M[10].statusText+"")&&(0,r.rTO)(k,mr),(!ci||1024&Pn)&&gr!==(gr=M[10].costTime+"")&&(0,r.rTO)(te,gr),1024&Pn&&(0,r.VHj)(c,"vc-table-row-error",M[10].status>=400);var Ua={};1024&Pn&&(Ua.content=M[10]),Ne.$set(Ua),(!ci||1024&Pn)&&_r!==(_r=M[10].url+"")&&(0,r.rTO)(vn,_r),(!ci||1024&Pn)&&vr!==(vr=M[10].method+"")&&(0,r.rTO)(sn,vr),(!ci||1024&Pn)&&xr!==(xr=M[10].requestType+"")&&(0,r.rTO)(dn,xr),(!ci||1024&Pn)&&yr!==(yr=M[10].status+"")&&(0,r.rTO)(Tn,yr),(!ci||1024&Pn)&&br!==(br=M[10].startTimeText+"")&&(0,r.rTO)(zn,br),M[10].requestHeader!==null?Zn?(Zn.p(M,Pn),1024&Pn&&(0,r.Ui)(Zn,1)):((Zn=Oo(M)).c(),(0,r.Ui)(Zn,1),Zn.m(re,ir)):Zn&&((0,r.dvw)(),(0,r.etI)(Zn,1,1,function(){Zn=null}),(0,r.gbL)()),M[10].getData!==null?Qn?(Qn.p(M,Pn),1024&Pn&&(0,r.Ui)(Qn,1)):((Qn=Ho(M)).c(),(0,r.Ui)(Qn,1),Qn.m(re,rr)):Qn&&((0,r.dvw)(),(0,r.etI)(Qn,1,1,function(){Qn=null}),(0,r.gbL)()),M[10].postData!==null?Jn?(Jn.p(M,Pn),1024&Pn&&(0,r.Ui)(Jn,1)):((Jn=jo(M)).c(),(0,r.Ui)(Jn,1),Jn.m(re,Je)):Jn&&((0,r.dvw)(),(0,r.etI)(Jn,1,1,function(){Jn=null}),(0,r.gbL)()),M[10].header!==null?ni?(ni.p(M,Pn),1024&Pn&&(0,r.Ui)(ni,1)):((ni=qo(M)).c(),(0,r.Ui)(ni,1),ni.m(re,mn)):ni&&((0,r.dvw)(),(0,r.etI)(ni,1,1,function(){ni=null}),(0,r.gbL)());var Ga={};1024&Pn&&(Ga.content=M[10].response),Xn.$set(Ga),M[10].responseSize>0?fi?fi.p(M,Pn):((fi=ea(M)).c(),fi.m(ln,Wn)):fi&&(fi.d(1),fi=null),(!ci||1024&Pn)&&Mr!==(Mr=(M[10].response||"")+"")&&(0,r.rTO)(Gr,Mr),(!ci||1024&Pn&&dr!==(dr=M[10].id))&&(0,r.Ljt)(p,"id",dr),1024&Pn&&(0,r.VHj)(p,"vc-actived",M[10].actived)},i:function(xi){ci||((0,r.Ui)(Ne.$$.fragment,xi),(0,r.Ui)(Zn),(0,r.Ui)(Qn),(0,r.Ui)(Jn),(0,r.Ui)(ni),(0,r.Ui)(Xn.$$.fragment,xi),ci=!0)},o:function(xi){(0,r.etI)(Ne.$$.fragment,xi),(0,r.etI)(Zn),(0,r.etI)(Qn),(0,r.etI)(Jn),(0,r.etI)(ni),(0,r.etI)(Xn.$$.fragment,xi),ci=!1},d:function(xi){xi&&(0,r.ogt)(p),(0,r.vpE)(Ne),Zn&&Zn.d(),Qn&&Qn.d(),Jn&&Jn.d(),ni&&ni.d(),(0,r.vpE)(Xn),fi&&fi.d(),kr=!1,Fa()}}}function Ps(M){var p,c,u,y;return u=new oo({props:{items:M[1],itemKey:"id",itemHeight:30,buffer:100,stickToBottom:!0,scrollbar:!0,$$slots:{item:[Rs,function(S){return{10:S.item}},function(S){return S.item?1024:0}],empty:[Cs],header:[Ts]},$$scope:{ctx:M}}}),{c:function(){p=(0,r.bGB)("div"),c=(0,r.bGB)("div"),(0,r.YCL)(u.$$.fragment),(0,r.Ljt)(c,"class","vc-plugin-content"),(0,r.Ljt)(p,"class","vc-table")},m:function(S,E){(0,r.$Tr)(S,p,E),(0,r.R3I)(p,c),(0,r.yef)(u,c,null),y=!0},p:function(S,E){var P=E[0],k={};2&P&&(k.items=S[1]),2098177&P&&(k.$$scope={dirty:P,ctx:S}),u.$set(k)},i:function(S){y||((0,r.Ui)(u.$$.fragment,S),y=!0)},o:function(S){(0,r.etI)(u.$$.fragment,S),y=!1},d:function(S){S&&(0,r.ogt)(p),(0,r.vpE)(u)}}}function Is(M,p,c){var u;(0,r.FIv)(M,Bi,function(j){return c(6,u=j)});var y=0,S=function(j){c(0,y=Object.keys(j).length)},E=Bi.subscribe(S);S(u);var P=[],k=function(j){(0,r.fxP)(Bi,u[j].actived=!u[j].actived,u)};return(0,l.H3)(function(){bo.use()}),(0,l.ev)(function(){E(),bo.unuse()}),M.$$.update=function(){64&M.$$.dirty&&c(1,P=Object.values(u))},[y,P,k,function(j){var te="curl -X "+j.method;return typeof j.postData=="string"?te+=" -d '"+j.postData+"'":typeof j.postData=="object"&&j.postData!==null&&(te+=" -d '"+e.hZ(j.postData)+"'"),te+" '"+j.url+"'"},function(j){return e.Kn(j)||e.kJ(j)?e.hZ(j,{maxDepth:10,keyMaxLen:1e4,pretty:!0}):j},{fixedHeight:!0},u,function(j){return k(j.id)}]}var As=function(M){function p(c){var u;return u=M.call(this)||this,(0,r.S1n)((0,o.Z)(u),c,Is,Ps,r.N8,{options:5}),u}return(0,a.Z)(p,M),(0,s.Z)(p,[{key:"options",get:function(){return this.$$.ctx[5]}}]),p}(r.f_C),Os=As,Ns=function(M){function p(){for(var u,y=arguments.length,S=new Array(y),E=0;E<y;E++)S[E]=arguments[E];return(u=M.call.apply(M,[this].concat(S))||this).model=sr.getSingleton(sr,"VConsoleNetworkModel"),u}(0,a.Z)(p,M);var c=p.prototype;return c.add=function(u){var y=new _o(new Ji);for(var S in u)y[S]=u[S];return y.startTime=y.startTime||Date.now(),y.requestType=y.requestType||"custom",this.model.updateRequest(y.id,y),y},c.update=function(u,y){this.model.updateRequest(u,y)},c.clear=function(){this.model.clearLog()},p}(so),ta=function(M){function p(u,y,S){var E;return S===void 0&&(S={}),(E=M.call(this,u,y,Os,S)||this).model=sr.getSingleton(sr,"VConsoleNetworkModel"),E.exporter=void 0,E.exporter=new Ns(u),E}(0,a.Z)(p,M);var c=p.prototype;return c.onReady=function(){M.prototype.onReady.call(this),this.onUpdateOption()},c.onAddTool=function(u){var y=this;u([{name:"Clear",global:!1,onClick:function(S){y.model.clearLog()}}])},c.onRemove=function(){M.prototype.onRemove.call(this),this.model&&this.model.unMock()},c.onUpdateOption=function(){var u,y;((u=this.vConsole.option.network)==null?void 0:u.maxNetworkNumber)!==this.model.maxNetworkNumber&&(this.model.maxNetworkNumber=Number((y=this.vConsole.option.network)==null?void 0:y.maxNetworkNumber)||1e3)},p}(vt),Bs=__webpack_require__(8679),Fs=__webpack_require__.n(Bs),cr=(0,jn.fZ)(),tr=(0,jn.fZ)(),ur=__webpack_require__(5670),nr={};ur.Z&&ur.Z.locals&&(nr.locals=ur.Z.locals);var Fr,Ur=0,Xi={};Xi.styleTagTransform=C(),Xi.setAttributes=x(),Xi.insert=b().bind(null,"head"),Xi.domAPI=_(),Xi.insertStyleElement=T(),nr.use=function(M){return Xi.options=M||{},Ur++||(Fr=h()(ur.Z,Xi)),nr},nr.unuse=function(){Ur>0&&!--Ur&&(Fr(),Fr=null)};var na=nr;function ra(M,p,c){var u=M.slice();return u[8]=p[c],u}function aa(M,p,c){var u=M.slice();return u[11]=p[c],u}function la(M){var p,c,u,y=M[0].nodeType===Node.ELEMENT_NODE&&ca(M),S=M[0].nodeType===Node.TEXT_NODE&&_a(M);return{c:function(){p=(0,r.bGB)("div"),y&&y.c(),c=(0,r.DhX)(),S&&S.c(),(0,r.Ljt)(p,"class","vcelm-l"),(0,r.VHj)(p,"vc-actived",M[0]._isActived),(0,r.VHj)(p,"vc-toggle",M[0]._isExpand),(0,r.VHj)(p,"vcelm-noc",M[0]._isSingleLine)},m:function(E,P){(0,r.$Tr)(E,p,P),y&&y.m(p,null),(0,r.R3I)(p,c),S&&S.m(p,null),u=!0},p:function(E,P){E[0].nodeType===Node.ELEMENT_NODE?y?(y.p(E,P),1&P&&(0,r.Ui)(y,1)):((y=ca(E)).c(),(0,r.Ui)(y,1),y.m(p,c)):y&&((0,r.dvw)(),(0,r.etI)(y,1,1,function(){y=null}),(0,r.gbL)()),E[0].nodeType===Node.TEXT_NODE?S?S.p(E,P):((S=_a(E)).c(),S.m(p,null)):S&&(S.d(1),S=null),1&P&&(0,r.VHj)(p,"vc-actived",E[0]._isActived),1&P&&(0,r.VHj)(p,"vc-toggle",E[0]._isExpand),1&P&&(0,r.VHj)(p,"vcelm-noc",E[0]._isSingleLine)},i:function(E){u||((0,r.Ui)(y),u=!0)},o:function(E){(0,r.etI)(y),u=!1},d:function(E){E&&(0,r.ogt)(p),y&&y.d(),S&&S.d()}}}function ca(M){var p,c,u,y,S,E,P,k,j,te,fe=M[0].nodeName+"",re=(M[0].className||M[0].attributes.length)&&ua(M),Me=M[0]._isNullEndTag&&da(),_e=M[0].childNodes.length>0&&fa(M),Te=!M[0]._isNullEndTag&&ma(M);return{c:function(){p=(0,r.bGB)("span"),c=(0,r.fLW)("<"),u=(0,r.fLW)(fe),re&&re.c(),y=(0,r.cSb)(),Me&&Me.c(),S=(0,r.fLW)(">"),_e&&_e.c(),E=(0,r.cSb)(),Te&&Te.c(),P=(0,r.cSb)(),(0,r.Ljt)(p,"class","vcelm-node")},m:function(Ae,Ue){(0,r.$Tr)(Ae,p,Ue),(0,r.R3I)(p,c),(0,r.R3I)(p,u),re&&re.m(p,null),(0,r.R3I)(p,y),Me&&Me.m(p,null),(0,r.R3I)(p,S),_e&&_e.m(Ae,Ue),(0,r.$Tr)(Ae,E,Ue),Te&&Te.m(Ae,Ue),(0,r.$Tr)(Ae,P,Ue),k=!0,j||(te=(0,r.oLt)(p,"click",M[2]),j=!0)},p:function(Ae,Ue){(!k||1&Ue)&&fe!==(fe=Ae[0].nodeName+"")&&(0,r.rTO)(u,fe),Ae[0].className||Ae[0].attributes.length?re?re.p(Ae,Ue):((re=ua(Ae)).c(),re.m(p,y)):re&&(re.d(1),re=null),Ae[0]._isNullEndTag?Me||((Me=da()).c(),Me.m(p,S)):Me&&(Me.d(1),Me=null),Ae[0].childNodes.length>0?_e?(_e.p(Ae,Ue),1&Ue&&(0,r.Ui)(_e,1)):((_e=fa(Ae)).c(),(0,r.Ui)(_e,1),_e.m(E.parentNode,E)):_e&&((0,r.dvw)(),(0,r.etI)(_e,1,1,function(){_e=null}),(0,r.gbL)()),Ae[0]._isNullEndTag?Te&&(Te.d(1),Te=null):Te?Te.p(Ae,Ue):((Te=ma(Ae)).c(),Te.m(P.parentNode,P))},i:function(Ae){k||((0,r.Ui)(_e),k=!0)},o:function(Ae){(0,r.etI)(_e),k=!1},d:function(Ae){Ae&&(0,r.ogt)(p),re&&re.d(),Me&&Me.d(),_e&&_e.d(Ae),Ae&&(0,r.ogt)(E),Te&&Te.d(Ae),Ae&&(0,r.ogt)(P),j=!1,te()}}}function ua(M){for(var p,c=M[0].attributes,u=[],y=0;y<c.length;y+=1)u[y]=ha(aa(M,c,y));return{c:function(){p=(0,r.bGB)("i");for(var S=0;S<u.length;S+=1)u[S].c();(0,r.Ljt)(p,"class","vcelm-k")},m:function(S,E){(0,r.$Tr)(S,p,E);for(var P=0;P<u.length;P+=1)u[P].m(p,null)},p:function(S,E){if(1&E){var P;for(c=S[0].attributes,P=0;P<c.length;P+=1){var k=aa(S,c,P);u[P]?u[P].p(k,E):(u[P]=ha(k),u[P].c(),u[P].m(p,null))}for(;P<u.length;P+=1)u[P].d(1);u.length=c.length}},d:function(S){S&&(0,r.ogt)(p),(0,r.RMB)(u,S)}}}function Us(M){var p,c=M[11].name+"";return{c:function(){p=(0,r.fLW)(c)},m:function(u,y){(0,r.$Tr)(u,p,y)},p:function(u,y){1&y&&c!==(c=u[11].name+"")&&(0,r.rTO)(p,c)},d:function(u){u&&(0,r.ogt)(p)}}}function Gs(M){var p,c,u,y,S,E=M[11].name+"",P=M[11].value+"";return{c:function(){p=(0,r.fLW)(E),c=(0,r.fLW)('="'),u=(0,r.bGB)("i"),y=(0,r.fLW)(P),S=(0,r.fLW)('"'),(0,r.Ljt)(u,"class","vcelm-v")},m:function(k,j){(0,r.$Tr)(k,p,j),(0,r.$Tr)(k,c,j),(0,r.$Tr)(k,u,j),(0,r.R3I)(u,y),(0,r.$Tr)(k,S,j)},p:function(k,j){1&j&&E!==(E=k[11].name+"")&&(0,r.rTO)(p,E),1&j&&P!==(P=k[11].value+"")&&(0,r.rTO)(y,P)},d:function(k){k&&(0,r.ogt)(p),k&&(0,r.ogt)(c),k&&(0,r.ogt)(u),k&&(0,r.ogt)(S)}}}function ha(M){var p,c;function u(E,P){return E[11].value!==""?Gs:Us}var y=u(M),S=y(M);return{c:function(){p=(0,r.fLW)(` 
            `),S.c(),c=(0,r.cSb)()},m:function(E,P){(0,r.$Tr)(E,p,P),S.m(E,P),(0,r.$Tr)(E,c,P)},p:function(E,P){y===(y=u(E))&&S?S.p(E,P):(S.d(1),(S=y(E))&&(S.c(),S.m(c.parentNode,c)))},d:function(E){E&&(0,r.ogt)(p),S.d(E),E&&(0,r.ogt)(c)}}}function da(M){var p;return{c:function(){p=(0,r.fLW)("/")},m:function(c,u){(0,r.$Tr)(c,p,u)},d:function(c){c&&(0,r.ogt)(p)}}}function fa(M){var p,c,u,y,S=[zs,ks],E=[];function P(k,j){return k[0]._isExpand?1:0}return p=P(M),c=E[p]=S[p](M),{c:function(){c.c(),u=(0,r.cSb)()},m:function(k,j){E[p].m(k,j),(0,r.$Tr)(k,u,j),y=!0},p:function(k,j){var te=p;(p=P(k))===te?E[p].p(k,j):((0,r.dvw)(),(0,r.etI)(E[te],1,1,function(){E[te]=null}),(0,r.gbL)(),(c=E[p])?c.p(k,j):(c=E[p]=S[p](k)).c(),(0,r.Ui)(c,1),c.m(u.parentNode,u))},i:function(k){y||((0,r.Ui)(c),y=!0)},o:function(k){(0,r.etI)(c),y=!1},d:function(k){E[p].d(k),k&&(0,r.ogt)(u)}}}function ks(M){for(var p,c,u=M[0].childNodes,y=[],S=0;S<u.length;S+=1)y[S]=pa(ra(M,u,S));var E=function(P){return(0,r.etI)(y[P],1,1,function(){y[P]=null})};return{c:function(){for(var P=0;P<y.length;P+=1)y[P].c();p=(0,r.cSb)()},m:function(P,k){for(var j=0;j<y.length;j+=1)y[j].m(P,k);(0,r.$Tr)(P,p,k),c=!0},p:function(P,k){if(1&k){var j;for(u=P[0].childNodes,j=0;j<u.length;j+=1){var te=ra(P,u,j);y[j]?(y[j].p(te,k),(0,r.Ui)(y[j],1)):(y[j]=pa(te),y[j].c(),(0,r.Ui)(y[j],1),y[j].m(p.parentNode,p))}for((0,r.dvw)(),j=u.length;j<y.length;j+=1)E(j);(0,r.gbL)()}},i:function(P){if(!c){for(var k=0;k<u.length;k+=1)(0,r.Ui)(y[k]);c=!0}},o:function(P){y=y.filter(Boolean);for(var k=0;k<y.length;k+=1)(0,r.etI)(y[k]);c=!1},d:function(P){(0,r.RMB)(y,P),P&&(0,r.ogt)(p)}}}function zs(M){var p;return{c:function(){p=(0,r.fLW)("...")},m:function(c,u){(0,r.$Tr)(c,p,u)},p:r.ZTd,i:r.ZTd,o:r.ZTd,d:function(c){c&&(0,r.ogt)(p)}}}function pa(M){var p,c,u;return(p=new va({props:{node:M[8]}})).$on("toggleNode",M[4]),{c:function(){(0,r.YCL)(p.$$.fragment),c=(0,r.DhX)()},m:function(y,S){(0,r.yef)(p,y,S),(0,r.$Tr)(y,c,S),u=!0},p:function(y,S){var E={};1&S&&(E.node=y[8]),p.$set(E)},i:function(y){u||((0,r.Ui)(p.$$.fragment,y),u=!0)},o:function(y){(0,r.etI)(p.$$.fragment,y),u=!1},d:function(y){(0,r.vpE)(p,y),y&&(0,r.ogt)(c)}}}function ma(M){var p,c,u,y,S=M[0].nodeName+"";return{c:function(){p=(0,r.bGB)("span"),c=(0,r.fLW)("</"),u=(0,r.fLW)(S),y=(0,r.fLW)(">"),(0,r.Ljt)(p,"class","vcelm-node")},m:function(E,P){(0,r.$Tr)(E,p,P),(0,r.R3I)(p,c),(0,r.R3I)(p,u),(0,r.R3I)(p,y)},p:function(E,P){1&P&&S!==(S=E[0].nodeName+"")&&(0,r.rTO)(u,S)},d:function(E){E&&(0,r.ogt)(p)}}}function _a(M){var p,c,u=M[1](M[0].textContent)+"";return{c:function(){p=(0,r.bGB)("span"),c=(0,r.fLW)(u),(0,r.Ljt)(p,"class","vcelm-t vcelm-noc")},m:function(y,S){(0,r.$Tr)(y,p,S),(0,r.R3I)(p,c)},p:function(y,S){1&S&&u!==(u=y[1](y[0].textContent)+"")&&(0,r.rTO)(c,u)},d:function(y){y&&(0,r.ogt)(p)}}}function Vs(M){var p,c,u=M[0]&&la(M);return{c:function(){u&&u.c(),p=(0,r.cSb)()},m:function(y,S){u&&u.m(y,S),(0,r.$Tr)(y,p,S),c=!0},p:function(y,S){var E=S[0];y[0]?u?(u.p(y,E),1&E&&(0,r.Ui)(u,1)):((u=la(y)).c(),(0,r.Ui)(u,1),u.m(p.parentNode,p)):u&&((0,r.dvw)(),(0,r.etI)(u,1,1,function(){u=null}),(0,r.gbL)())},i:function(y){c||((0,r.Ui)(u),c=!0)},o:function(y){(0,r.etI)(u),c=!1},d:function(y){u&&u.d(y),y&&(0,r.ogt)(p)}}}function Hs(M,p,c){var u;(0,r.FIv)(M,tr,function(P){return c(3,u=P)});var y=p.node,S=(0,l.x)(),E=["br","hr","img","input","link","meta"];return(0,l.H3)(function(){na.use()}),(0,l.ev)(function(){na.unuse()}),M.$$set=function(P){"node"in P&&c(0,y=P.node)},M.$$.update=function(){9&M.$$.dirty&&y&&(c(0,y._isActived=y===u,y),c(0,y._isNullEndTag=function(P){return E.indexOf(P.nodeName)>-1}(y),y),c(0,y._isSingleLine=y.childNodes.length===0||y._isNullEndTag,y))},[y,function(P){return P.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"")},function(){y._isNullEndTag||(c(0,y._isExpand=!y._isExpand,y),S("toggleNode",{node:y}))},u,function(P){r.cKT.call(this,M,P)}]}var va=function(M){function p(c){var u;return u=M.call(this)||this,(0,r.S1n)((0,o.Z)(u),c,Hs,Vs,r.N8,{node:0}),u}return(0,a.Z)(p,M),(0,s.Z)(p,[{key:"node",get:function(){return this.$$.ctx[0]},set:function(c){this.$$set({node:c}),(0,r.yl1)()}}]),p}(r.f_C),Ws=va;function $s(M){var p,c,u;return(c=new Ws({props:{node:M[0]}})).$on("toggleNode",M[1]),{c:function(){p=(0,r.bGB)("div"),(0,r.YCL)(c.$$.fragment),(0,r.Ljt)(p,"class","vc-plugin-content")},m:function(y,S){(0,r.$Tr)(y,p,S),(0,r.yef)(c,p,null),u=!0},p:function(y,S){var E={};1&S[0]&&(E.node=y[0]),c.$set(E)},i:function(y){u||((0,r.Ui)(c.$$.fragment,y),u=!0)},o:function(y){(0,r.etI)(c.$$.fragment,y),u=!1},d:function(y){y&&(0,r.ogt)(p),(0,r.vpE)(c)}}}function js(M,p,c){var u;return(0,r.FIv)(M,cr,function(y){return c(0,u=y)}),[u,function(y){r.cKT.call(this,M,y)}]}var Xs=function(M){function p(c){var u;return u=M.call(this)||this,(0,r.S1n)((0,o.Z)(u),c,js,$s,r.N8,{}),u}return(0,a.Z)(p,M),p}(r.f_C),qs=Xs,xa=function(M){function p(u,y,S){var E;return S===void 0&&(S={}),(E=M.call(this,u,y,qs,S)||this).isInited=!1,E.observer=void 0,E.nodeMap=void 0,E}(0,a.Z)(p,M);var c=p.prototype;return c.onShow=function(){this.isInited||this._init()},c.onRemove=function(){M.prototype.onRemove.call(this),this.isInited&&(this.observer.disconnect(),this.isInited=!1,this.nodeMap=void 0,cr.set(void 0))},c.onAddTool=function(u){var y=this;u([{name:"Expand",global:!1,onClick:function(S){y._expandActivedNode()}},{name:"Collapse",global:!1,onClick:function(S){y._collapseActivedNode()}}])},c._init=function(){var u=this;this.isInited=!0,this.nodeMap=new WeakMap;var y=this._generateVNode(document.documentElement);y._isExpand=!0,tr.set(y),cr.set(y),this.compInstance.$on("toggleNode",function(S){tr.set(S.detail.node)}),this.observer=new(Fs())(function(S){for(var E=0;E<S.length;E++){var P=S[E];u._isInVConsole(P.target)||u._handleMutation(P)}}),this.observer.observe(document.documentElement,{attributes:!0,childList:!0,characterData:!0,subtree:!0})},c._handleMutation=function(u){switch(u.type){case"childList":u.removedNodes.length>0&&this._onChildRemove(u),u.addedNodes.length>0&&this._onChildAdd(u);break;case"attributes":this._onAttributesChange(u);break;case"characterData":this._onCharacterDataChange(u)}},c._onChildRemove=function(u){var y=this.nodeMap.get(u.target);if(y){for(var S=0;S<u.removedNodes.length;S++){var E=this.nodeMap.get(u.removedNodes[S]);if(E){for(var P=0;P<y.childNodes.length;P++)if(y.childNodes[P]===E){y.childNodes.splice(P,1);break}this.nodeMap.delete(u.removedNodes[S])}}this._refreshStore()}},c._onChildAdd=function(u){var y=this.nodeMap.get(u.target);if(y){for(var S=0;S<u.addedNodes.length;S++){var E=u.addedNodes[S],P=this._generateVNode(E);if(P){var k=void 0,j=E;do{if(j.nextSibling===null)break;j.nodeType===Node.ELEMENT_NODE&&(k=this.nodeMap.get(j.nextSibling)||void 0),j=j.nextSibling}while(k===void 0);if(k===void 0)y.childNodes.push(P);else for(var te=0;te<y.childNodes.length;te++)if(y.childNodes[te]===k){y.childNodes.splice(te,0,P);break}}}this._refreshStore()}},c._onAttributesChange=function(u){this._updateVNodeAttributes(u.target),this._refreshStore()},c._onCharacterDataChange=function(u){var y=this.nodeMap.get(u.target);y&&(y.textContent=u.target.textContent,this._refreshStore())},c._generateVNode=function(u){if(!this._isIgnoredNode(u)){var y={nodeType:u.nodeType,nodeName:u.nodeName.toLowerCase(),textContent:"",id:"",className:"",attributes:[],childNodes:[]};if(this.nodeMap.set(u,y),y.nodeType!=u.TEXT_NODE&&y.nodeType!=u.DOCUMENT_TYPE_NODE||(y.textContent=u.textContent),u.childNodes.length>0){y.childNodes=[];for(var S=0;S<u.childNodes.length;S++){var E=this._generateVNode(u.childNodes[S]);E&&y.childNodes.push(E)}}return this._updateVNodeAttributes(u),y}},c._updateVNodeAttributes=function(u){var y=this.nodeMap.get(u);if(y&&u instanceof Element&&(y.id=u.id||"",y.className=u.className||"",u.hasAttributes&&u.hasAttributes())){y.attributes=[];for(var S=0;S<u.attributes.length;S++)y.attributes.push({name:u.attributes[S].name,value:u.attributes[S].value||""})}},c._expandActivedNode=function(){var u=(0,jn.U2)(tr);if(u._isExpand)for(var y=0;y<u.childNodes.length;y++)u.childNodes[y]._isExpand=!0;else u._isExpand=!0;this._refreshStore()},c._collapseActivedNode=function(){var u=(0,jn.U2)(tr);if(u._isExpand){for(var y=!1,S=0;S<u.childNodes.length;S++)u.childNodes[S]._isExpand&&(y=!0,u.childNodes[S]._isExpand=!1);y||(u._isExpand=!1),this._refreshStore()}},c._isIgnoredNode=function(u){if(u.nodeType===u.TEXT_NODE){if(u.textContent.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$|\n+/g,"")==="")return!0}else if(u.nodeType===u.COMMENT_NODE)return!0;return!1},c._isInVConsole=function(u){for(var y=u;y!==void 0;){if(y.id=="__vconsole")return!0;y=y.parentElement||void 0}return!1},c._refreshStore=function(){cr.update(function(u){return u})},p}(vt);function ya(M,p,c,u,y,S,E){try{var P=M[S](E),k=P.value}catch(j){return void c(j)}P.done?p(k):Promise.resolve(k).then(u,y)}function Yi(M){return function(){var p=this,c=arguments;return new Promise(function(u,y){var S=M.apply(p,c);function E(k){ya(S,u,y,E,P,"next",k)}function P(k){ya(S,u,y,E,P,"throw",k)}E(void 0)})}}var Ks=__webpack_require__(8270);function ba(M,p){var c=Object.keys(M);if(Object.getOwnPropertySymbols){var u=Object.getOwnPropertySymbols(M);p&&(u=u.filter(function(y){return Object.getOwnPropertyDescriptor(M,y).enumerable})),c.push.apply(c,u)}return c}function Ma(M){for(var p=1;p<arguments.length;p++){var c=arguments[p]!=null?arguments[p]:{};p%2?ba(Object(c),!0).forEach(function(u){(0,Ks.Z)(M,u,c[u])}):Object.getOwnPropertyDescriptors?Object.defineProperties(M,Object.getOwnPropertyDescriptors(c)):ba(Object(c)).forEach(function(u){Object.defineProperty(M,u,Object.getOwnPropertyDescriptor(c,u))})}return M}var Sa=function(M){if(!M||M.length===0)return{};for(var p={},c=M.split(";"),u=0;u<c.length;u++){var y=c[u].indexOf("=");if(!(y<0)){var S=c[u].substring(0,y).replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,""),E=c[u].substring(y+1,c[u].length);try{S=decodeURIComponent(S)}catch{}try{E=decodeURIComponent(E)}catch{}p[S]=E}}return p},Ta=function(M,p,c){typeof document<"u"&&document.cookie!==void 0&&(document.cookie=encodeURIComponent(M)+"="+encodeURIComponent(p)+function(u){u===void 0&&(u={});var y=u,S=y.path,E=y.domain,P=y.expires,k=y.secure,j=y.sameSite,te=["none","lax","strict"].indexOf((j||"").toLowerCase())>-1?j:null;return[S==null?"":";path="+S,E==null?"":";domain="+E,P==null?"":";expires="+P.toUTCString(),k===void 0||k===!1?"":";secure",te===null?"":";SameSite="+te].join("")}(c))},La=function(){return typeof document>"u"||document.cookie===void 0?"":document.cookie},Ys=function(){function M(){}var p=M.prototype;return p.key=function(c){return c<this.keys.length?this.keys[c]:null},p.setItem=function(c,u,y){Ta(c,u,y)},p.getItem=function(c){var u=Sa(La());return Object.prototype.hasOwnProperty.call(u,c)?u[c]:null},p.removeItem=function(c,u){for(var y,S,E=["","/"],P=((y=location)==null||(S=y.hostname)==null?void 0:S.split("."))||[];P.length>1;)E.push(P.join(".")),P.shift();for(var k=0;k<E.length;k++)for(var j,te,fe=((j=location)==null||(te=j.pathname)==null?void 0:te.split("/"))||[],re="";fe.length>0;){re+=(re==="/"?"":"/")+fe.shift();var Me=Ma(Ma({},u),{},{path:re,domain:E[k],expires:new Date(0)});Ta(c,"",Me)}},p.clear=function(){for(var c=[].concat(this.keys),u=0;u<c.length;u++)this.removeItem(c[u])},(0,s.Z)(M,[{key:"length",get:function(){return this.keys.length}},{key:"keys",get:function(){var c=Sa(La());return Object.keys(c).sort()}}]),M}(),Zs=function(){function M(){this.keys=[],this.currentSize=0,this.limitSize=0}var p=M.prototype;return p.key=function(c){return c<this.keys.length?this.keys[c]:null},p.prepare=function(){var c=Yi(Rn().mark(function u(){var y=this;return Rn().wrap(function(S){for(;;)switch(S.prev=S.next){case 0:return S.abrupt("return",new Promise(function(E,P){(0,e.qt)("getStorageInfo",{success:function(k){y.keys=k?k.keys.sort():[],y.currentSize=k?k.currentSize:0,y.limitSize=k?k.limitSize:0,E(!0)},fail:function(){P(!1)}})}));case 1:case"end":return S.stop()}},u)}));return function(){return c.apply(this,arguments)}}(),p.getItem=function(c){return new Promise(function(u,y){(0,e.qt)("getStorage",{key:c,success:function(S){var E=S.data;if(typeof S.data=="object")try{E=JSON.stringify(S.data)}catch{}u(E)},fail:function(S){y(S)}})})},p.setItem=function(c,u){return new Promise(function(y,S){(0,e.qt)("setStorage",{key:c,data:u,success:function(E){y(E)},fail:function(E){S(E)}})})},p.removeItem=function(c){return new Promise(function(u,y){(0,e.qt)("removeStorage",{key:c,success:function(S){u(S)},fail:function(S){y(S)}})})},p.clear=function(){return new Promise(function(c,u){(0,e.qt)("clearStorage",{success:function(y){c(y)},fail:function(y){u(y)}})})},(0,s.Z)(M,[{key:"length",get:function(){return this.keys.length}}]),M}(),Yn={updateTime:(0,jn.fZ)(0),activedName:(0,jn.fZ)(null),defaultStorages:(0,jn.fZ)(["cookies","localStorage","sessionStorage"])},hr=function(M){function p(){var u;return(u=M.call(this)||this).storage=new Map,Yn.activedName.subscribe(function(y){var S=(0,jn.U2)(Yn.defaultStorages);S.length>0&&S.indexOf(y)===-1&&Yn.activedName.set(S[0])}),Yn.defaultStorages.subscribe(function(y){y.indexOf((0,jn.U2)(Yn.activedName))===-1&&Yn.activedName.set(y[0]),u.updateEnabledStorages()}),u}(0,a.Z)(p,M);var c=p.prototype;return c.getItem=function(){var u=Yi(Rn().mark(function y(S){return Rn().wrap(function(E){for(;;)switch(E.prev=E.next){case 0:if(this.activedStorage){E.next=2;break}return E.abrupt("return","");case 2:return E.next=4,this.promisify(this.activedStorage.getItem(S));case 4:return E.abrupt("return",E.sent);case 5:case"end":return E.stop()}},y,this)}));return function(y){return u.apply(this,arguments)}}(),c.setItem=function(){var u=Yi(Rn().mark(function y(S,E){var P;return Rn().wrap(function(k){for(;;)switch(k.prev=k.next){case 0:if(this.activedStorage){k.next=2;break}return k.abrupt("return");case 2:return k.next=4,this.promisify(this.activedStorage.setItem(S,E));case 4:return P=k.sent,this.refresh(),k.abrupt("return",P);case 7:case"end":return k.stop()}},y,this)}));return function(y,S){return u.apply(this,arguments)}}(),c.removeItem=function(){var u=Yi(Rn().mark(function y(S){var E;return Rn().wrap(function(P){for(;;)switch(P.prev=P.next){case 0:if(this.activedStorage){P.next=2;break}return P.abrupt("return");case 2:return P.next=4,this.promisify(this.activedStorage.removeItem(S));case 4:return E=P.sent,this.refresh(),P.abrupt("return",E);case 7:case"end":return P.stop()}},y,this)}));return function(y){return u.apply(this,arguments)}}(),c.clear=function(){var u=Yi(Rn().mark(function y(){var S;return Rn().wrap(function(E){for(;;)switch(E.prev=E.next){case 0:if(this.activedStorage){E.next=2;break}return E.abrupt("return");case 2:return E.next=4,this.promisify(this.activedStorage.clear());case 4:return S=E.sent,this.refresh(),E.abrupt("return",S);case 7:case"end":return E.stop()}},y,this)}));return function(){return u.apply(this,arguments)}}(),c.refresh=function(){Yn.updateTime.set(Date.now())},c.getEntries=function(){var u=Yi(Rn().mark(function y(){var S,E,P,k,j;return Rn().wrap(function(te){for(;;)switch(te.prev=te.next){case 0:if(S=this.activedStorage){te.next=3;break}return te.abrupt("return",[]);case 3:if(typeof S.prepare!="function"){te.next=6;break}return te.next=6,S.prepare();case 6:E=[],P=0;case 8:if(!(P<S.length)){te.next=17;break}return k=S.key(P),te.next=12,this.getItem(k);case 12:j=te.sent,E.push([k,j]);case 14:P++,te.next=8;break;case 17:return te.abrupt("return",E);case 18:case"end":return te.stop()}},y,this)}));return function(){return u.apply(this,arguments)}}(),c.updateEnabledStorages=function(){var u=(0,jn.U2)(Yn.defaultStorages);u.indexOf("cookies")>-1?document.cookie!==void 0&&this.storage.set("cookies",new Ys):this.deleteStorage("cookies"),u.indexOf("localStorage")>-1?window.localStorage&&this.storage.set("localStorage",window.localStorage):this.deleteStorage("localStorage"),u.indexOf("sessionStorage")>-1?window.sessionStorage&&this.storage.set("sessionStorage",window.sessionStorage):this.deleteStorage("sessionStorage"),u.indexOf("wxStorage")>-1?(0,e.H_)()&&this.storage.set("wxStorage",new Zs):this.deleteStorage("wxStorage")},c.promisify=function(u){return typeof u=="string"||u==null?Promise.resolve(u):u},c.deleteStorage=function(u){this.storage.has(u)&&this.storage.delete(u)},(0,s.Z)(p,[{key:"activedStorage",get:function(){return this.storage.get((0,jn.U2)(Yn.activedName))}}]),p}(fo.N);function Ra(M,p,c){var u=M.slice();return u[20]=p[c][0],u[21]=p[c][1],u[23]=c,u}function Pa(M){var p;return{c:function(){(p=(0,r.bGB)("div")).textContent="Empty",(0,r.Ljt)(p,"class","vc-plugin-empty")},m:function(c,u){(0,r.$Tr)(c,p,u)},p:r.ZTd,d:function(c){c&&(0,r.ogt)(p)}}}function Qs(M){var p,c,u,y,S,E=M[20]+"",P=M[5](M[21])+"";return{c:function(){p=(0,r.bGB)("div"),c=(0,r.fLW)(E),u=(0,r.DhX)(),y=(0,r.bGB)("div"),S=(0,r.fLW)(P),(0,r.Ljt)(p,"class","vc-table-col"),(0,r.Ljt)(y,"class","vc-table-col vc-table-col-2")},m:function(k,j){(0,r.$Tr)(k,p,j),(0,r.R3I)(p,c),(0,r.$Tr)(k,u,j),(0,r.$Tr)(k,y,j),(0,r.R3I)(y,S)},p:function(k,j){1&j&&E!==(E=k[20]+"")&&(0,r.rTO)(c,E),1&j&&P!==(P=k[5](k[21])+"")&&(0,r.rTO)(S,P)},d:function(k){k&&(0,r.ogt)(p),k&&(0,r.ogt)(u),k&&(0,r.ogt)(y)}}}function Js(M){var p,c,u,y,S,E,P;return{c:function(){p=(0,r.bGB)("div"),c=(0,r.bGB)("textarea"),u=(0,r.DhX)(),y=(0,r.bGB)("div"),S=(0,r.bGB)("textarea"),(0,r.Ljt)(c,"class","vc-table-input"),(0,r.Ljt)(p,"class","vc-table-col"),(0,r.Ljt)(S,"class","vc-table-input"),(0,r.Ljt)(y,"class","vc-table-col vc-table-col-2")},m:function(k,j){(0,r.$Tr)(k,p,j),(0,r.R3I)(p,c),(0,r.BmG)(c,M[2]),(0,r.$Tr)(k,u,j),(0,r.$Tr)(k,y,j),(0,r.R3I)(y,S),(0,r.BmG)(S,M[3]),E||(P=[(0,r.oLt)(c,"input",M[11]),(0,r.oLt)(S,"input",M[12])],E=!0)},p:function(k,j){4&j&&(0,r.BmG)(c,k[2]),8&j&&(0,r.BmG)(S,k[3])},d:function(k){k&&(0,r.ogt)(p),k&&(0,r.ogt)(u),k&&(0,r.ogt)(y),E=!1,(0,r.j7q)(P)}}}function el(M){var p,c,u,y,S,E;return(p=new U.Z({props:{name:"delete"}})).$on("click",function(){return M[14](M[20])}),u=new be({props:{content:[M[20],M[21]].join("=")}}),(S=new U.Z({props:{name:"edit"}})).$on("click",function(){return M[15](M[20],M[21],M[23])}),{c:function(){(0,r.YCL)(p.$$.fragment),c=(0,r.DhX)(),(0,r.YCL)(u.$$.fragment),y=(0,r.DhX)(),(0,r.YCL)(S.$$.fragment)},m:function(P,k){(0,r.yef)(p,P,k),(0,r.$Tr)(P,c,k),(0,r.yef)(u,P,k),(0,r.$Tr)(P,y,k),(0,r.yef)(S,P,k),E=!0},p:function(P,k){M=P;var j={};1&k&&(j.content=[M[20],M[21]].join("=")),u.$set(j)},i:function(P){E||((0,r.Ui)(p.$$.fragment,P),(0,r.Ui)(u.$$.fragment,P),(0,r.Ui)(S.$$.fragment,P),E=!0)},o:function(P){(0,r.etI)(p.$$.fragment,P),(0,r.etI)(u.$$.fragment,P),(0,r.etI)(S.$$.fragment,P),E=!1},d:function(P){(0,r.vpE)(p,P),P&&(0,r.ogt)(c),(0,r.vpE)(u,P),P&&(0,r.ogt)(y),(0,r.vpE)(S,P)}}}function tl(M){var p,c,u,y;return(p=new U.Z({props:{name:"cancel"}})).$on("click",M[9]),(u=new U.Z({props:{name:"done"}})).$on("click",function(){return M[13](M[20])}),{c:function(){(0,r.YCL)(p.$$.fragment),c=(0,r.DhX)(),(0,r.YCL)(u.$$.fragment)},m:function(S,E){(0,r.yef)(p,S,E),(0,r.$Tr)(S,c,E),(0,r.yef)(u,S,E),y=!0},p:function(S,E){M=S},i:function(S){y||((0,r.Ui)(p.$$.fragment,S),(0,r.Ui)(u.$$.fragment,S),y=!0)},o:function(S){(0,r.etI)(p.$$.fragment,S),(0,r.etI)(u.$$.fragment,S),y=!1},d:function(S){(0,r.vpE)(p,S),S&&(0,r.ogt)(c),(0,r.vpE)(u,S)}}}function Oa(M){var p,c,u,y,S,E,P;function k(_e,Te){return _e[1]===_e[23]?Js:Qs}var j=k(M),te=j(M),fe=[tl,el],re=[];function Me(_e,Te){return _e[1]===_e[23]?0:1}return y=Me(M),S=re[y]=fe[y](M),{c:function(){p=(0,r.bGB)("div"),te.c(),c=(0,r.DhX)(),u=(0,r.bGB)("div"),S.c(),E=(0,r.DhX)(),(0,r.Ljt)(u,"class","vc-table-col vc-table-col-1 vc-table-action"),(0,r.Ljt)(p,"class","vc-table-row")},m:function(_e,Te){(0,r.$Tr)(_e,p,Te),te.m(p,null),(0,r.R3I)(p,c),(0,r.R3I)(p,u),re[y].m(u,null),(0,r.R3I)(p,E),P=!0},p:function(_e,Te){j===(j=k(_e))&&te?te.p(_e,Te):(te.d(1),(te=j(_e))&&(te.c(),te.m(p,c)));var Ae=y;(y=Me(_e))===Ae?re[y].p(_e,Te):((0,r.dvw)(),(0,r.etI)(re[Ae],1,1,function(){re[Ae]=null}),(0,r.gbL)(),(S=re[y])?S.p(_e,Te):(S=re[y]=fe[y](_e)).c(),(0,r.Ui)(S,1),S.m(u,null))},i:function(_e){P||((0,r.Ui)(S),P=!0)},o:function(_e){(0,r.etI)(S),P=!1},d:function(_e){_e&&(0,r.ogt)(p),te.d(),re[y].d()}}}function nl(M){for(var p,c,u,y,S=M[0],E=[],P=0;P<S.length;P+=1)E[P]=Oa(Ra(M,S,P));var k=function(te){return(0,r.etI)(E[te],1,1,function(){E[te]=null})},j=null;return S.length||(j=Pa()),{c:function(){p=(0,r.bGB)("div"),(c=(0,r.bGB)("div")).innerHTML=`<div class="vc-table-col">Key</div> 
    <div class="vc-table-col vc-table-col-2">Value</div> 
    <div class="vc-table-col vc-table-col-1 vc-table-action"></div>`,u=(0,r.DhX)();for(var te=0;te<E.length;te+=1)E[te].c();j&&j.c(),(0,r.Ljt)(c,"class","vc-table-row"),(0,r.Ljt)(p,"class","vc-table")},m:function(te,fe){(0,r.$Tr)(te,p,fe),(0,r.R3I)(p,c),(0,r.R3I)(p,u);for(var re=0;re<E.length;re+=1)E[re].m(p,null);j&&j.m(p,null),y=!0},p:function(te,fe){var re=fe[0];if(1007&re){var Me;for(S=te[0],Me=0;Me<S.length;Me+=1){var _e=Ra(te,S,Me);E[Me]?(E[Me].p(_e,re),(0,r.Ui)(E[Me],1)):(E[Me]=Oa(_e),E[Me].c(),(0,r.Ui)(E[Me],1),E[Me].m(p,null))}for((0,r.dvw)(),Me=S.length;Me<E.length;Me+=1)k(Me);(0,r.gbL)(),!S.length&&j?j.p(te,re):S.length?j&&(j.d(1),j=null):((j=Pa()).c(),j.m(p,null))}},i:function(te){if(!y){for(var fe=0;fe<S.length;fe+=1)(0,r.Ui)(E[fe]);y=!0}},o:function(te){E=E.filter(Boolean);for(var fe=0;fe<E.length;fe+=1)(0,r.etI)(E[fe]);y=!1},d:function(te){te&&(0,r.ogt)(p),(0,r.RMB)(E,te),j&&j.d()}}}function il(M,p,c){var u,y=this&&this.__awaiter||function(Te,Ae,Ue,Ne){return new(Ue||(Ue=Promise))(function(Xe,tn){function bt(vn){try{Sn(Ne.next(vn))}catch(zt){tn(zt)}}function gn(vn){try{Sn(Ne.throw(vn))}catch(zt){tn(zt)}}function Sn(vn){var zt;vn.done?Xe(vn.value):(zt=vn.value,zt instanceof Ue?zt:new Ue(function(Zt){Zt(zt)})).then(bt,gn)}Sn((Ne=Ne.apply(Te,Ae||[])).next())})},S=hr.getSingleton(hr,"VConsoleStorageModel"),E=Yn.updateTime;(0,r.FIv)(M,E,function(Te){return c(10,u=Te)});var P=[],k=-1,j="",te="",fe=function(){c(1,k=-1),c(2,j=""),c(3,te="")},re=function(Te){return y(void 0,void 0,void 0,Rn().mark(function Ae(){return Rn().wrap(function(Ue){for(;;)switch(Ue.prev=Ue.next){case 0:return Ue.next=2,S.removeItem(Te);case 2:case"end":return Ue.stop()}},Ae)}))},Me=function(Te){return y(void 0,void 0,void 0,Rn().mark(function Ae(){return Rn().wrap(function(Ue){for(;;)switch(Ue.prev=Ue.next){case 0:if(j===Te){Ue.next=3;break}return Ue.next=3,S.removeItem(Te);case 3:S.setItem(j,te),fe();case 5:case"end":return Ue.stop()}},Ae)}))},_e=function(Te,Ae,Ue){return y(void 0,void 0,void 0,Rn().mark(function Ne(){return Rn().wrap(function(Xe){for(;;)switch(Xe.prev=Xe.next){case 0:c(2,j=Te),c(3,te=Ae),c(1,k=Ue);case 3:case"end":return Xe.stop()}},Ne)}))};return M.$$.update=function(){1024&M.$$.dirty&&u&&y(void 0,void 0,void 0,Rn().mark(function Te(){return Rn().wrap(function(Ae){for(;;)switch(Ae.prev=Ae.next){case 0:return fe(),Ae.t0=c,Ae.next=4,S.getEntries();case 4:Ae.t1=P=Ae.sent,(0,Ae.t0)(0,Ae.t1);case 6:case"end":return Ae.stop()}},Te)}))},[P,k,j,te,E,function(Te){return(0,e.id)(Te,1024)},re,Me,_e,function(){fe()},u,function(){j=this.value,c(2,j)},function(){te=this.value,c(3,te)},function(Te){return Me(Te)},function(Te){return re(Te)},function(Te,Ae,Ue){return _e(Te,Ae,Ue)}]}var rl=function(M){function p(c){var u;return u=M.call(this)||this,(0,r.S1n)((0,o.Z)(u),c,il,nl,r.N8,{}),u}return(0,a.Z)(p,M),p}(r.f_C),ol=rl,Na=function(M){function p(u,y,S){var E;return S===void 0&&(S={}),(E=M.call(this,u,y,ol,S)||this).model=hr.getSingleton(hr,"VConsoleStorageModel"),E.onAddTopBarCallback=void 0,E}(0,a.Z)(p,M);var c=p.prototype;return c.onReady=function(){M.prototype.onReady.call(this),this.onUpdateOption()},c.onShow=function(){this.model.refresh()},c.onAddTopBar=function(u){this.onAddTopBarCallback=u,this.updateTopBar()},c.onAddTool=function(u){var y=this;u([{name:"Add",global:!1,onClick:function(){y.model.setItem("new_"+Date.now(),"new_value")}},{name:"Refresh",global:!1,onClick:function(){y.model.refresh()}},{name:"Clear",global:!1,onClick:function(){y.model.clear()}}])},c.onUpdateOption=function(){var u,y=(u=this.vConsole.option.storage)==null?void 0:u.defaultStorages;(0,e.kJ)(y)&&(y=y.length>0?y:["cookies"])!==(0,jn.U2)(Yn.defaultStorages)&&(Yn.defaultStorages.set(y),Yn.activedName.set(y[0]),this.updateTopBar())},c.updateTopBar=function(){var u=this;if(typeof this.onAddTopBarCallback=="function"){for(var y=(0,jn.U2)(Yn.defaultStorages),S=[],E=0;E<y.length;E++){var P=y[E];S.push({name:P[0].toUpperCase()+P.substring(1),data:{name:P},actived:P===(0,jn.U2)(Yn.activedName),onClick:function(k,j){var te=(0,jn.U2)(Yn.activedName);if(j.name===te)return!1;Yn.activedName.set(j.name),u.model.refresh()}})}this.onAddTopBarCallback(S)}},p}(vt),li=function(){function M(c){var u=this;if(this.version="3.15.0",this.isInited=!1,this.option={},this.compInstance=void 0,this.pluginList={},this.log=void 0,this.system=void 0,this.network=void 0,M.instance&&M.instance instanceof M)return console.debug("[vConsole] vConsole is already exists."),M.instance;if(M.instance=this,this.isInited=!1,this.option={defaultPlugins:["system","network","element","storage"],log:{},network:{},storage:{}},e.Kn(c))for(var y in c)this.option[y]=c[y];this.option.maxLogNumber!==void 0&&(this.option.log.maxLogNumber=this.option.maxLogNumber,console.debug("[vConsole] Deprecated option: `maxLogNumber`, use `log.maxLogNumber` instead.")),this.option.onClearLog!==void 0&&console.debug("[vConsole] Deprecated option: `onClearLog`."),this.option.maxNetworkNumber!==void 0&&(this.option.network.maxNetworkNumber=this.option.maxNetworkNumber,console.debug("[vConsole] Deprecated option: `maxNetworkNumber`, use `network.maxNetworkNumber` instead.")),this._addBuiltInPlugins();var S=function(){u.isInited||(u._initComponent(),u._autoRun())};if(document!==void 0)document.readyState==="loading"?n.bind(window,"DOMContentLoaded",S):S();else{var E;E=setTimeout(function P(){document&&document.readyState=="complete"?(E&&clearTimeout(E),S()):E=setTimeout(P,1)},1)}}var p=M.prototype;return p._addBuiltInPlugins=function(){this.addPlugin(new lo("default","Log"));var c=this.option.defaultPlugins,u={system:{proto:uo,name:"System"}};if(u.network={proto:ta,name:"Network"},u.element={proto:xa,name:"Element"},u.storage={proto:Na,name:"Storage"},c&&e.kJ(c))for(var y=0;y<c.length;y++){var S=u[c[y]];S?this.addPlugin(new S.proto(c[y],S.name)):console.debug("[vConsole] Unrecognized default plugin ID:",c[y])}},p._initComponent=function(){var c=this;if(!n.one("#__vconsole")){var u,y=1*e.cF("switch_x"),S=1*e.cF("switch_y");typeof this.option.target=="string"?u=document.querySelector(this.option.target):this.option.target instanceof HTMLElement&&(u=this.option.target),u instanceof HTMLElement||(u=document.documentElement),this.compInstance=new _t({target:u,props:{switchButtonPosition:{x:y,y:S}}}),this.compInstance.$on("show",function(E){E.detail.show?c.show():c.hide()}),this.compInstance.$on("changePanel",function(E){var P=E.detail.pluginId;c.showPlugin(P)})}this._updateComponentByOptions()},p._updateComponentByOptions=function(){if(this.compInstance){if(this.compInstance.theme!==this.option.theme){var c=this.option.theme;c=c!=="light"&&c!=="dark"?"":c,this.compInstance.theme=c}this.compInstance.disableScrolling!==this.option.disableLogScrolling&&(this.compInstance.disableScrolling=!!this.option.disableLogScrolling)}},p.setSwitchPosition=function(c,u){this.compInstance.switchButtonPosition={x:c,y:u}},p._autoRun=function(){for(var c in this.isInited=!0,this.pluginList)this._initPlugin(this.pluginList[c]);this._showFirstPluginWhenEmpty(),this.triggerEvent("ready")},p._showFirstPluginWhenEmpty=function(){var c=Object.keys(this.pluginList);this.compInstance.activedPluginId===""&&c.length>0&&this.showPlugin(c[0])},p.triggerEvent=function(c,u){var y=this;c="on"+c.charAt(0).toUpperCase()+c.slice(1),e.mf(this.option[c])&&setTimeout(function(){y.option[c].apply(y,u)},0)},p._initPlugin=function(c){var u=this;c.vConsole=this,this.compInstance.pluginList[c.id]={id:c.id,name:c.name,hasTabPanel:!1,tabOptions:void 0,topbarList:[],toolbarList:[]},this.compInstance.pluginList=this._reorderPluginList(this.compInstance.pluginList),c.trigger("init"),c.trigger("renderTab",function(y,S){S===void 0&&(S={});var E=u.compInstance.pluginList[c.id];E.hasTabPanel=!0,E.tabOptions=S,y&&setTimeout(function(){var P=document.querySelector("#__vc_plug_"+c.id);e.HD(y)?P.innerHTML+=y:e.mf(y.appendTo)?y.appendTo(P):e.kK(y)&&P.insertAdjacentElement("beforeend",y)},0),u.compInstance.pluginList=u.compInstance.pluginList}),c.trigger("addTopBar",function(y){if(y){for(var S=[],E=0;E<y.length;E++){var P=y[E];S.push({name:P.name||"Undefined",className:P.className||"",actived:!!P.actived,data:P.data,onClick:P.onClick})}u.compInstance.pluginList[c.id].topbarList=S,u.compInstance.pluginList=u.compInstance.pluginList}}),c.trigger("addTool",function(y){if(y){for(var S=[],E=0;E<y.length;E++){var P=y[E];S.push({name:P.name||"Undefined",global:!!P.global,data:P.data,onClick:P.onClick})}u.compInstance.pluginList[c.id].toolbarList=S,u.compInstance.pluginList=u.compInstance.pluginList}}),c.isReady=!0,c.trigger("ready")},p._triggerPluginsEvent=function(c){for(var u in this.pluginList)this.pluginList[u].isReady&&this.pluginList[u].trigger(c)},p._triggerPluginEvent=function(c,u){var y=this.pluginList[c];y&&y.isReady&&y.trigger(u)},p._reorderPluginList=function(c){var u=this;if(!e.kJ(this.option.pluginOrder))return c;for(var y=Object.keys(c).sort(function(P,k){var j=u.option.pluginOrder.indexOf(P),te=u.option.pluginOrder.indexOf(k);return j===te?0:j===-1?1:te===-1?-1:j-te}),S={},E=0;E<y.length;E++)S[y[E]]=c[y[E]];return S},p.addPlugin=function(c){return this.pluginList[c.id]!==void 0?(console.debug("[vConsole] Plugin `"+c.id+"` has already been added."),!1):(this.pluginList[c.id]=c,this.isInited&&(this._initPlugin(c),this._showFirstPluginWhenEmpty()),!0)},p.removePlugin=function(c){c=(c+"").toLowerCase();var u=this.pluginList[c];if(u===void 0)return console.debug("[vConsole] Plugin `"+c+"` does not exist."),!1;u.trigger("remove");try{delete this.pluginList[c],delete this.compInstance.pluginList[c]}catch{this.pluginList[c]=void 0,this.compInstance.pluginList[c]=void 0}return this.compInstance.pluginList=this.compInstance.pluginList,this.compInstance.activedPluginId==c&&(this.compInstance.activedPluginId="",this._showFirstPluginWhenEmpty()),!0},p.show=function(){this.isInited&&(this.compInstance.show=!0,this._triggerPluginsEvent("showConsole"))},p.hide=function(){this.isInited&&(this.compInstance.show=!1,this._triggerPluginsEvent("hideConsole"))},p.showSwitch=function(){this.isInited&&(this.compInstance.showSwitchButton=!0)},p.hideSwitch=function(){this.isInited&&(this.compInstance.showSwitchButton=!1)},p.showPlugin=function(c){this.isInited&&(this.pluginList[c]||console.debug("[vConsole] Plugin `"+c+"` does not exist."),this.compInstance.activedPluginId&&this._triggerPluginEvent(this.compInstance.activedPluginId,"hide"),this.compInstance.activedPluginId=c,this._triggerPluginEvent(this.compInstance.activedPluginId,"show"))},p.setOption=function(c,u){if(typeof c=="string"){for(var y=c.split("."),S=this.option,E=0;E<y.length-1;E++)S[y[E]]===void 0&&(S[y[E]]={}),S=S[y[E]];S[y[y.length-1]]=u,this._triggerPluginsEvent("updateOption"),this._updateComponentByOptions()}else if(e.Kn(c)){for(var P in c)this.option[P]=c[P];this._triggerPluginsEvent("updateOption"),this._updateComponentByOptions()}else console.debug("[vConsole] The first parameter of `vConsole.setOption()` must be a string or an object.")},p.destroy=function(){if(this.isInited){this.isInited=!1,M.instance=void 0;for(var c=Object.keys(this.pluginList),u=c.length-1;u>=0;u--)this.removePlugin(c[u]);this.compInstance.$destroy()}},(0,s.Z)(M,null,[{key:"instance",get:function(){return window.__VCONSOLE_INSTANCE},set:function(c){c===void 0||c instanceof M?window.__VCONSOLE_INSTANCE=c:console.debug("[vConsole] Cannot set `VConsole.instance` because the value is not the instance of VConsole.")}}]),M}();li.VConsolePlugin=void 0,li.VConsoleLogPlugin=void 0,li.VConsoleDefaultPlugin=void 0,li.VConsoleSystemPlugin=void 0,li.VConsoleNetworkPlugin=void 0,li.VConsoleElementPlugin=void 0,li.VConsoleStoragePlugin=void 0,li.VConsolePlugin=pt,li.VConsoleLogPlugin=Cr,li.VConsoleDefaultPlugin=lo,li.VConsoleSystemPlugin=uo,li.VConsoleNetworkPlugin=ta,li.VConsoleElementPlugin=xa,li.VConsoleStoragePlugin=Na;var al=li}(),__webpack_exports__=__webpack_exports__.default,__webpack_exports__}()})})(vconsole_min);const Vconsole=getDefaultExportFromCjs(vconsole_minExports);/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const REVISION="150",CullFaceNone=0,CullFaceBack=1,CullFaceFront=2,PCFShadowMap=1,PCFSoftShadowMap=2,VSMShadowMap=3,FrontSide=0,BackSide=1,DoubleSide=2,NoBlending=0,NormalBlending=1,AdditiveBlending=2,SubtractiveBlending=3,MultiplyBlending=4,CustomBlending=5,AddEquation=100,SubtractEquation=101,ReverseSubtractEquation=102,MinEquation=103,MaxEquation=104,ZeroFactor=200,OneFactor=201,SrcColorFactor=202,OneMinusSrcColorFactor=203,SrcAlphaFactor=204,OneMinusSrcAlphaFactor=205,DstAlphaFactor=206,OneMinusDstAlphaFactor=207,DstColorFactor=208,OneMinusDstColorFactor=209,SrcAlphaSaturateFactor=210,NeverDepth=0,AlwaysDepth=1,LessDepth=2,LessEqualDepth=3,EqualDepth=4,GreaterEqualDepth=5,GreaterDepth=6,NotEqualDepth=7,MultiplyOperation=0,MixOperation=1,AddOperation=2,NoToneMapping=0,LinearToneMapping=1,ReinhardToneMapping=2,CineonToneMapping=3,ACESFilmicToneMapping=4,CustomToneMapping=5,UVMapping=300,CubeReflectionMapping=301,CubeRefractionMapping=302,EquirectangularReflectionMapping=303,EquirectangularRefractionMapping=304,CubeUVReflectionMapping=306,RepeatWrapping=1e3,ClampToEdgeWrapping=1001,MirroredRepeatWrapping=1002,NearestFilter=1003,NearestMipmapNearestFilter=1004,NearestMipmapLinearFilter=1005,LinearFilter=1006,LinearMipmapNearestFilter=1007,LinearMipmapLinearFilter=1008,UnsignedByteType=1009,ByteType=1010,ShortType=1011,UnsignedShortType=1012,IntType=1013,UnsignedIntType=1014,FloatType=1015,HalfFloatType=1016,UnsignedShort4444Type=1017,UnsignedShort5551Type=1018,UnsignedInt248Type=1020,AlphaFormat=1021,RGBAFormat=1023,LuminanceFormat=1024,LuminanceAlphaFormat=1025,DepthFormat=1026,DepthStencilFormat=1027,RedFormat=1028,RedIntegerFormat=1029,RGFormat=1030,RGIntegerFormat=1031,RGBAIntegerFormat=1033,RGB_S3TC_DXT1_Format=33776,RGBA_S3TC_DXT1_Format=33777,RGBA_S3TC_DXT3_Format=33778,RGBA_S3TC_DXT5_Format=33779,RGB_PVRTC_4BPPV1_Format=35840,RGB_PVRTC_2BPPV1_Format=35841,RGBA_PVRTC_4BPPV1_Format=35842,RGBA_PVRTC_2BPPV1_Format=35843,RGB_ETC1_Format=36196,RGB_ETC2_Format=37492,RGBA_ETC2_EAC_Format=37496,RGBA_ASTC_4x4_Format=37808,RGBA_ASTC_5x4_Format=37809,RGBA_ASTC_5x5_Format=37810,RGBA_ASTC_6x5_Format=37811,RGBA_ASTC_6x6_Format=37812,RGBA_ASTC_8x5_Format=37813,RGBA_ASTC_8x6_Format=37814,RGBA_ASTC_8x8_Format=37815,RGBA_ASTC_10x5_Format=37816,RGBA_ASTC_10x6_Format=37817,RGBA_ASTC_10x8_Format=37818,RGBA_ASTC_10x10_Format=37819,RGBA_ASTC_12x10_Format=37820,RGBA_ASTC_12x12_Format=37821,RGBA_BPTC_Format=36492,RED_RGTC1_Format=36283,SIGNED_RED_RGTC1_Format=36284,RED_GREEN_RGTC2_Format=36285,SIGNED_RED_GREEN_RGTC2_Format=36286,LinearEncoding=3e3,sRGBEncoding=3001,BasicDepthPacking=3200,RGBADepthPacking=3201,TangentSpaceNormalMap=0,ObjectSpaceNormalMap=1,SRGBColorSpace="srgb",LinearSRGBColorSpace="srgb-linear",DisplayP3ColorSpace="display-p3",KeepStencilOp=7680,AlwaysStencilFunc=519,StaticDrawUsage=35044,GLSL3="300 es",_SRGBAFormat=1035;class EventDispatcher{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const o=this._listeners[e];if(o!==void 0){const a=o.indexOf(t);a!==-1&&o.splice(a,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const o=n.slice(0);for(let a=0,r=o.length;a<r;a++)o[a].call(this,e);e.target=null}}}const _lut=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"],DEG2RAD=Math.PI/180,RAD2DEG=180/Math.PI;function generateUUID(){const s=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(_lut[s&255]+_lut[s>>8&255]+_lut[s>>16&255]+_lut[s>>24&255]+"-"+_lut[e&255]+_lut[e>>8&255]+"-"+_lut[e>>16&15|64]+_lut[e>>24&255]+"-"+_lut[t&63|128]+_lut[t>>8&255]+"-"+_lut[t>>16&255]+_lut[t>>24&255]+_lut[n&255]+_lut[n>>8&255]+_lut[n>>16&255]+_lut[n>>24&255]).toLowerCase()}function clamp(s,e,t){return Math.max(e,Math.min(t,s))}function euclideanModulo(s,e){return(s%e+e)%e}function lerp(s,e,t){return(1-t)*s+t*e}function isPowerOfTwo(s){return(s&s-1)===0&&s!==0}function floorPowerOfTwo(s){return Math.pow(2,Math.floor(Math.log(s)/Math.LN2))}function denormalize(s,e){switch(e.constructor){case Float32Array:return s;case Uint16Array:return s/65535;case Uint8Array:return s/255;case Int16Array:return Math.max(s/32767,-1);case Int8Array:return Math.max(s/127,-1);default:throw new Error("Invalid component type.")}}function normalize(s,e){switch(e.constructor){case Float32Array:return s;case Uint16Array:return Math.round(s*65535);case Uint8Array:return Math.round(s*255);case Int16Array:return Math.round(s*32767);case Int8Array:return Math.round(s*127);default:throw new Error("Invalid component type.")}}class Vector2{constructor(e=0,t=0){Vector2.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,o=e.elements;return this.x=o[0]*t+o[3]*n+o[6],this.y=o[1]*t+o[4]*n+o[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),o=Math.sin(t),a=this.x-e.x,r=this.y-e.y;return this.x=a*n-r*o+e.x,this.y=a*o+r*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Matrix3{constructor(){Matrix3.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1]}set(e,t,n,o,a,r,l,d,h){const f=this.elements;return f[0]=e,f[1]=o,f[2]=l,f[3]=t,f[4]=a,f[5]=d,f[6]=n,f[7]=r,f[8]=h,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,o=t.elements,a=this.elements,r=n[0],l=n[3],d=n[6],h=n[1],f=n[4],_=n[7],g=n[2],b=n[5],w=n[8],x=o[0],v=o[3],T=o[6],D=o[1],C=o[4],I=o[7],N=o[2],F=o[5],G=o[8];return a[0]=r*x+l*D+d*N,a[3]=r*v+l*C+d*F,a[6]=r*T+l*I+d*G,a[1]=h*x+f*D+_*N,a[4]=h*v+f*C+_*F,a[7]=h*T+f*I+_*G,a[2]=g*x+b*D+w*N,a[5]=g*v+b*C+w*F,a[8]=g*T+b*I+w*G,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],o=e[2],a=e[3],r=e[4],l=e[5],d=e[6],h=e[7],f=e[8];return t*r*f-t*l*h-n*a*f+n*l*d+o*a*h-o*r*d}invert(){const e=this.elements,t=e[0],n=e[1],o=e[2],a=e[3],r=e[4],l=e[5],d=e[6],h=e[7],f=e[8],_=f*r-l*h,g=l*d-f*a,b=h*a-r*d,w=t*_+n*g+o*b;if(w===0)return this.set(0,0,0,0,0,0,0,0,0);const x=1/w;return e[0]=_*x,e[1]=(o*h-f*n)*x,e[2]=(l*n-o*r)*x,e[3]=g*x,e[4]=(f*t-o*d)*x,e[5]=(o*a-l*t)*x,e[6]=b*x,e[7]=(n*d-h*t)*x,e[8]=(r*t-n*a)*x,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,o,a,r,l){const d=Math.cos(a),h=Math.sin(a);return this.set(n*d,n*h,-n*(d*r+h*l)+r+e,-o*h,o*d,-o*(-h*r+d*l)+l+t,0,0,1),this}scale(e,t){return this.premultiply(_m3.makeScale(e,t)),this}rotate(e){return this.premultiply(_m3.makeRotation(-e)),this}translate(e,t){return this.premultiply(_m3.makeTranslation(e,t)),this}makeTranslation(e,t){return this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let o=0;o<9;o++)if(t[o]!==n[o])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const _m3=new Matrix3;function arrayNeedsUint32(s){for(let e=s.length-1;e>=0;--e)if(s[e]>=65535)return!0;return!1}function createElementNS(s){return document.createElementNS("http://www.w3.org/1999/xhtml",s)}class Quaternion{constructor(e=0,t=0,n=0,o=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=o}static slerpFlat(e,t,n,o,a,r,l){let d=n[o+0],h=n[o+1],f=n[o+2],_=n[o+3];const g=a[r+0],b=a[r+1],w=a[r+2],x=a[r+3];if(l===0){e[t+0]=d,e[t+1]=h,e[t+2]=f,e[t+3]=_;return}if(l===1){e[t+0]=g,e[t+1]=b,e[t+2]=w,e[t+3]=x;return}if(_!==x||d!==g||h!==b||f!==w){let v=1-l;const T=d*g+h*b+f*w+_*x,D=T>=0?1:-1,C=1-T*T;if(C>Number.EPSILON){const N=Math.sqrt(C),F=Math.atan2(N,T*D);v=Math.sin(v*F)/N,l=Math.sin(l*F)/N}const I=l*D;if(d=d*v+g*I,h=h*v+b*I,f=f*v+w*I,_=_*v+x*I,v===1-l){const N=1/Math.sqrt(d*d+h*h+f*f+_*_);d*=N,h*=N,f*=N,_*=N}}e[t]=d,e[t+1]=h,e[t+2]=f,e[t+3]=_}static multiplyQuaternionsFlat(e,t,n,o,a,r){const l=n[o],d=n[o+1],h=n[o+2],f=n[o+3],_=a[r],g=a[r+1],b=a[r+2],w=a[r+3];return e[t]=l*w+f*_+d*b-h*g,e[t+1]=d*w+f*g+h*_-l*b,e[t+2]=h*w+f*b+l*g-d*_,e[t+3]=f*w-l*_-d*g-h*b,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,o){return this._x=e,this._y=t,this._z=n,this._w=o,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){const n=e._x,o=e._y,a=e._z,r=e._order,l=Math.cos,d=Math.sin,h=l(n/2),f=l(o/2),_=l(a/2),g=d(n/2),b=d(o/2),w=d(a/2);switch(r){case"XYZ":this._x=g*f*_+h*b*w,this._y=h*b*_-g*f*w,this._z=h*f*w+g*b*_,this._w=h*f*_-g*b*w;break;case"YXZ":this._x=g*f*_+h*b*w,this._y=h*b*_-g*f*w,this._z=h*f*w-g*b*_,this._w=h*f*_+g*b*w;break;case"ZXY":this._x=g*f*_-h*b*w,this._y=h*b*_+g*f*w,this._z=h*f*w+g*b*_,this._w=h*f*_-g*b*w;break;case"ZYX":this._x=g*f*_-h*b*w,this._y=h*b*_+g*f*w,this._z=h*f*w-g*b*_,this._w=h*f*_+g*b*w;break;case"YZX":this._x=g*f*_+h*b*w,this._y=h*b*_+g*f*w,this._z=h*f*w-g*b*_,this._w=h*f*_-g*b*w;break;case"XZY":this._x=g*f*_-h*b*w,this._y=h*b*_-g*f*w,this._z=h*f*w+g*b*_,this._w=h*f*_+g*b*w;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+r)}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,o=Math.sin(n);return this._x=e.x*o,this._y=e.y*o,this._z=e.z*o,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],o=t[4],a=t[8],r=t[1],l=t[5],d=t[9],h=t[2],f=t[6],_=t[10],g=n+l+_;if(g>0){const b=.5/Math.sqrt(g+1);this._w=.25/b,this._x=(f-d)*b,this._y=(a-h)*b,this._z=(r-o)*b}else if(n>l&&n>_){const b=2*Math.sqrt(1+n-l-_);this._w=(f-d)/b,this._x=.25*b,this._y=(o+r)/b,this._z=(a+h)/b}else if(l>_){const b=2*Math.sqrt(1+l-n-_);this._w=(a-h)/b,this._x=(o+r)/b,this._y=.25*b,this._z=(d+f)/b}else{const b=2*Math.sqrt(1+_-n-l);this._w=(r-o)/b,this._x=(a+h)/b,this._y=(d+f)/b,this._z=.25*b}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(clamp(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const o=Math.min(1,t/n);return this.slerp(e,o),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,o=e._y,a=e._z,r=e._w,l=t._x,d=t._y,h=t._z,f=t._w;return this._x=n*f+r*l+o*h-a*d,this._y=o*f+r*d+a*l-n*h,this._z=a*f+r*h+n*d-o*l,this._w=r*f-n*l-o*d-a*h,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,o=this._y,a=this._z,r=this._w;let l=r*e._w+n*e._x+o*e._y+a*e._z;if(l<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,l=-l):this.copy(e),l>=1)return this._w=r,this._x=n,this._y=o,this._z=a,this;const d=1-l*l;if(d<=Number.EPSILON){const b=1-t;return this._w=b*r+t*this._w,this._x=b*n+t*this._x,this._y=b*o+t*this._y,this._z=b*a+t*this._z,this.normalize(),this._onChangeCallback(),this}const h=Math.sqrt(d),f=Math.atan2(h,l),_=Math.sin((1-t)*f)/h,g=Math.sin(t*f)/h;return this._w=r*_+this._w*g,this._x=n*_+this._x*g,this._y=o*_+this._y*g,this._z=a*_+this._z*g,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),o=2*Math.PI*Math.random(),a=2*Math.PI*Math.random();return this.set(t*Math.cos(o),n*Math.sin(a),n*Math.cos(a),t*Math.sin(o))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class Vector3{constructor(e=0,t=0,n=0){Vector3.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(_quaternion$4.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(_quaternion$4.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,o=this.z,a=e.elements;return this.x=a[0]*t+a[3]*n+a[6]*o,this.y=a[1]*t+a[4]*n+a[7]*o,this.z=a[2]*t+a[5]*n+a[8]*o,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,o=this.z,a=e.elements,r=1/(a[3]*t+a[7]*n+a[11]*o+a[15]);return this.x=(a[0]*t+a[4]*n+a[8]*o+a[12])*r,this.y=(a[1]*t+a[5]*n+a[9]*o+a[13])*r,this.z=(a[2]*t+a[6]*n+a[10]*o+a[14])*r,this}applyQuaternion(e){const t=this.x,n=this.y,o=this.z,a=e.x,r=e.y,l=e.z,d=e.w,h=d*t+r*o-l*n,f=d*n+l*t-a*o,_=d*o+a*n-r*t,g=-a*t-r*n-l*o;return this.x=h*d+g*-a+f*-l-_*-r,this.y=f*d+g*-r+_*-a-h*-l,this.z=_*d+g*-l+h*-r-f*-a,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,o=this.z,a=e.elements;return this.x=a[0]*t+a[4]*n+a[8]*o,this.y=a[1]*t+a[5]*n+a[9]*o,this.z=a[2]*t+a[6]*n+a[10]*o,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,o=e.y,a=e.z,r=t.x,l=t.y,d=t.z;return this.x=o*d-a*l,this.y=a*r-n*d,this.z=n*l-o*r,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return _vector$d.copy(this).projectOnVector(e),this.sub(_vector$d)}reflect(e){return this.sub(_vector$d.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(clamp(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,o=this.z-e.z;return t*t+n*n+o*o}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const o=Math.sin(t)*e;return this.x=o*Math.sin(n),this.y=Math.cos(t)*e,this.z=o*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),o=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=o,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,n=Math.sqrt(1-e**2);return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const _vector$d=new Vector3,_quaternion$4=new Quaternion;function SRGBToLinear(s){return s<.04045?s*.0773993808:Math.pow(s*.9478672986+.0521327014,2.4)}function LinearToSRGB(s){return s<.0031308?s*12.92:1.055*Math.pow(s,.41666)-.055}const LINEAR_SRGB_TO_LINEAR_DISPLAY_P3=new Matrix3().fromArray([.8224621,.0331941,.0170827,.177538,.9668058,.0723974,-1e-7,1e-7,.9105199]),LINEAR_DISPLAY_P3_TO_LINEAR_SRGB=new Matrix3().fromArray([1.2249401,-.0420569,-.0196376,-.2249404,1.0420571,-.0786361,1e-7,0,1.0982735]),_vector$c=new Vector3;function DisplayP3ToLinearSRGB(s){return s.convertSRGBToLinear(),_vector$c.set(s.r,s.g,s.b).applyMatrix3(LINEAR_DISPLAY_P3_TO_LINEAR_SRGB),s.setRGB(_vector$c.x,_vector$c.y,_vector$c.z)}function LinearSRGBToDisplayP3(s){return _vector$c.set(s.r,s.g,s.b).applyMatrix3(LINEAR_SRGB_TO_LINEAR_DISPLAY_P3),s.setRGB(_vector$c.x,_vector$c.y,_vector$c.z).convertLinearToSRGB()}const TO_LINEAR={[LinearSRGBColorSpace]:s=>s,[SRGBColorSpace]:s=>s.convertSRGBToLinear(),[DisplayP3ColorSpace]:DisplayP3ToLinearSRGB},FROM_LINEAR={[LinearSRGBColorSpace]:s=>s,[SRGBColorSpace]:s=>s.convertLinearToSRGB(),[DisplayP3ColorSpace]:LinearSRGBToDisplayP3},ColorManagement={enabled:!1,get legacyMode(){return console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),!this.enabled},set legacyMode(s){console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),this.enabled=!s},get workingColorSpace(){return LinearSRGBColorSpace},set workingColorSpace(s){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(s,e,t){if(this.enabled===!1||e===t||!e||!t)return s;const n=TO_LINEAR[e],o=FROM_LINEAR[t];if(n===void 0||o===void 0)throw new Error(`Unsupported color space conversion, "${e}" to "${t}".`);return o(n(s))},fromWorkingColorSpace:function(s,e){return this.convert(s,this.workingColorSpace,e)},toWorkingColorSpace:function(s,e){return this.convert(s,e,this.workingColorSpace)}};let _canvas;class ImageUtils{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{_canvas===void 0&&(_canvas=createElementNS("canvas")),_canvas.width=e.width,_canvas.height=e.height;const n=_canvas.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=_canvas}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=createElementNS("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const o=n.getImageData(0,0,e.width,e.height),a=o.data;for(let r=0;r<a.length;r++)a[r]=SRGBToLinear(a[r]/255)*255;return n.putImageData(o,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(SRGBToLinear(t[n]/255)*255):t[n]=SRGBToLinear(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}class Source{constructor(e=null){this.isSource=!0,this.uuid=generateUUID(),this.data=e,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},o=this.data;if(o!==null){let a;if(Array.isArray(o)){a=[];for(let r=0,l=o.length;r<l;r++)o[r].isDataTexture?a.push(serializeImage(o[r].image)):a.push(serializeImage(o[r]))}else a=serializeImage(o);n.url=a}return t||(e.images[this.uuid]=n),n}}function serializeImage(s){return typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&s instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&s instanceof ImageBitmap?ImageUtils.getDataURL(s):s.data?{data:Array.from(s.data),width:s.width,height:s.height,type:s.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let textureId=0;class Texture extends EventDispatcher{constructor(e=Texture.DEFAULT_IMAGE,t=Texture.DEFAULT_MAPPING,n=ClampToEdgeWrapping,o=ClampToEdgeWrapping,a=LinearFilter,r=LinearMipmapLinearFilter,l=RGBAFormat,d=UnsignedByteType,h=Texture.DEFAULT_ANISOTROPY,f=LinearEncoding){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:textureId++}),this.uuid=generateUUID(),this.name="",this.source=new Source(e),this.mipmaps=[],this.mapping=t,this.wrapS=n,this.wrapT=o,this.magFilter=a,this.minFilter=r,this.anisotropy=h,this.format=l,this.internalFormat=null,this.type=d,this.offset=new Vector2(0,0),this.repeat=new Vector2(1,1),this.center=new Vector2(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Matrix3,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=f,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==UVMapping)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case RepeatWrapping:e.x=e.x-Math.floor(e.x);break;case ClampToEdgeWrapping:e.x=e.x<0?0:1;break;case MirroredRepeatWrapping:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case RepeatWrapping:e.y=e.y-Math.floor(e.y);break;case ClampToEdgeWrapping:e.y=e.y<0?0:1;break;case MirroredRepeatWrapping:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}}Texture.DEFAULT_IMAGE=null;Texture.DEFAULT_MAPPING=UVMapping;Texture.DEFAULT_ANISOTROPY=1;class Vector4{constructor(e=0,t=0,n=0,o=1){Vector4.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=o}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,o){return this.x=e,this.y=t,this.z=n,this.w=o,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,o=this.z,a=this.w,r=e.elements;return this.x=r[0]*t+r[4]*n+r[8]*o+r[12]*a,this.y=r[1]*t+r[5]*n+r[9]*o+r[13]*a,this.z=r[2]*t+r[6]*n+r[10]*o+r[14]*a,this.w=r[3]*t+r[7]*n+r[11]*o+r[15]*a,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,o,a;const d=e.elements,h=d[0],f=d[4],_=d[8],g=d[1],b=d[5],w=d[9],x=d[2],v=d[6],T=d[10];if(Math.abs(f-g)<.01&&Math.abs(_-x)<.01&&Math.abs(w-v)<.01){if(Math.abs(f+g)<.1&&Math.abs(_+x)<.1&&Math.abs(w+v)<.1&&Math.abs(h+b+T-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const C=(h+1)/2,I=(b+1)/2,N=(T+1)/2,F=(f+g)/4,G=(_+x)/4,L=(w+v)/4;return C>I&&C>N?C<.01?(n=0,o=.707106781,a=.707106781):(n=Math.sqrt(C),o=F/n,a=G/n):I>N?I<.01?(n=.707106781,o=0,a=.707106781):(o=Math.sqrt(I),n=F/o,a=L/o):N<.01?(n=.707106781,o=.707106781,a=0):(a=Math.sqrt(N),n=G/a,o=L/a),this.set(n,o,a,t),this}let D=Math.sqrt((v-w)*(v-w)+(_-x)*(_-x)+(g-f)*(g-f));return Math.abs(D)<.001&&(D=1),this.x=(v-w)/D,this.y=(_-x)/D,this.z=(g-f)/D,this.w=Math.acos((h+b+T-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class WebGLRenderTarget extends EventDispatcher{constructor(e=1,t=1,n={}){super(),this.isWebGLRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new Vector4(0,0,e,t),this.scissorTest=!1,this.viewport=new Vector4(0,0,e,t);const o={width:e,height:t,depth:1};this.texture=new Texture(o,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.internalFormat=n.internalFormat!==void 0?n.internalFormat:null,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:LinearFilter,this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!1,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null,this.samples=n.samples!==void 0?n.samples:0}setSize(e,t,n=1){(this.width!==e||this.height!==t||this.depth!==n)&&(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new Source(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class DataArrayTexture extends Texture{constructor(e=null,t=1,n=1,o=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:o},this.magFilter=NearestFilter,this.minFilter=NearestFilter,this.wrapR=ClampToEdgeWrapping,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Data3DTexture extends Texture{constructor(e=null,t=1,n=1,o=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:o},this.magFilter=NearestFilter,this.minFilter=NearestFilter,this.wrapR=ClampToEdgeWrapping,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Box3{constructor(e=new Vector3(1/0,1/0,1/0),t=new Vector3(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=1/0,n=1/0,o=1/0,a=-1/0,r=-1/0,l=-1/0;for(let d=0,h=e.length;d<h;d+=3){const f=e[d],_=e[d+1],g=e[d+2];f<t&&(t=f),_<n&&(n=_),g<o&&(o=g),f>a&&(a=f),_>r&&(r=_),g>l&&(l=g)}return this.min.set(t,n,o),this.max.set(a,r,l),this}setFromBufferAttribute(e){let t=1/0,n=1/0,o=1/0,a=-1/0,r=-1/0,l=-1/0;for(let d=0,h=e.count;d<h;d++){const f=e.getX(d),_=e.getY(d),g=e.getZ(d);f<t&&(t=f),_<n&&(n=_),g<o&&(o=g),f>a&&(a=f),_>r&&(r=_),g>l&&(l=g)}return this.min.set(t,n,o),this.max.set(a,r,l),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=_vector$b.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(n!==void 0)if(t&&n.attributes!=null&&n.attributes.position!==void 0){const a=n.attributes.position;for(let r=0,l=a.count;r<l;r++)_vector$b.fromBufferAttribute(a,r).applyMatrix4(e.matrixWorld),this.expandByPoint(_vector$b)}else n.boundingBox===null&&n.computeBoundingBox(),_box$3.copy(n.boundingBox),_box$3.applyMatrix4(e.matrixWorld),this.union(_box$3);const o=e.children;for(let a=0,r=o.length;a<r;a++)this.expandByObject(o[a],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,_vector$b),_vector$b.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(_center),_extents.subVectors(this.max,_center),_v0$2.subVectors(e.a,_center),_v1$7.subVectors(e.b,_center),_v2$4.subVectors(e.c,_center),_f0.subVectors(_v1$7,_v0$2),_f1.subVectors(_v2$4,_v1$7),_f2.subVectors(_v0$2,_v2$4);let t=[0,-_f0.z,_f0.y,0,-_f1.z,_f1.y,0,-_f2.z,_f2.y,_f0.z,0,-_f0.x,_f1.z,0,-_f1.x,_f2.z,0,-_f2.x,-_f0.y,_f0.x,0,-_f1.y,_f1.x,0,-_f2.y,_f2.x,0];return!satForAxes(t,_v0$2,_v1$7,_v2$4,_extents)||(t=[1,0,0,0,1,0,0,0,1],!satForAxes(t,_v0$2,_v1$7,_v2$4,_extents))?!1:(_triangleNormal.crossVectors(_f0,_f1),t=[_triangleNormal.x,_triangleNormal.y,_triangleNormal.z],satForAxes(t,_v0$2,_v1$7,_v2$4,_extents))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,_vector$b).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(_vector$b).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(_points[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),_points[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),_points[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),_points[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),_points[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),_points[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),_points[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),_points[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(_points),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const _points=[new Vector3,new Vector3,new Vector3,new Vector3,new Vector3,new Vector3,new Vector3,new Vector3],_vector$b=new Vector3,_box$3=new Box3,_v0$2=new Vector3,_v1$7=new Vector3,_v2$4=new Vector3,_f0=new Vector3,_f1=new Vector3,_f2=new Vector3,_center=new Vector3,_extents=new Vector3,_triangleNormal=new Vector3,_testAxis=new Vector3;function satForAxes(s,e,t,n,o){for(let a=0,r=s.length-3;a<=r;a+=3){_testAxis.fromArray(s,a);const l=o.x*Math.abs(_testAxis.x)+o.y*Math.abs(_testAxis.y)+o.z*Math.abs(_testAxis.z),d=e.dot(_testAxis),h=t.dot(_testAxis),f=n.dot(_testAxis);if(Math.max(-Math.max(d,h,f),Math.min(d,h,f))>l)return!1}return!0}const _box$2=new Box3,_v1$6=new Vector3,_v2$3=new Vector3;class Sphere{constructor(e=new Vector3,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):_box$2.setFromPoints(e).getCenter(n);let o=0;for(let a=0,r=e.length;a<r;a++)o=Math.max(o,n.distanceToSquared(e[a]));return this.radius=Math.sqrt(o),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;_v1$6.subVectors(e,this.center);const t=_v1$6.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),o=(n-this.radius)*.5;this.center.addScaledVector(_v1$6,o/n),this.radius+=o}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(_v2$3.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(_v1$6.copy(e.center).add(_v2$3)),this.expandByPoint(_v1$6.copy(e.center).sub(_v2$3))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const _vector$a=new Vector3,_segCenter=new Vector3,_segDir=new Vector3,_diff=new Vector3,_edge1=new Vector3,_edge2=new Vector3,_normal$1=new Vector3;class Ray{constructor(e=new Vector3,t=new Vector3(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,_vector$a)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=_vector$a.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(_vector$a.copy(this.origin).addScaledVector(this.direction,t),_vector$a.distanceToSquared(e))}distanceSqToSegment(e,t,n,o){_segCenter.copy(e).add(t).multiplyScalar(.5),_segDir.copy(t).sub(e).normalize(),_diff.copy(this.origin).sub(_segCenter);const a=e.distanceTo(t)*.5,r=-this.direction.dot(_segDir),l=_diff.dot(this.direction),d=-_diff.dot(_segDir),h=_diff.lengthSq(),f=Math.abs(1-r*r);let _,g,b,w;if(f>0)if(_=r*d-l,g=r*l-d,w=a*f,_>=0)if(g>=-w)if(g<=w){const x=1/f;_*=x,g*=x,b=_*(_+r*g+2*l)+g*(r*_+g+2*d)+h}else g=a,_=Math.max(0,-(r*g+l)),b=-_*_+g*(g+2*d)+h;else g=-a,_=Math.max(0,-(r*g+l)),b=-_*_+g*(g+2*d)+h;else g<=-w?(_=Math.max(0,-(-r*a+l)),g=_>0?-a:Math.min(Math.max(-a,-d),a),b=-_*_+g*(g+2*d)+h):g<=w?(_=0,g=Math.min(Math.max(-a,-d),a),b=g*(g+2*d)+h):(_=Math.max(0,-(r*a+l)),g=_>0?a:Math.min(Math.max(-a,-d),a),b=-_*_+g*(g+2*d)+h);else g=r>0?-a:a,_=Math.max(0,-(r*g+l)),b=-_*_+g*(g+2*d)+h;return n&&n.copy(this.origin).addScaledVector(this.direction,_),o&&o.copy(_segCenter).addScaledVector(_segDir,g),b}intersectSphere(e,t){_vector$a.subVectors(e.center,this.origin);const n=_vector$a.dot(this.direction),o=_vector$a.dot(_vector$a)-n*n,a=e.radius*e.radius;if(o>a)return null;const r=Math.sqrt(a-o),l=n-r,d=n+r;return d<0?null:l<0?this.at(d,t):this.at(l,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,o,a,r,l,d;const h=1/this.direction.x,f=1/this.direction.y,_=1/this.direction.z,g=this.origin;return h>=0?(n=(e.min.x-g.x)*h,o=(e.max.x-g.x)*h):(n=(e.max.x-g.x)*h,o=(e.min.x-g.x)*h),f>=0?(a=(e.min.y-g.y)*f,r=(e.max.y-g.y)*f):(a=(e.max.y-g.y)*f,r=(e.min.y-g.y)*f),n>r||a>o||((a>n||isNaN(n))&&(n=a),(r<o||isNaN(o))&&(o=r),_>=0?(l=(e.min.z-g.z)*_,d=(e.max.z-g.z)*_):(l=(e.max.z-g.z)*_,d=(e.min.z-g.z)*_),n>d||l>o)||((l>n||n!==n)&&(n=l),(d<o||o!==o)&&(o=d),o<0)?null:this.at(n>=0?n:o,t)}intersectsBox(e){return this.intersectBox(e,_vector$a)!==null}intersectTriangle(e,t,n,o,a){_edge1.subVectors(t,e),_edge2.subVectors(n,e),_normal$1.crossVectors(_edge1,_edge2);let r=this.direction.dot(_normal$1),l;if(r>0){if(o)return null;l=1}else if(r<0)l=-1,r=-r;else return null;_diff.subVectors(this.origin,e);const d=l*this.direction.dot(_edge2.crossVectors(_diff,_edge2));if(d<0)return null;const h=l*this.direction.dot(_edge1.cross(_diff));if(h<0||d+h>r)return null;const f=-l*_diff.dot(_normal$1);return f<0?null:this.at(f/r,a)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class Matrix4{constructor(){Matrix4.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}set(e,t,n,o,a,r,l,d,h,f,_,g,b,w,x,v){const T=this.elements;return T[0]=e,T[4]=t,T[8]=n,T[12]=o,T[1]=a,T[5]=r,T[9]=l,T[13]=d,T[2]=h,T[6]=f,T[10]=_,T[14]=g,T[3]=b,T[7]=w,T[11]=x,T[15]=v,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new Matrix4().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,o=1/_v1$5.setFromMatrixColumn(e,0).length(),a=1/_v1$5.setFromMatrixColumn(e,1).length(),r=1/_v1$5.setFromMatrixColumn(e,2).length();return t[0]=n[0]*o,t[1]=n[1]*o,t[2]=n[2]*o,t[3]=0,t[4]=n[4]*a,t[5]=n[5]*a,t[6]=n[6]*a,t[7]=0,t[8]=n[8]*r,t[9]=n[9]*r,t[10]=n[10]*r,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,o=e.y,a=e.z,r=Math.cos(n),l=Math.sin(n),d=Math.cos(o),h=Math.sin(o),f=Math.cos(a),_=Math.sin(a);if(e.order==="XYZ"){const g=r*f,b=r*_,w=l*f,x=l*_;t[0]=d*f,t[4]=-d*_,t[8]=h,t[1]=b+w*h,t[5]=g-x*h,t[9]=-l*d,t[2]=x-g*h,t[6]=w+b*h,t[10]=r*d}else if(e.order==="YXZ"){const g=d*f,b=d*_,w=h*f,x=h*_;t[0]=g+x*l,t[4]=w*l-b,t[8]=r*h,t[1]=r*_,t[5]=r*f,t[9]=-l,t[2]=b*l-w,t[6]=x+g*l,t[10]=r*d}else if(e.order==="ZXY"){const g=d*f,b=d*_,w=h*f,x=h*_;t[0]=g-x*l,t[4]=-r*_,t[8]=w+b*l,t[1]=b+w*l,t[5]=r*f,t[9]=x-g*l,t[2]=-r*h,t[6]=l,t[10]=r*d}else if(e.order==="ZYX"){const g=r*f,b=r*_,w=l*f,x=l*_;t[0]=d*f,t[4]=w*h-b,t[8]=g*h+x,t[1]=d*_,t[5]=x*h+g,t[9]=b*h-w,t[2]=-h,t[6]=l*d,t[10]=r*d}else if(e.order==="YZX"){const g=r*d,b=r*h,w=l*d,x=l*h;t[0]=d*f,t[4]=x-g*_,t[8]=w*_+b,t[1]=_,t[5]=r*f,t[9]=-l*f,t[2]=-h*f,t[6]=b*_+w,t[10]=g-x*_}else if(e.order==="XZY"){const g=r*d,b=r*h,w=l*d,x=l*h;t[0]=d*f,t[4]=-_,t[8]=h*f,t[1]=g*_+x,t[5]=r*f,t[9]=b*_-w,t[2]=w*_-b,t[6]=l*f,t[10]=x*_+g}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(_zero,e,_one)}lookAt(e,t,n){const o=this.elements;return _z.subVectors(e,t),_z.lengthSq()===0&&(_z.z=1),_z.normalize(),_x.crossVectors(n,_z),_x.lengthSq()===0&&(Math.abs(n.z)===1?_z.x+=1e-4:_z.z+=1e-4,_z.normalize(),_x.crossVectors(n,_z)),_x.normalize(),_y.crossVectors(_z,_x),o[0]=_x.x,o[4]=_y.x,o[8]=_z.x,o[1]=_x.y,o[5]=_y.y,o[9]=_z.y,o[2]=_x.z,o[6]=_y.z,o[10]=_z.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,o=t.elements,a=this.elements,r=n[0],l=n[4],d=n[8],h=n[12],f=n[1],_=n[5],g=n[9],b=n[13],w=n[2],x=n[6],v=n[10],T=n[14],D=n[3],C=n[7],I=n[11],N=n[15],F=o[0],G=o[4],L=o[8],B=o[12],W=o[1],oe=o[5],se=o[9],Y=o[13],q=o[2],ie=o[6],me=o[10],Q=o[14],K=o[3],le=o[7],de=o[11],ve=o[15];return a[0]=r*F+l*W+d*q+h*K,a[4]=r*G+l*oe+d*ie+h*le,a[8]=r*L+l*se+d*me+h*de,a[12]=r*B+l*Y+d*Q+h*ve,a[1]=f*F+_*W+g*q+b*K,a[5]=f*G+_*oe+g*ie+b*le,a[9]=f*L+_*se+g*me+b*de,a[13]=f*B+_*Y+g*Q+b*ve,a[2]=w*F+x*W+v*q+T*K,a[6]=w*G+x*oe+v*ie+T*le,a[10]=w*L+x*se+v*me+T*de,a[14]=w*B+x*Y+v*Q+T*ve,a[3]=D*F+C*W+I*q+N*K,a[7]=D*G+C*oe+I*ie+N*le,a[11]=D*L+C*se+I*me+N*de,a[15]=D*B+C*Y+I*Q+N*ve,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],o=e[8],a=e[12],r=e[1],l=e[5],d=e[9],h=e[13],f=e[2],_=e[6],g=e[10],b=e[14],w=e[3],x=e[7],v=e[11],T=e[15];return w*(+a*d*_-o*h*_-a*l*g+n*h*g+o*l*b-n*d*b)+x*(+t*d*b-t*h*g+a*r*g-o*r*b+o*h*f-a*d*f)+v*(+t*h*_-t*l*b-a*r*_+n*r*b+a*l*f-n*h*f)+T*(-o*l*f-t*d*_+t*l*g+o*r*_-n*r*g+n*d*f)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const o=this.elements;return e.isVector3?(o[12]=e.x,o[13]=e.y,o[14]=e.z):(o[12]=e,o[13]=t,o[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],o=e[2],a=e[3],r=e[4],l=e[5],d=e[6],h=e[7],f=e[8],_=e[9],g=e[10],b=e[11],w=e[12],x=e[13],v=e[14],T=e[15],D=_*v*h-x*g*h+x*d*b-l*v*b-_*d*T+l*g*T,C=w*g*h-f*v*h-w*d*b+r*v*b+f*d*T-r*g*T,I=f*x*h-w*_*h+w*l*b-r*x*b-f*l*T+r*_*T,N=w*_*d-f*x*d-w*l*g+r*x*g+f*l*v-r*_*v,F=t*D+n*C+o*I+a*N;if(F===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const G=1/F;return e[0]=D*G,e[1]=(x*g*a-_*v*a-x*o*b+n*v*b+_*o*T-n*g*T)*G,e[2]=(l*v*a-x*d*a+x*o*h-n*v*h-l*o*T+n*d*T)*G,e[3]=(_*d*a-l*g*a-_*o*h+n*g*h+l*o*b-n*d*b)*G,e[4]=C*G,e[5]=(f*v*a-w*g*a+w*o*b-t*v*b-f*o*T+t*g*T)*G,e[6]=(w*d*a-r*v*a-w*o*h+t*v*h+r*o*T-t*d*T)*G,e[7]=(r*g*a-f*d*a+f*o*h-t*g*h-r*o*b+t*d*b)*G,e[8]=I*G,e[9]=(w*_*a-f*x*a-w*n*b+t*x*b+f*n*T-t*_*T)*G,e[10]=(r*x*a-w*l*a+w*n*h-t*x*h-r*n*T+t*l*T)*G,e[11]=(f*l*a-r*_*a-f*n*h+t*_*h+r*n*b-t*l*b)*G,e[12]=N*G,e[13]=(f*x*o-w*_*o+w*n*g-t*x*g-f*n*v+t*_*v)*G,e[14]=(w*l*o-r*x*o-w*n*d+t*x*d+r*n*v-t*l*v)*G,e[15]=(r*_*o-f*l*o+f*n*d-t*_*d-r*n*g+t*l*g)*G,this}scale(e){const t=this.elements,n=e.x,o=e.y,a=e.z;return t[0]*=n,t[4]*=o,t[8]*=a,t[1]*=n,t[5]*=o,t[9]*=a,t[2]*=n,t[6]*=o,t[10]*=a,t[3]*=n,t[7]*=o,t[11]*=a,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],o=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,o))}makeTranslation(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),o=Math.sin(t),a=1-n,r=e.x,l=e.y,d=e.z,h=a*r,f=a*l;return this.set(h*r+n,h*l-o*d,h*d+o*l,0,h*l+o*d,f*l+n,f*d-o*r,0,h*d-o*l,f*d+o*r,a*d*d+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,o,a,r){return this.set(1,n,a,0,e,1,r,0,t,o,1,0,0,0,0,1),this}compose(e,t,n){const o=this.elements,a=t._x,r=t._y,l=t._z,d=t._w,h=a+a,f=r+r,_=l+l,g=a*h,b=a*f,w=a*_,x=r*f,v=r*_,T=l*_,D=d*h,C=d*f,I=d*_,N=n.x,F=n.y,G=n.z;return o[0]=(1-(x+T))*N,o[1]=(b+I)*N,o[2]=(w-C)*N,o[3]=0,o[4]=(b-I)*F,o[5]=(1-(g+T))*F,o[6]=(v+D)*F,o[7]=0,o[8]=(w+C)*G,o[9]=(v-D)*G,o[10]=(1-(g+x))*G,o[11]=0,o[12]=e.x,o[13]=e.y,o[14]=e.z,o[15]=1,this}decompose(e,t,n){const o=this.elements;let a=_v1$5.set(o[0],o[1],o[2]).length();const r=_v1$5.set(o[4],o[5],o[6]).length(),l=_v1$5.set(o[8],o[9],o[10]).length();this.determinant()<0&&(a=-a),e.x=o[12],e.y=o[13],e.z=o[14],_m1$2.copy(this);const h=1/a,f=1/r,_=1/l;return _m1$2.elements[0]*=h,_m1$2.elements[1]*=h,_m1$2.elements[2]*=h,_m1$2.elements[4]*=f,_m1$2.elements[5]*=f,_m1$2.elements[6]*=f,_m1$2.elements[8]*=_,_m1$2.elements[9]*=_,_m1$2.elements[10]*=_,t.setFromRotationMatrix(_m1$2),n.x=a,n.y=r,n.z=l,this}makePerspective(e,t,n,o,a,r){const l=this.elements,d=2*a/(t-e),h=2*a/(n-o),f=(t+e)/(t-e),_=(n+o)/(n-o),g=-(r+a)/(r-a),b=-2*r*a/(r-a);return l[0]=d,l[4]=0,l[8]=f,l[12]=0,l[1]=0,l[5]=h,l[9]=_,l[13]=0,l[2]=0,l[6]=0,l[10]=g,l[14]=b,l[3]=0,l[7]=0,l[11]=-1,l[15]=0,this}makeOrthographic(e,t,n,o,a,r){const l=this.elements,d=1/(t-e),h=1/(n-o),f=1/(r-a),_=(t+e)*d,g=(n+o)*h,b=(r+a)*f;return l[0]=2*d,l[4]=0,l[8]=0,l[12]=-_,l[1]=0,l[5]=2*h,l[9]=0,l[13]=-g,l[2]=0,l[6]=0,l[10]=-2*f,l[14]=-b,l[3]=0,l[7]=0,l[11]=0,l[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let o=0;o<16;o++)if(t[o]!==n[o])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const _v1$5=new Vector3,_m1$2=new Matrix4,_zero=new Vector3(0,0,0),_one=new Vector3(1,1,1),_x=new Vector3,_y=new Vector3,_z=new Vector3,_matrix$1=new Matrix4,_quaternion$3=new Quaternion;class Euler{constructor(e=0,t=0,n=0,o=Euler.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=o}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,o=this._order){return this._x=e,this._y=t,this._z=n,this._order=o,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const o=e.elements,a=o[0],r=o[4],l=o[8],d=o[1],h=o[5],f=o[9],_=o[2],g=o[6],b=o[10];switch(t){case"XYZ":this._y=Math.asin(clamp(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-f,b),this._z=Math.atan2(-r,a)):(this._x=Math.atan2(g,h),this._z=0);break;case"YXZ":this._x=Math.asin(-clamp(f,-1,1)),Math.abs(f)<.9999999?(this._y=Math.atan2(l,b),this._z=Math.atan2(d,h)):(this._y=Math.atan2(-_,a),this._z=0);break;case"ZXY":this._x=Math.asin(clamp(g,-1,1)),Math.abs(g)<.9999999?(this._y=Math.atan2(-_,b),this._z=Math.atan2(-r,h)):(this._y=0,this._z=Math.atan2(d,a));break;case"ZYX":this._y=Math.asin(-clamp(_,-1,1)),Math.abs(_)<.9999999?(this._x=Math.atan2(g,b),this._z=Math.atan2(d,a)):(this._x=0,this._z=Math.atan2(-r,h));break;case"YZX":this._z=Math.asin(clamp(d,-1,1)),Math.abs(d)<.9999999?(this._x=Math.atan2(-f,h),this._y=Math.atan2(-_,a)):(this._x=0,this._y=Math.atan2(l,b));break;case"XZY":this._z=Math.asin(-clamp(r,-1,1)),Math.abs(r)<.9999999?(this._x=Math.atan2(g,h),this._y=Math.atan2(l,a)):(this._x=Math.atan2(-f,b),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return _matrix$1.makeRotationFromQuaternion(e),this.setFromRotationMatrix(_matrix$1,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return _quaternion$3.setFromEuler(this),this.setFromQuaternion(_quaternion$3,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Euler.DEFAULT_ORDER="XYZ";class Layers{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let _object3DId=0;const _v1$4=new Vector3,_q1=new Quaternion,_m1$1=new Matrix4,_target=new Vector3,_position$3=new Vector3,_scale$2=new Vector3,_quaternion$2=new Quaternion,_xAxis=new Vector3(1,0,0),_yAxis=new Vector3(0,1,0),_zAxis=new Vector3(0,0,1),_addedEvent={type:"added"},_removedEvent={type:"removed"};class Object3D extends EventDispatcher{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:_object3DId++}),this.uuid=generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Object3D.DEFAULT_UP.clone();const e=new Vector3,t=new Euler,n=new Quaternion,o=new Vector3(1,1,1);function a(){n.setFromEuler(t,!1)}function r(){t.setFromQuaternion(n,void 0,!1)}t._onChange(a),n._onChange(r),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:o},modelViewMatrix:{value:new Matrix4},normalMatrix:{value:new Matrix3}}),this.matrix=new Matrix4,this.matrixWorld=new Matrix4,this.matrixAutoUpdate=Object3D.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=Object3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.layers=new Layers,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return _q1.setFromAxisAngle(e,t),this.quaternion.multiply(_q1),this}rotateOnWorldAxis(e,t){return _q1.setFromAxisAngle(e,t),this.quaternion.premultiply(_q1),this}rotateX(e){return this.rotateOnAxis(_xAxis,e)}rotateY(e){return this.rotateOnAxis(_yAxis,e)}rotateZ(e){return this.rotateOnAxis(_zAxis,e)}translateOnAxis(e,t){return _v1$4.copy(e).applyQuaternion(this.quaternion),this.position.add(_v1$4.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(_xAxis,e)}translateY(e){return this.translateOnAxis(_yAxis,e)}translateZ(e){return this.translateOnAxis(_zAxis,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(_m1$1.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?_target.copy(e):_target.set(e,t,n);const o=this.parent;this.updateWorldMatrix(!0,!1),_position$3.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?_m1$1.lookAt(_position$3,_target,this.up):_m1$1.lookAt(_target,_position$3,this.up),this.quaternion.setFromRotationMatrix(_m1$1),o&&(_m1$1.extractRotation(o.matrixWorld),_q1.setFromRotationMatrix(_m1$1),this.quaternion.premultiply(_q1.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(_addedEvent)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(_removedEvent)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(_removedEvent)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),_m1$1.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),_m1$1.multiply(e.parent.matrixWorld)),e.applyMatrix4(_m1$1),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,o=this.children.length;n<o;n++){const r=this.children[n].getObjectByProperty(e,t);if(r!==void 0)return r}}getObjectsByProperty(e,t){let n=[];this[e]===t&&n.push(this);for(let o=0,a=this.children.length;o<a;o++){const r=this.children[o].getObjectsByProperty(e,t);r.length>0&&(n=n.concat(r))}return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(_position$3,e,_scale$2),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(_position$3,_quaternion$2,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,o=t.length;n<o;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,o=t.length;n<o;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,o=t.length;n<o;n++){const a=t[n];(a.matrixWorldAutoUpdate===!0||e===!0)&&a.updateMatrixWorld(e)}}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.matrixWorldAutoUpdate===!0&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const o=this.children;for(let a=0,r=o.length;a<r;a++){const l=o[a];l.matrixWorldAutoUpdate===!0&&l.updateWorldMatrix(!1,!0)}}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const o={};o.uuid=this.uuid,o.type=this.type,this.name!==""&&(o.name=this.name),this.castShadow===!0&&(o.castShadow=!0),this.receiveShadow===!0&&(o.receiveShadow=!0),this.visible===!1&&(o.visible=!1),this.frustumCulled===!1&&(o.frustumCulled=!1),this.renderOrder!==0&&(o.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(o.userData=this.userData),o.layers=this.layers.mask,o.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(o.matrixAutoUpdate=!1),this.isInstancedMesh&&(o.type="InstancedMesh",o.count=this.count,o.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(o.instanceColor=this.instanceColor.toJSON()));function a(l,d){return l[d.uuid]===void 0&&(l[d.uuid]=d.toJSON(e)),d.uuid}if(this.isScene)this.background&&(this.background.isColor?o.background=this.background.toJSON():this.background.isTexture&&(o.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(o.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){o.geometry=a(e.geometries,this.geometry);const l=this.geometry.parameters;if(l!==void 0&&l.shapes!==void 0){const d=l.shapes;if(Array.isArray(d))for(let h=0,f=d.length;h<f;h++){const _=d[h];a(e.shapes,_)}else a(e.shapes,d)}}if(this.isSkinnedMesh&&(o.bindMode=this.bindMode,o.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(a(e.skeletons,this.skeleton),o.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const l=[];for(let d=0,h=this.material.length;d<h;d++)l.push(a(e.materials,this.material[d]));o.material=l}else o.material=a(e.materials,this.material);if(this.children.length>0){o.children=[];for(let l=0;l<this.children.length;l++)o.children.push(this.children[l].toJSON(e).object)}if(this.animations.length>0){o.animations=[];for(let l=0;l<this.animations.length;l++){const d=this.animations[l];o.animations.push(a(e.animations,d))}}if(t){const l=r(e.geometries),d=r(e.materials),h=r(e.textures),f=r(e.images),_=r(e.shapes),g=r(e.skeletons),b=r(e.animations),w=r(e.nodes);l.length>0&&(n.geometries=l),d.length>0&&(n.materials=d),h.length>0&&(n.textures=h),f.length>0&&(n.images=f),_.length>0&&(n.shapes=_),g.length>0&&(n.skeletons=g),b.length>0&&(n.animations=b),w.length>0&&(n.nodes=w)}return n.object=o,n;function r(l){const d=[];for(const h in l){const f=l[h];delete f.metadata,d.push(f)}return d}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const o=e.children[n];this.add(o.clone())}return this}}Object3D.DEFAULT_UP=new Vector3(0,1,0);Object3D.DEFAULT_MATRIX_AUTO_UPDATE=!0;Object3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const _v0$1=new Vector3,_v1$3=new Vector3,_v2$2=new Vector3,_v3$1=new Vector3,_vab=new Vector3,_vac=new Vector3,_vbc=new Vector3,_vap=new Vector3,_vbp=new Vector3,_vcp=new Vector3;class Triangle{constructor(e=new Vector3,t=new Vector3,n=new Vector3){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,o){o.subVectors(n,t),_v0$1.subVectors(e,t),o.cross(_v0$1);const a=o.lengthSq();return a>0?o.multiplyScalar(1/Math.sqrt(a)):o.set(0,0,0)}static getBarycoord(e,t,n,o,a){_v0$1.subVectors(o,t),_v1$3.subVectors(n,t),_v2$2.subVectors(e,t);const r=_v0$1.dot(_v0$1),l=_v0$1.dot(_v1$3),d=_v0$1.dot(_v2$2),h=_v1$3.dot(_v1$3),f=_v1$3.dot(_v2$2),_=r*h-l*l;if(_===0)return a.set(-2,-1,-1);const g=1/_,b=(h*d-l*f)*g,w=(r*f-l*d)*g;return a.set(1-b-w,w,b)}static containsPoint(e,t,n,o){return this.getBarycoord(e,t,n,o,_v3$1),_v3$1.x>=0&&_v3$1.y>=0&&_v3$1.x+_v3$1.y<=1}static getUV(e,t,n,o,a,r,l,d){return this.getBarycoord(e,t,n,o,_v3$1),d.set(0,0),d.addScaledVector(a,_v3$1.x),d.addScaledVector(r,_v3$1.y),d.addScaledVector(l,_v3$1.z),d}static isFrontFacing(e,t,n,o){return _v0$1.subVectors(n,t),_v1$3.subVectors(e,t),_v0$1.cross(_v1$3).dot(o)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,o){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[o]),this}setFromAttributeAndIndices(e,t,n,o){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,o),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return _v0$1.subVectors(this.c,this.b),_v1$3.subVectors(this.a,this.b),_v0$1.cross(_v1$3).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Triangle.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return Triangle.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,o,a){return Triangle.getUV(e,this.a,this.b,this.c,t,n,o,a)}containsPoint(e){return Triangle.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Triangle.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,o=this.b,a=this.c;let r,l;_vab.subVectors(o,n),_vac.subVectors(a,n),_vap.subVectors(e,n);const d=_vab.dot(_vap),h=_vac.dot(_vap);if(d<=0&&h<=0)return t.copy(n);_vbp.subVectors(e,o);const f=_vab.dot(_vbp),_=_vac.dot(_vbp);if(f>=0&&_<=f)return t.copy(o);const g=d*_-f*h;if(g<=0&&d>=0&&f<=0)return r=d/(d-f),t.copy(n).addScaledVector(_vab,r);_vcp.subVectors(e,a);const b=_vab.dot(_vcp),w=_vac.dot(_vcp);if(w>=0&&b<=w)return t.copy(a);const x=b*h-d*w;if(x<=0&&h>=0&&w<=0)return l=h/(h-w),t.copy(n).addScaledVector(_vac,l);const v=f*w-b*_;if(v<=0&&_-f>=0&&b-w>=0)return _vbc.subVectors(a,o),l=(_-f)/(_-f+(b-w)),t.copy(o).addScaledVector(_vbc,l);const T=1/(v+x+g);return r=x*T,l=g*T,t.copy(n).addScaledVector(_vab,r).addScaledVector(_vac,l)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let materialId=0;class Material extends EventDispatcher{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:materialId++}),this.uuid=generateUUID(),this.name="",this.type="Material",this.blending=NormalBlending,this.side=FrontSide,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=SrcAlphaFactor,this.blendDst=OneMinusSrcAlphaFactor,this.blendEquation=AddEquation,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=LessEqualDepth,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=AlwaysStencilFunc,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=KeepStencilOp,this.stencilZFail=KeepStencilOp,this.stencilZPass=KeepStencilOp,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}const o=this[t];if(o===void 0){console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.");continue}o&&o.isColor?o.set(n):o&&o.isVector3&&n&&n.isVector3?o.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==NormalBlending&&(n.blending=this.blending),this.side!==FrontSide&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(n.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.forceSinglePass===!0&&(n.forceSinglePass=this.forceSinglePass),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=this.flatShading),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function o(a){const r=[];for(const l in a){const d=a[l];delete d.metadata,r.push(d)}return r}if(t){const a=o(e.textures),r=o(e.images);a.length>0&&(n.textures=a),r.length>0&&(n.images=r)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const o=t.length;n=new Array(o);for(let a=0;a!==o;++a)n[a]=t[a].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}const _colorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},_hslA={h:0,s:0,l:0},_hslB={h:0,s:0,l:0};function hue2rgb(s,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?s+(e-s)*6*t:t<1/2?e:t<2/3?s+(e-s)*6*(2/3-t):s}class Color{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,t===void 0&&n===void 0?this.set(e):this.setRGB(e,t,n)}set(e){return e&&e.isColor?this.copy(e):typeof e=="number"?this.setHex(e):typeof e=="string"&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=SRGBColorSpace){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,ColorManagement.toWorkingColorSpace(this,t),this}setRGB(e,t,n,o=ColorManagement.workingColorSpace){return this.r=e,this.g=t,this.b=n,ColorManagement.toWorkingColorSpace(this,o),this}setHSL(e,t,n,o=ColorManagement.workingColorSpace){if(e=euclideanModulo(e,1),t=clamp(t,0,1),n=clamp(n,0,1),t===0)this.r=this.g=this.b=n;else{const a=n<=.5?n*(1+t):n+t-n*t,r=2*n-a;this.r=hue2rgb(r,a,e+1/3),this.g=hue2rgb(r,a,e),this.b=hue2rgb(r,a,e-1/3)}return ColorManagement.toWorkingColorSpace(this,o),this}setStyle(e,t=SRGBColorSpace){function n(a){a!==void 0&&parseFloat(a)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let o;if(o=/^(\w+)\(([^\)]*)\)/.exec(e)){let a;const r=o[1],l=o[2];switch(r){case"rgb":case"rgba":if(a=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(l))return this.r=Math.min(255,parseInt(a[1],10))/255,this.g=Math.min(255,parseInt(a[2],10))/255,this.b=Math.min(255,parseInt(a[3],10))/255,ColorManagement.toWorkingColorSpace(this,t),n(a[4]),this;if(a=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(l))return this.r=Math.min(100,parseInt(a[1],10))/100,this.g=Math.min(100,parseInt(a[2],10))/100,this.b=Math.min(100,parseInt(a[3],10))/100,ColorManagement.toWorkingColorSpace(this,t),n(a[4]),this;break;case"hsl":case"hsla":if(a=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(l)){const d=parseFloat(a[1])/360,h=parseFloat(a[2])/100,f=parseFloat(a[3])/100;return n(a[4]),this.setHSL(d,h,f,t)}break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(o=/^\#([A-Fa-f\d]+)$/.exec(e)){const a=o[1],r=a.length;if(r===3)return this.r=parseInt(a.charAt(0)+a.charAt(0),16)/255,this.g=parseInt(a.charAt(1)+a.charAt(1),16)/255,this.b=parseInt(a.charAt(2)+a.charAt(2),16)/255,ColorManagement.toWorkingColorSpace(this,t),this;if(r===6)return this.r=parseInt(a.charAt(0)+a.charAt(1),16)/255,this.g=parseInt(a.charAt(2)+a.charAt(3),16)/255,this.b=parseInt(a.charAt(4)+a.charAt(5),16)/255,ColorManagement.toWorkingColorSpace(this,t),this;console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=SRGBColorSpace){const n=_colorKeywords[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=SRGBToLinear(e.r),this.g=SRGBToLinear(e.g),this.b=SRGBToLinear(e.b),this}copyLinearToSRGB(e){return this.r=LinearToSRGB(e.r),this.g=LinearToSRGB(e.g),this.b=LinearToSRGB(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=SRGBColorSpace){return ColorManagement.fromWorkingColorSpace(_color.copy(this),e),clamp(_color.r*255,0,255)<<16^clamp(_color.g*255,0,255)<<8^clamp(_color.b*255,0,255)<<0}getHexString(e=SRGBColorSpace){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=ColorManagement.workingColorSpace){ColorManagement.fromWorkingColorSpace(_color.copy(this),t);const n=_color.r,o=_color.g,a=_color.b,r=Math.max(n,o,a),l=Math.min(n,o,a);let d,h;const f=(l+r)/2;if(l===r)d=0,h=0;else{const _=r-l;switch(h=f<=.5?_/(r+l):_/(2-r-l),r){case n:d=(o-a)/_+(o<a?6:0);break;case o:d=(a-n)/_+2;break;case a:d=(n-o)/_+4;break}d/=6}return e.h=d,e.s=h,e.l=f,e}getRGB(e,t=ColorManagement.workingColorSpace){return ColorManagement.fromWorkingColorSpace(_color.copy(this),t),e.r=_color.r,e.g=_color.g,e.b=_color.b,e}getStyle(e=SRGBColorSpace){ColorManagement.fromWorkingColorSpace(_color.copy(this),e);const t=_color.r,n=_color.g,o=_color.b;return e!==SRGBColorSpace?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${o.toFixed(3)})`:`rgb(${t*255|0},${n*255|0},${o*255|0})`}offsetHSL(e,t,n){return this.getHSL(_hslA),_hslA.h+=e,_hslA.s+=t,_hslA.l+=n,this.setHSL(_hslA.h,_hslA.s,_hslA.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(_hslA),e.getHSL(_hslB);const n=lerp(_hslA.h,_hslB.h,t),o=lerp(_hslA.s,_hslB.s,t),a=lerp(_hslA.l,_hslB.l,t);return this.setHSL(n,o,a),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const _color=new Color;Color.NAMES=_colorKeywords;class MeshBasicMaterial extends Material{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Color(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const _vector$9=new Vector3,_vector2$1=new Vector2;class BufferAttribute{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n,this.usage=StaticDrawUsage,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let o=0,a=this.itemSize;o<a;o++)this.array[e+o]=t.array[n+o];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)_vector2$1.fromBufferAttribute(this,t),_vector2$1.applyMatrix3(e),this.setXY(t,_vector2$1.x,_vector2$1.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)_vector$9.fromBufferAttribute(this,t),_vector$9.applyMatrix3(e),this.setXYZ(t,_vector$9.x,_vector$9.y,_vector$9.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)_vector$9.fromBufferAttribute(this,t),_vector$9.applyMatrix4(e),this.setXYZ(t,_vector$9.x,_vector$9.y,_vector$9.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)_vector$9.fromBufferAttribute(this,t),_vector$9.applyNormalMatrix(e),this.setXYZ(t,_vector$9.x,_vector$9.y,_vector$9.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)_vector$9.fromBufferAttribute(this,t),_vector$9.transformDirection(e),this.setXYZ(t,_vector$9.x,_vector$9.y,_vector$9.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=denormalize(t,this.array)),t}setX(e,t){return this.normalized&&(t=normalize(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=denormalize(t,this.array)),t}setY(e,t){return this.normalized&&(t=normalize(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=denormalize(t,this.array)),t}setZ(e,t){return this.normalized&&(t=normalize(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=denormalize(t,this.array)),t}setW(e,t){return this.normalized&&(t=normalize(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=normalize(t,this.array),n=normalize(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,o){return e*=this.itemSize,this.normalized&&(t=normalize(t,this.array),n=normalize(n,this.array),o=normalize(o,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=o,this}setXYZW(e,t,n,o,a){return e*=this.itemSize,this.normalized&&(t=normalize(t,this.array),n=normalize(n,this.array),o=normalize(o,this.array),a=normalize(a,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=o,this.array[e+3]=a,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==StaticDrawUsage&&(e.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(e.updateRange=this.updateRange),e}copyColorsArray(){console.error("THREE.BufferAttribute: copyColorsArray() was removed in r144.")}copyVector2sArray(){console.error("THREE.BufferAttribute: copyVector2sArray() was removed in r144.")}copyVector3sArray(){console.error("THREE.BufferAttribute: copyVector3sArray() was removed in r144.")}copyVector4sArray(){console.error("THREE.BufferAttribute: copyVector4sArray() was removed in r144.")}}class Uint16BufferAttribute extends BufferAttribute{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class Uint32BufferAttribute extends BufferAttribute{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class Float32BufferAttribute extends BufferAttribute{constructor(e,t,n){super(new Float32Array(e),t,n)}}let _id$1=0;const _m1=new Matrix4,_obj=new Object3D,_offset=new Vector3,_box$1=new Box3,_boxMorphTargets=new Box3,_vector$8=new Vector3;class BufferGeometry extends EventDispatcher{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:_id$1++}),this.uuid=generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(arrayNeedsUint32(e)?Uint32BufferAttribute:Uint16BufferAttribute)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const a=new Matrix3().getNormalMatrix(e);n.applyNormalMatrix(a),n.needsUpdate=!0}const o=this.attributes.tangent;return o!==void 0&&(o.transformDirection(e),o.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return _m1.makeRotationFromQuaternion(e),this.applyMatrix4(_m1),this}rotateX(e){return _m1.makeRotationX(e),this.applyMatrix4(_m1),this}rotateY(e){return _m1.makeRotationY(e),this.applyMatrix4(_m1),this}rotateZ(e){return _m1.makeRotationZ(e),this.applyMatrix4(_m1),this}translate(e,t,n){return _m1.makeTranslation(e,t,n),this.applyMatrix4(_m1),this}scale(e,t,n){return _m1.makeScale(e,t,n),this.applyMatrix4(_m1),this}lookAt(e){return _obj.lookAt(e),_obj.updateMatrix(),this.applyMatrix4(_obj.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(_offset).negate(),this.translate(_offset.x,_offset.y,_offset.z),this}setFromPoints(e){const t=[];for(let n=0,o=e.length;n<o;n++){const a=e[n];t.push(a.x,a.y,a.z||0)}return this.setAttribute("position",new Float32BufferAttribute(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Box3);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new Vector3(-1/0,-1/0,-1/0),new Vector3(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,o=t.length;n<o;n++){const a=t[n];_box$1.setFromBufferAttribute(a),this.morphTargetsRelative?(_vector$8.addVectors(this.boundingBox.min,_box$1.min),this.boundingBox.expandByPoint(_vector$8),_vector$8.addVectors(this.boundingBox.max,_box$1.max),this.boundingBox.expandByPoint(_vector$8)):(this.boundingBox.expandByPoint(_box$1.min),this.boundingBox.expandByPoint(_box$1.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Sphere);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new Vector3,1/0);return}if(e){const n=this.boundingSphere.center;if(_box$1.setFromBufferAttribute(e),t)for(let a=0,r=t.length;a<r;a++){const l=t[a];_boxMorphTargets.setFromBufferAttribute(l),this.morphTargetsRelative?(_vector$8.addVectors(_box$1.min,_boxMorphTargets.min),_box$1.expandByPoint(_vector$8),_vector$8.addVectors(_box$1.max,_boxMorphTargets.max),_box$1.expandByPoint(_vector$8)):(_box$1.expandByPoint(_boxMorphTargets.min),_box$1.expandByPoint(_boxMorphTargets.max))}_box$1.getCenter(n);let o=0;for(let a=0,r=e.count;a<r;a++)_vector$8.fromBufferAttribute(e,a),o=Math.max(o,n.distanceToSquared(_vector$8));if(t)for(let a=0,r=t.length;a<r;a++){const l=t[a],d=this.morphTargetsRelative;for(let h=0,f=l.count;h<f;h++)_vector$8.fromBufferAttribute(l,h),d&&(_offset.fromBufferAttribute(e,h),_vector$8.add(_offset)),o=Math.max(o,n.distanceToSquared(_vector$8))}this.boundingSphere.radius=Math.sqrt(o),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.array,o=t.position.array,a=t.normal.array,r=t.uv.array,l=o.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new BufferAttribute(new Float32Array(4*l),4));const d=this.getAttribute("tangent").array,h=[],f=[];for(let W=0;W<l;W++)h[W]=new Vector3,f[W]=new Vector3;const _=new Vector3,g=new Vector3,b=new Vector3,w=new Vector2,x=new Vector2,v=new Vector2,T=new Vector3,D=new Vector3;function C(W,oe,se){_.fromArray(o,W*3),g.fromArray(o,oe*3),b.fromArray(o,se*3),w.fromArray(r,W*2),x.fromArray(r,oe*2),v.fromArray(r,se*2),g.sub(_),b.sub(_),x.sub(w),v.sub(w);const Y=1/(x.x*v.y-v.x*x.y);isFinite(Y)&&(T.copy(g).multiplyScalar(v.y).addScaledVector(b,-x.y).multiplyScalar(Y),D.copy(b).multiplyScalar(x.x).addScaledVector(g,-v.x).multiplyScalar(Y),h[W].add(T),h[oe].add(T),h[se].add(T),f[W].add(D),f[oe].add(D),f[se].add(D))}let I=this.groups;I.length===0&&(I=[{start:0,count:n.length}]);for(let W=0,oe=I.length;W<oe;++W){const se=I[W],Y=se.start,q=se.count;for(let ie=Y,me=Y+q;ie<me;ie+=3)C(n[ie+0],n[ie+1],n[ie+2])}const N=new Vector3,F=new Vector3,G=new Vector3,L=new Vector3;function B(W){G.fromArray(a,W*3),L.copy(G);const oe=h[W];N.copy(oe),N.sub(G.multiplyScalar(G.dot(oe))).normalize(),F.crossVectors(L,oe);const Y=F.dot(f[W])<0?-1:1;d[W*4]=N.x,d[W*4+1]=N.y,d[W*4+2]=N.z,d[W*4+3]=Y}for(let W=0,oe=I.length;W<oe;++W){const se=I[W],Y=se.start,q=se.count;for(let ie=Y,me=Y+q;ie<me;ie+=3)B(n[ie+0]),B(n[ie+1]),B(n[ie+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new BufferAttribute(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let g=0,b=n.count;g<b;g++)n.setXYZ(g,0,0,0);const o=new Vector3,a=new Vector3,r=new Vector3,l=new Vector3,d=new Vector3,h=new Vector3,f=new Vector3,_=new Vector3;if(e)for(let g=0,b=e.count;g<b;g+=3){const w=e.getX(g+0),x=e.getX(g+1),v=e.getX(g+2);o.fromBufferAttribute(t,w),a.fromBufferAttribute(t,x),r.fromBufferAttribute(t,v),f.subVectors(r,a),_.subVectors(o,a),f.cross(_),l.fromBufferAttribute(n,w),d.fromBufferAttribute(n,x),h.fromBufferAttribute(n,v),l.add(f),d.add(f),h.add(f),n.setXYZ(w,l.x,l.y,l.z),n.setXYZ(x,d.x,d.y,d.z),n.setXYZ(v,h.x,h.y,h.z)}else for(let g=0,b=t.count;g<b;g+=3)o.fromBufferAttribute(t,g+0),a.fromBufferAttribute(t,g+1),r.fromBufferAttribute(t,g+2),f.subVectors(r,a),_.subVectors(o,a),f.cross(_),n.setXYZ(g+0,f.x,f.y,f.z),n.setXYZ(g+1,f.x,f.y,f.z),n.setXYZ(g+2,f.x,f.y,f.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(){return console.error("THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeBufferGeometries() instead."),this}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)_vector$8.fromBufferAttribute(e,t),_vector$8.normalize(),e.setXYZ(t,_vector$8.x,_vector$8.y,_vector$8.z)}toNonIndexed(){function e(l,d){const h=l.array,f=l.itemSize,_=l.normalized,g=new h.constructor(d.length*f);let b=0,w=0;for(let x=0,v=d.length;x<v;x++){l.isInterleavedBufferAttribute?b=d[x]*l.data.stride+l.offset:b=d[x]*f;for(let T=0;T<f;T++)g[w++]=h[b++]}return new BufferAttribute(g,f,_)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new BufferGeometry,n=this.index.array,o=this.attributes;for(const l in o){const d=o[l],h=e(d,n);t.setAttribute(l,h)}const a=this.morphAttributes;for(const l in a){const d=[],h=a[l];for(let f=0,_=h.length;f<_;f++){const g=h[f],b=e(g,n);d.push(b)}t.morphAttributes[l]=d}t.morphTargetsRelative=this.morphTargetsRelative;const r=this.groups;for(let l=0,d=r.length;l<d;l++){const h=r[l];t.addGroup(h.start,h.count,h.materialIndex)}return t}toJSON(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const d=this.parameters;for(const h in d)d[h]!==void 0&&(e[h]=d[h]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const d in n){const h=n[d];e.data.attributes[d]=h.toJSON(e.data)}const o={};let a=!1;for(const d in this.morphAttributes){const h=this.morphAttributes[d],f=[];for(let _=0,g=h.length;_<g;_++){const b=h[_];f.push(b.toJSON(e.data))}f.length>0&&(o[d]=f,a=!0)}a&&(e.data.morphAttributes=o,e.data.morphTargetsRelative=this.morphTargetsRelative);const r=this.groups;r.length>0&&(e.data.groups=JSON.parse(JSON.stringify(r)));const l=this.boundingSphere;return l!==null&&(e.data.boundingSphere={center:l.center.toArray(),radius:l.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const o=e.attributes;for(const h in o){const f=o[h];this.setAttribute(h,f.clone(t))}const a=e.morphAttributes;for(const h in a){const f=[],_=a[h];for(let g=0,b=_.length;g<b;g++)f.push(_[g].clone(t));this.morphAttributes[h]=f}this.morphTargetsRelative=e.morphTargetsRelative;const r=e.groups;for(let h=0,f=r.length;h<f;h++){const _=r[h];this.addGroup(_.start,_.count,_.materialIndex)}const l=e.boundingBox;l!==null&&(this.boundingBox=l.clone());const d=e.boundingSphere;return d!==null&&(this.boundingSphere=d.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const _inverseMatrix$2=new Matrix4,_ray$2=new Ray,_sphere$3=new Sphere,_sphereHitAt=new Vector3,_vA$1=new Vector3,_vB$1=new Vector3,_vC$1=new Vector3,_tempA=new Vector3,_morphA=new Vector3,_uvA$1=new Vector2,_uvB$1=new Vector2,_uvC$1=new Vector2,_intersectionPoint=new Vector3,_intersectionPointWorld=new Vector3;class Mesh extends Object3D{constructor(e=new BufferGeometry,t=new MeshBasicMaterial){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const o=t[n[0]];if(o!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let a=0,r=o.length;a<r;a++){const l=o[a].name||String(a);this.morphTargetInfluences.push(0),this.morphTargetDictionary[l]=a}}}}getVertexPosition(e,t){const n=this.geometry,o=n.attributes.position,a=n.morphAttributes.position,r=n.morphTargetsRelative;t.fromBufferAttribute(o,e);const l=this.morphTargetInfluences;if(a&&l){_morphA.set(0,0,0);for(let d=0,h=a.length;d<h;d++){const f=l[d],_=a[d];f!==0&&(_tempA.fromBufferAttribute(_,e),r?_morphA.addScaledVector(_tempA,f):_morphA.addScaledVector(_tempA.sub(t),f))}t.add(_morphA)}return this.isSkinnedMesh&&this.boneTransform(e,t),t}raycast(e,t){const n=this.geometry,o=this.material,a=this.matrixWorld;if(o===void 0||(n.boundingSphere===null&&n.computeBoundingSphere(),_sphere$3.copy(n.boundingSphere),_sphere$3.applyMatrix4(a),_ray$2.copy(e.ray).recast(e.near),_sphere$3.containsPoint(_ray$2.origin)===!1&&(_ray$2.intersectSphere(_sphere$3,_sphereHitAt)===null||_ray$2.origin.distanceToSquared(_sphereHitAt)>(e.far-e.near)**2))||(_inverseMatrix$2.copy(a).invert(),_ray$2.copy(e.ray).applyMatrix4(_inverseMatrix$2),n.boundingBox!==null&&_ray$2.intersectsBox(n.boundingBox)===!1))return;let r;const l=n.index,d=n.attributes.position,h=n.attributes.uv,f=n.attributes.uv2,_=n.groups,g=n.drawRange;if(l!==null)if(Array.isArray(o))for(let b=0,w=_.length;b<w;b++){const x=_[b],v=o[x.materialIndex],T=Math.max(x.start,g.start),D=Math.min(l.count,Math.min(x.start+x.count,g.start+g.count));for(let C=T,I=D;C<I;C+=3){const N=l.getX(C),F=l.getX(C+1),G=l.getX(C+2);r=checkBufferGeometryIntersection(this,v,e,_ray$2,h,f,N,F,G),r&&(r.faceIndex=Math.floor(C/3),r.face.materialIndex=x.materialIndex,t.push(r))}}else{const b=Math.max(0,g.start),w=Math.min(l.count,g.start+g.count);for(let x=b,v=w;x<v;x+=3){const T=l.getX(x),D=l.getX(x+1),C=l.getX(x+2);r=checkBufferGeometryIntersection(this,o,e,_ray$2,h,f,T,D,C),r&&(r.faceIndex=Math.floor(x/3),t.push(r))}}else if(d!==void 0)if(Array.isArray(o))for(let b=0,w=_.length;b<w;b++){const x=_[b],v=o[x.materialIndex],T=Math.max(x.start,g.start),D=Math.min(d.count,Math.min(x.start+x.count,g.start+g.count));for(let C=T,I=D;C<I;C+=3){const N=C,F=C+1,G=C+2;r=checkBufferGeometryIntersection(this,v,e,_ray$2,h,f,N,F,G),r&&(r.faceIndex=Math.floor(C/3),r.face.materialIndex=x.materialIndex,t.push(r))}}else{const b=Math.max(0,g.start),w=Math.min(d.count,g.start+g.count);for(let x=b,v=w;x<v;x+=3){const T=x,D=x+1,C=x+2;r=checkBufferGeometryIntersection(this,o,e,_ray$2,h,f,T,D,C),r&&(r.faceIndex=Math.floor(x/3),t.push(r))}}}}function checkIntersection(s,e,t,n,o,a,r,l){let d;if(e.side===BackSide?d=n.intersectTriangle(r,a,o,!0,l):d=n.intersectTriangle(o,a,r,e.side===FrontSide,l),d===null)return null;_intersectionPointWorld.copy(l),_intersectionPointWorld.applyMatrix4(s.matrixWorld);const h=t.ray.origin.distanceTo(_intersectionPointWorld);return h<t.near||h>t.far?null:{distance:h,point:_intersectionPointWorld.clone(),object:s}}function checkBufferGeometryIntersection(s,e,t,n,o,a,r,l,d){s.getVertexPosition(r,_vA$1),s.getVertexPosition(l,_vB$1),s.getVertexPosition(d,_vC$1);const h=checkIntersection(s,e,t,n,_vA$1,_vB$1,_vC$1,_intersectionPoint);if(h){o&&(_uvA$1.fromBufferAttribute(o,r),_uvB$1.fromBufferAttribute(o,l),_uvC$1.fromBufferAttribute(o,d),h.uv=Triangle.getUV(_intersectionPoint,_vA$1,_vB$1,_vC$1,_uvA$1,_uvB$1,_uvC$1,new Vector2)),a&&(_uvA$1.fromBufferAttribute(a,r),_uvB$1.fromBufferAttribute(a,l),_uvC$1.fromBufferAttribute(a,d),h.uv2=Triangle.getUV(_intersectionPoint,_vA$1,_vB$1,_vC$1,_uvA$1,_uvB$1,_uvC$1,new Vector2));const f={a:r,b:l,c:d,normal:new Vector3,materialIndex:0};Triangle.getNormal(_vA$1,_vB$1,_vC$1,f.normal),h.face=f}return h}class BoxGeometry extends BufferGeometry{constructor(e=1,t=1,n=1,o=1,a=1,r=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:o,heightSegments:a,depthSegments:r};const l=this;o=Math.floor(o),a=Math.floor(a),r=Math.floor(r);const d=[],h=[],f=[],_=[];let g=0,b=0;w("z","y","x",-1,-1,n,t,e,r,a,0),w("z","y","x",1,-1,n,t,-e,r,a,1),w("x","z","y",1,1,e,n,t,o,r,2),w("x","z","y",1,-1,e,n,-t,o,r,3),w("x","y","z",1,-1,e,t,n,o,a,4),w("x","y","z",-1,-1,e,t,-n,o,a,5),this.setIndex(d),this.setAttribute("position",new Float32BufferAttribute(h,3)),this.setAttribute("normal",new Float32BufferAttribute(f,3)),this.setAttribute("uv",new Float32BufferAttribute(_,2));function w(x,v,T,D,C,I,N,F,G,L,B){const W=I/G,oe=N/L,se=I/2,Y=N/2,q=F/2,ie=G+1,me=L+1;let Q=0,K=0;const le=new Vector3;for(let de=0;de<me;de++){const ve=de*oe-Y;for(let $=0;$<ie;$++){const z=$*W-se;le[x]=z*D,le[v]=ve*C,le[T]=q,h.push(le.x,le.y,le.z),le[x]=0,le[v]=0,le[T]=F>0?1:-1,f.push(le.x,le.y,le.z),_.push($/G),_.push(1-de/L),Q+=1}}for(let de=0;de<L;de++)for(let ve=0;ve<G;ve++){const $=g+ve+ie*de,z=g+ve+ie*(de+1),ne=g+(ve+1)+ie*(de+1),V=g+(ve+1)+ie*de;d.push($,z,V),d.push(z,ne,V),K+=6}l.addGroup(b,K,B),b+=K,g+=Q}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new BoxGeometry(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function cloneUniforms(s){const e={};for(const t in s){e[t]={};for(const n in s[t]){const o=s[t][n];o&&(o.isColor||o.isMatrix3||o.isMatrix4||o.isVector2||o.isVector3||o.isVector4||o.isTexture||o.isQuaternion)?e[t][n]=o.clone():Array.isArray(o)?e[t][n]=o.slice():e[t][n]=o}}return e}function mergeUniforms(s){const e={};for(let t=0;t<s.length;t++){const n=cloneUniforms(s[t]);for(const o in n)e[o]=n[o]}return e}function cloneUniformsGroups(s){const e=[];for(let t=0;t<s.length;t++)e.push(s[t].clone());return e}function getUnlitUniformColorSpace(s){return s.getRenderTarget()===null&&s.outputEncoding===sRGBEncoding?SRGBColorSpace:LinearSRGBColorSpace}const UniformsUtils={clone:cloneUniforms,merge:mergeUniforms};var default_vertex=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,default_fragment=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class ShaderMaterial extends Material{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=default_vertex,this.fragmentShader=default_fragment,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=cloneUniforms(e.uniforms),this.uniformsGroups=cloneUniformsGroups(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const o in this.uniforms){const r=this.uniforms[o].value;r&&r.isTexture?t.uniforms[o]={type:"t",value:r.toJSON(e).uuid}:r&&r.isColor?t.uniforms[o]={type:"c",value:r.getHex()}:r&&r.isVector2?t.uniforms[o]={type:"v2",value:r.toArray()}:r&&r.isVector3?t.uniforms[o]={type:"v3",value:r.toArray()}:r&&r.isVector4?t.uniforms[o]={type:"v4",value:r.toArray()}:r&&r.isMatrix3?t.uniforms[o]={type:"m3",value:r.toArray()}:r&&r.isMatrix4?t.uniforms[o]={type:"m4",value:r.toArray()}:t.uniforms[o]={value:r}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const n={};for(const o in this.extensions)this.extensions[o]===!0&&(n[o]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class Camera extends Object3D{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new Matrix4,this.projectionMatrix=new Matrix4,this.projectionMatrixInverse=new Matrix4}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class PerspectiveCamera extends Camera{constructor(e=50,t=1,n=.1,o=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=o,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=RAD2DEG*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(DEG2RAD*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return RAD2DEG*2*Math.atan(Math.tan(DEG2RAD*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,o,a,r){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=o,this.view.width=a,this.view.height=r,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(DEG2RAD*.5*this.fov)/this.zoom,n=2*t,o=this.aspect*n,a=-.5*o;const r=this.view;if(this.view!==null&&this.view.enabled){const d=r.fullWidth,h=r.fullHeight;a+=r.offsetX*o/d,t-=r.offsetY*n/h,o*=r.width/d,n*=r.height/h}const l=this.filmOffset;l!==0&&(a+=e*l/this.getFilmWidth()),this.projectionMatrix.makePerspective(a,a+o,t,t-n,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const fov=-90,aspect=1;class CubeCamera extends Object3D{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n;const o=new PerspectiveCamera(fov,aspect,e,t);o.layers=this.layers,o.up.set(0,1,0),o.lookAt(1,0,0),this.add(o);const a=new PerspectiveCamera(fov,aspect,e,t);a.layers=this.layers,a.up.set(0,1,0),a.lookAt(-1,0,0),this.add(a);const r=new PerspectiveCamera(fov,aspect,e,t);r.layers=this.layers,r.up.set(0,0,-1),r.lookAt(0,1,0),this.add(r);const l=new PerspectiveCamera(fov,aspect,e,t);l.layers=this.layers,l.up.set(0,0,1),l.lookAt(0,-1,0),this.add(l);const d=new PerspectiveCamera(fov,aspect,e,t);d.layers=this.layers,d.up.set(0,1,0),d.lookAt(0,0,1),this.add(d);const h=new PerspectiveCamera(fov,aspect,e,t);h.layers=this.layers,h.up.set(0,1,0),h.lookAt(0,0,-1),this.add(h)}update(e,t){this.parent===null&&this.updateMatrixWorld();const n=this.renderTarget,[o,a,r,l,d,h]=this.children,f=e.getRenderTarget(),_=e.toneMapping,g=e.xr.enabled;e.toneMapping=NoToneMapping,e.xr.enabled=!1;const b=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,o),e.setRenderTarget(n,1),e.render(t,a),e.setRenderTarget(n,2),e.render(t,r),e.setRenderTarget(n,3),e.render(t,l),e.setRenderTarget(n,4),e.render(t,d),n.texture.generateMipmaps=b,e.setRenderTarget(n,5),e.render(t,h),e.setRenderTarget(f),e.toneMapping=_,e.xr.enabled=g,n.texture.needsPMREMUpdate=!0}}class CubeTexture extends Texture{constructor(e,t,n,o,a,r,l,d,h,f){e=e!==void 0?e:[],t=t!==void 0?t:CubeReflectionMapping,super(e,t,n,o,a,r,l,d,h,f),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class WebGLCubeRenderTarget extends WebGLRenderTarget{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},o=[n,n,n,n,n,n];this.texture=new CubeTexture(o,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:LinearFilter}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},o=new BoxGeometry(5,5,5),a=new ShaderMaterial({name:"CubemapFromEquirect",uniforms:cloneUniforms(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:BackSide,blending:NoBlending});a.uniforms.tEquirect.value=t;const r=new Mesh(o,a),l=t.minFilter;return t.minFilter===LinearMipmapLinearFilter&&(t.minFilter=LinearFilter),new CubeCamera(1,10,this).update(e,r),t.minFilter=l,r.geometry.dispose(),r.material.dispose(),this}clear(e,t,n,o){const a=e.getRenderTarget();for(let r=0;r<6;r++)e.setRenderTarget(this,r),e.clear(t,n,o);e.setRenderTarget(a)}}const _vector1=new Vector3,_vector2=new Vector3,_normalMatrix=new Matrix3;class Plane{constructor(e=new Vector3(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,o){return this.normal.set(e,t,n),this.constant=o,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const o=_vector1.subVectors(n,t).cross(_vector2.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(o,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(_vector1),o=this.normal.dot(n);if(o===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const a=-(e.start.dot(this.normal)+this.constant)/o;return a<0||a>1?null:t.copy(e.start).addScaledVector(n,a)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||_normalMatrix.getNormalMatrix(e),o=this.coplanarPoint(_vector1).applyMatrix4(e),a=this.normal.applyMatrix3(n).normalize();return this.constant=-o.dot(a),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const _sphere$2=new Sphere,_vector$7=new Vector3;class Frustum{constructor(e=new Plane,t=new Plane,n=new Plane,o=new Plane,a=new Plane,r=new Plane){this.planes=[e,t,n,o,a,r]}set(e,t,n,o,a,r){const l=this.planes;return l[0].copy(e),l[1].copy(t),l[2].copy(n),l[3].copy(o),l[4].copy(a),l[5].copy(r),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e){const t=this.planes,n=e.elements,o=n[0],a=n[1],r=n[2],l=n[3],d=n[4],h=n[5],f=n[6],_=n[7],g=n[8],b=n[9],w=n[10],x=n[11],v=n[12],T=n[13],D=n[14],C=n[15];return t[0].setComponents(l-o,_-d,x-g,C-v).normalize(),t[1].setComponents(l+o,_+d,x+g,C+v).normalize(),t[2].setComponents(l+a,_+h,x+b,C+T).normalize(),t[3].setComponents(l-a,_-h,x-b,C-T).normalize(),t[4].setComponents(l-r,_-f,x-w,C-D).normalize(),t[5].setComponents(l+r,_+f,x+w,C+D).normalize(),this}intersectsObject(e){const t=e.geometry;return t.boundingSphere===null&&t.computeBoundingSphere(),_sphere$2.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(_sphere$2)}intersectsSprite(e){return _sphere$2.center.set(0,0,0),_sphere$2.radius=.7071067811865476,_sphere$2.applyMatrix4(e.matrixWorld),this.intersectsSphere(_sphere$2)}intersectsSphere(e){const t=this.planes,n=e.center,o=-e.radius;for(let a=0;a<6;a++)if(t[a].distanceToPoint(n)<o)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const o=t[n];if(_vector$7.x=o.normal.x>0?e.max.x:e.min.x,_vector$7.y=o.normal.y>0?e.max.y:e.min.y,_vector$7.z=o.normal.z>0?e.max.z:e.min.z,o.distanceToPoint(_vector$7)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function WebGLAnimation(){let s=null,e=!1,t=null,n=null;function o(a,r){t(a,r),n=s.requestAnimationFrame(o)}return{start:function(){e!==!0&&t!==null&&(n=s.requestAnimationFrame(o),e=!0)},stop:function(){s.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(a){t=a},setContext:function(a){s=a}}}function WebGLAttributes(s,e){const t=e.isWebGL2,n=new WeakMap;function o(h,f){const _=h.array,g=h.usage,b=s.createBuffer();s.bindBuffer(f,b),s.bufferData(f,_,g),h.onUploadCallback();let w;if(_ instanceof Float32Array)w=5126;else if(_ instanceof Uint16Array)if(h.isFloat16BufferAttribute)if(t)w=5131;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else w=5123;else if(_ instanceof Int16Array)w=5122;else if(_ instanceof Uint32Array)w=5125;else if(_ instanceof Int32Array)w=5124;else if(_ instanceof Int8Array)w=5120;else if(_ instanceof Uint8Array)w=5121;else if(_ instanceof Uint8ClampedArray)w=5121;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+_);return{buffer:b,type:w,bytesPerElement:_.BYTES_PER_ELEMENT,version:h.version}}function a(h,f,_){const g=f.array,b=f.updateRange;s.bindBuffer(_,h),b.count===-1?s.bufferSubData(_,0,g):(t?s.bufferSubData(_,b.offset*g.BYTES_PER_ELEMENT,g,b.offset,b.count):s.bufferSubData(_,b.offset*g.BYTES_PER_ELEMENT,g.subarray(b.offset,b.offset+b.count)),b.count=-1),f.onUploadCallback()}function r(h){return h.isInterleavedBufferAttribute&&(h=h.data),n.get(h)}function l(h){h.isInterleavedBufferAttribute&&(h=h.data);const f=n.get(h);f&&(s.deleteBuffer(f.buffer),n.delete(h))}function d(h,f){if(h.isGLBufferAttribute){const g=n.get(h);(!g||g.version<h.version)&&n.set(h,{buffer:h.buffer,type:h.type,bytesPerElement:h.elementSize,version:h.version});return}h.isInterleavedBufferAttribute&&(h=h.data);const _=n.get(h);_===void 0?n.set(h,o(h,f)):_.version<h.version&&(a(_.buffer,h,f),_.version=h.version)}return{get:r,remove:l,update:d}}class PlaneGeometry extends BufferGeometry{constructor(e=1,t=1,n=1,o=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:o};const a=e/2,r=t/2,l=Math.floor(n),d=Math.floor(o),h=l+1,f=d+1,_=e/l,g=t/d,b=[],w=[],x=[],v=[];for(let T=0;T<f;T++){const D=T*g-r;for(let C=0;C<h;C++){const I=C*_-a;w.push(I,-D,0),x.push(0,0,1),v.push(C/l),v.push(1-T/d)}}for(let T=0;T<d;T++)for(let D=0;D<l;D++){const C=D+h*T,I=D+h*(T+1),N=D+1+h*(T+1),F=D+1+h*T;b.push(C,I,F),b.push(I,N,F)}this.setIndex(b),this.setAttribute("position",new Float32BufferAttribute(w,3)),this.setAttribute("normal",new Float32BufferAttribute(x,3)),this.setAttribute("uv",new Float32BufferAttribute(v,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new PlaneGeometry(e.width,e.height,e.widthSegments,e.heightSegments)}}var alphamap_fragment=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,alphamap_pars_fragment=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,alphatest_fragment=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,alphatest_pars_fragment=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,aomap_fragment=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,aomap_pars_fragment=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,begin_vertex="vec3 transformed = vec3( position );",beginnormal_vertex=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,bsdfs=`vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( V * D );
}
#ifdef USE_IRIDESCENCE
	vec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = mix( F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif`,iridescence_fragment=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			 return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float R21 = R12;
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,bumpmap_pars_fragment=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = dFdx( surf_pos.xyz );
		vec3 vSigmaY = dFdy( surf_pos.xyz );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,clipping_planes_fragment=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,clipping_planes_pars_fragment=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,clipping_planes_pars_vertex=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,clipping_planes_vertex=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,color_fragment=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,color_pars_fragment=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,color_pars_vertex=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,color_vertex=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,common=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`,cube_uv_reflection_fragment=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_v0 0.339
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_v1 0.276
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_v4 0.046
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_v5 0.016
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_v6 0.0038
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,defaultnormal_vertex=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,displacementmap_pars_vertex=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,displacementmap_vertex=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,emissivemap_fragment=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,emissivemap_pars_fragment=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,encodings_fragment="gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,envmap_fragment=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,envmap_common_pars_fragment=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,envmap_pars_fragment=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,envmap_pars_vertex=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,envmap_vertex=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,fog_vertex=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,fog_pars_vertex=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,fog_fragment=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,fog_pars_fragment=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,gradientmap_pars_fragment=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,lightmap_fragment=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vUv2 );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,lightmap_pars_fragment=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,lights_lambert_fragment=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,lights_lambert_pars_fragment=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,lights_pars_begin=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( LEGACY_LIGHTS )
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#else
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,envmap_physical_pars_fragment=`#if defined( USE_ENVMAP )
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
#endif`,lights_toon_fragment=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,lights_toon_pars_fragment=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,lights_phong_fragment=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,lights_phong_pars_fragment=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,lights_physical_fragment=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULARINTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;
		#endif
		#ifdef USE_SPECULARCOLORMAP
			specularColorFactor *= texture2D( specularColorMap, vUv ).rgb;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEENCOLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEENROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;
	#endif
#endif`,lights_physical_pars_fragment=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	#ifdef USE_IRIDESCENCE
		reflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );
	#else
		reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,lights_fragment_begin=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometry.viewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,lights_fragment_maps=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,lights_fragment_end=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,logdepthbuf_fragment=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,logdepthbuf_pars_fragment=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,logdepthbuf_pars_vertex=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,logdepthbuf_vertex=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,map_fragment=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,map_pars_fragment=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,map_particle_fragment=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,map_particle_pars_fragment=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,metalnessmap_fragment=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,metalnessmap_pars_fragment=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,morphcolor_vertex=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,morphnormal_vertex=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,morphtarget_pars_vertex=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,morphtarget_vertex=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,normal_fragment_begin=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * faceDirection;
			bitangent = bitangent * faceDirection;
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,normal_fragment_maps=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,normal_pars_fragment=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,normal_pars_vertex=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,normal_vertex=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,normalmap_pars_fragment=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );
		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );
	}
#endif`,clearcoat_normal_fragment_begin=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,clearcoat_normal_fragment_maps=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );
	#endif
#endif`,clearcoat_pars_fragment=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,iridescence_pars_fragment=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,output_fragment=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha + 0.1;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,packing=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,premultiplied_alpha_fragment=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,project_vertex=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,dithering_fragment=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,dithering_pars_fragment=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,roughnessmap_fragment=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,roughnessmap_pars_fragment=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,shadowmap_pars_fragment=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,shadowmap_pars_vertex=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,shadowmap_vertex=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,shadowmask_pars_fragment=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,skinbase_vertex=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,skinning_pars_vertex=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,skinning_vertex=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,skinnormal_vertex=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,specularmap_fragment=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,specularmap_pars_fragment=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,tonemapping_fragment=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,tonemapping_pars_fragment=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,transmission_fragment=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmission = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmission.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmission.rgb, material.transmission );
#endif`,transmission_pars_fragment=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, vec2 fullSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		
		vec2 lodFudge = pow( 1.95, lod ) / fullSize;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec2 fullSize = vec2( textureSize( sampler, 0 ) );
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), fullSize, floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), fullSize, ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return radiance;
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
	}
#endif`,uv_pars_fragment=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,uv_pars_vertex=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,uv_vertex=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,uv2_pars_fragment=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,uv2_pars_vertex=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,uv2_vertex=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,worldpos_vertex=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const vertex$h=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,fragment$h=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,vertex$g=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,fragment$g=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,vertex$f=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,fragment$f=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,vertex$e=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,fragment$e=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,vertex$d=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,fragment$d=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,vertex$c=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,fragment$c=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,vertex$b=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,fragment$b=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,vertex$a=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,fragment$a=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,vertex$9=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,fragment$9=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,vertex$8=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,fragment$8=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,vertex$7=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,fragment$7=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,vertex$6=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,fragment$6=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,vertex$5=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,fragment$5=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULARINTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
	#ifdef USE_SPECULARCOLORMAP
		uniform sampler2D specularColorMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEENCOLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEENROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,vertex$4=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,fragment$4=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,vertex$3=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,fragment$3=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,vertex$2=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,fragment$2=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,vertex$1=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,fragment$1=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,ShaderChunk={alphamap_fragment,alphamap_pars_fragment,alphatest_fragment,alphatest_pars_fragment,aomap_fragment,aomap_pars_fragment,begin_vertex,beginnormal_vertex,bsdfs,iridescence_fragment,bumpmap_pars_fragment,clipping_planes_fragment,clipping_planes_pars_fragment,clipping_planes_pars_vertex,clipping_planes_vertex,color_fragment,color_pars_fragment,color_pars_vertex,color_vertex,common,cube_uv_reflection_fragment,defaultnormal_vertex,displacementmap_pars_vertex,displacementmap_vertex,emissivemap_fragment,emissivemap_pars_fragment,encodings_fragment,encodings_pars_fragment,envmap_fragment,envmap_common_pars_fragment,envmap_pars_fragment,envmap_pars_vertex,envmap_physical_pars_fragment,envmap_vertex,fog_vertex,fog_pars_vertex,fog_fragment,fog_pars_fragment,gradientmap_pars_fragment,lightmap_fragment,lightmap_pars_fragment,lights_lambert_fragment,lights_lambert_pars_fragment,lights_pars_begin,lights_toon_fragment,lights_toon_pars_fragment,lights_phong_fragment,lights_phong_pars_fragment,lights_physical_fragment,lights_physical_pars_fragment,lights_fragment_begin,lights_fragment_maps,lights_fragment_end,logdepthbuf_fragment,logdepthbuf_pars_fragment,logdepthbuf_pars_vertex,logdepthbuf_vertex,map_fragment,map_pars_fragment,map_particle_fragment,map_particle_pars_fragment,metalnessmap_fragment,metalnessmap_pars_fragment,morphcolor_vertex,morphnormal_vertex,morphtarget_pars_vertex,morphtarget_vertex,normal_fragment_begin,normal_fragment_maps,normal_pars_fragment,normal_pars_vertex,normal_vertex,normalmap_pars_fragment,clearcoat_normal_fragment_begin,clearcoat_normal_fragment_maps,clearcoat_pars_fragment,iridescence_pars_fragment,output_fragment,packing,premultiplied_alpha_fragment,project_vertex,dithering_fragment,dithering_pars_fragment,roughnessmap_fragment,roughnessmap_pars_fragment,shadowmap_pars_fragment,shadowmap_pars_vertex,shadowmap_vertex,shadowmask_pars_fragment,skinbase_vertex,skinning_pars_vertex,skinning_vertex,skinnormal_vertex,specularmap_fragment,specularmap_pars_fragment,tonemapping_fragment,tonemapping_pars_fragment,transmission_fragment,transmission_pars_fragment,uv_pars_fragment,uv_pars_vertex,uv_vertex,uv2_pars_fragment,uv2_pars_vertex,uv2_vertex,worldpos_vertex,background_vert:vertex$h,background_frag:fragment$h,backgroundCube_vert:vertex$g,backgroundCube_frag:fragment$g,cube_vert:vertex$f,cube_frag:fragment$f,depth_vert:vertex$e,depth_frag:fragment$e,distanceRGBA_vert:vertex$d,distanceRGBA_frag:fragment$d,equirect_vert:vertex$c,equirect_frag:fragment$c,linedashed_vert:vertex$b,linedashed_frag:fragment$b,meshbasic_vert:vertex$a,meshbasic_frag:fragment$a,meshlambert_vert:vertex$9,meshlambert_frag:fragment$9,meshmatcap_vert:vertex$8,meshmatcap_frag:fragment$8,meshnormal_vert:vertex$7,meshnormal_frag:fragment$7,meshphong_vert:vertex$6,meshphong_frag:fragment$6,meshphysical_vert:vertex$5,meshphysical_frag:fragment$5,meshtoon_vert:vertex$4,meshtoon_frag:fragment$4,points_vert:vertex$3,points_frag:fragment$3,shadow_vert:vertex$2,shadow_frag:fragment$2,sprite_vert:vertex$1,sprite_frag:fragment$1},UniformsLib={common:{diffuse:{value:new Color(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new Matrix3},uv2Transform:{value:new Matrix3},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Vector2(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Color(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Color(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Matrix3}},sprite:{diffuse:{value:new Color(16777215)},opacity:{value:1},center:{value:new Vector2(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Matrix3}}},ShaderLib={basic:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.specularmap,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.fog]),vertexShader:ShaderChunk.meshbasic_vert,fragmentShader:ShaderChunk.meshbasic_frag},lambert:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.specularmap,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0)}}]),vertexShader:ShaderChunk.meshlambert_vert,fragmentShader:ShaderChunk.meshlambert_frag},phong:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.specularmap,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0)},specular:{value:new Color(1118481)},shininess:{value:30}}]),vertexShader:ShaderChunk.meshphong_vert,fragmentShader:ShaderChunk.meshphong_frag},standard:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.roughnessmap,UniformsLib.metalnessmap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:ShaderChunk.meshphysical_vert,fragmentShader:ShaderChunk.meshphysical_frag},toon:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.gradientmap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0)}}]),vertexShader:ShaderChunk.meshtoon_vert,fragmentShader:ShaderChunk.meshtoon_frag},matcap:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.fog,{matcap:{value:null}}]),vertexShader:ShaderChunk.meshmatcap_vert,fragmentShader:ShaderChunk.meshmatcap_frag},points:{uniforms:mergeUniforms([UniformsLib.points,UniformsLib.fog]),vertexShader:ShaderChunk.points_vert,fragmentShader:ShaderChunk.points_frag},dashed:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:ShaderChunk.linedashed_vert,fragmentShader:ShaderChunk.linedashed_frag},depth:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.displacementmap]),vertexShader:ShaderChunk.depth_vert,fragmentShader:ShaderChunk.depth_frag},normal:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,{opacity:{value:1}}]),vertexShader:ShaderChunk.meshnormal_vert,fragmentShader:ShaderChunk.meshnormal_frag},sprite:{uniforms:mergeUniforms([UniformsLib.sprite,UniformsLib.fog]),vertexShader:ShaderChunk.sprite_vert,fragmentShader:ShaderChunk.sprite_frag},background:{uniforms:{uvTransform:{value:new Matrix3},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:ShaderChunk.background_vert,fragmentShader:ShaderChunk.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:ShaderChunk.backgroundCube_vert,fragmentShader:ShaderChunk.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:ShaderChunk.cube_vert,fragmentShader:ShaderChunk.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:ShaderChunk.equirect_vert,fragmentShader:ShaderChunk.equirect_frag},distanceRGBA:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.displacementmap,{referencePosition:{value:new Vector3},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:ShaderChunk.distanceRGBA_vert,fragmentShader:ShaderChunk.distanceRGBA_frag},shadow:{uniforms:mergeUniforms([UniformsLib.lights,UniformsLib.fog,{color:{value:new Color(0)},opacity:{value:1}}]),vertexShader:ShaderChunk.shadow_vert,fragmentShader:ShaderChunk.shadow_frag}};ShaderLib.physical={uniforms:mergeUniforms([ShaderLib.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new Vector2(1,1)},clearcoatNormalMap:{value:null},iridescence:{value:0},iridescenceMap:{value:null},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},sheen:{value:0},sheenColor:{value:new Color(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new Vector2},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new Color(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new Color(1,1,1)},specularColorMap:{value:null}}]),vertexShader:ShaderChunk.meshphysical_vert,fragmentShader:ShaderChunk.meshphysical_frag};const _rgb={r:0,b:0,g:0};function WebGLBackground(s,e,t,n,o,a,r){const l=new Color(0);let d=a===!0?0:1,h,f,_=null,g=0,b=null;function w(v,T){let D=!1,C=T.isScene===!0?T.background:null;C&&C.isTexture&&(C=(T.backgroundBlurriness>0?t:e).get(C));const I=s.xr,N=I.getSession&&I.getSession();N&&N.environmentBlendMode==="additive"&&(C=null),C===null?x(l,d):C&&C.isColor&&(x(C,1),D=!0),(s.autoClear||D)&&s.clear(s.autoClearColor,s.autoClearDepth,s.autoClearStencil),C&&(C.isCubeTexture||C.mapping===CubeUVReflectionMapping)?(f===void 0&&(f=new Mesh(new BoxGeometry(1,1,1),new ShaderMaterial({name:"BackgroundCubeMaterial",uniforms:cloneUniforms(ShaderLib.backgroundCube.uniforms),vertexShader:ShaderLib.backgroundCube.vertexShader,fragmentShader:ShaderLib.backgroundCube.fragmentShader,side:BackSide,depthTest:!1,depthWrite:!1,fog:!1})),f.geometry.deleteAttribute("normal"),f.geometry.deleteAttribute("uv"),f.onBeforeRender=function(F,G,L){this.matrixWorld.copyPosition(L.matrixWorld)},Object.defineProperty(f.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),o.update(f)),f.material.uniforms.envMap.value=C,f.material.uniforms.flipEnvMap.value=C.isCubeTexture&&C.isRenderTargetTexture===!1?-1:1,f.material.uniforms.backgroundBlurriness.value=T.backgroundBlurriness,f.material.uniforms.backgroundIntensity.value=T.backgroundIntensity,f.material.toneMapped=C.encoding!==sRGBEncoding,(_!==C||g!==C.version||b!==s.toneMapping)&&(f.material.needsUpdate=!0,_=C,g=C.version,b=s.toneMapping),f.layers.enableAll(),v.unshift(f,f.geometry,f.material,0,0,null)):C&&C.isTexture&&(h===void 0&&(h=new Mesh(new PlaneGeometry(2,2),new ShaderMaterial({name:"BackgroundMaterial",uniforms:cloneUniforms(ShaderLib.background.uniforms),vertexShader:ShaderLib.background.vertexShader,fragmentShader:ShaderLib.background.fragmentShader,side:FrontSide,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),Object.defineProperty(h.material,"map",{get:function(){return this.uniforms.t2D.value}}),o.update(h)),h.material.uniforms.t2D.value=C,h.material.uniforms.backgroundIntensity.value=T.backgroundIntensity,h.material.toneMapped=C.encoding!==sRGBEncoding,C.matrixAutoUpdate===!0&&C.updateMatrix(),h.material.uniforms.uvTransform.value.copy(C.matrix),(_!==C||g!==C.version||b!==s.toneMapping)&&(h.material.needsUpdate=!0,_=C,g=C.version,b=s.toneMapping),h.layers.enableAll(),v.unshift(h,h.geometry,h.material,0,0,null))}function x(v,T){v.getRGB(_rgb,getUnlitUniformColorSpace(s)),n.buffers.color.setClear(_rgb.r,_rgb.g,_rgb.b,T,r)}return{getClearColor:function(){return l},setClearColor:function(v,T=1){l.set(v),d=T,x(l,d)},getClearAlpha:function(){return d},setClearAlpha:function(v){d=v,x(l,d)},render:w}}function WebGLBindingStates(s,e,t,n){const o=s.getParameter(34921),a=n.isWebGL2?null:e.get("OES_vertex_array_object"),r=n.isWebGL2||a!==null,l={},d=v(null);let h=d,f=!1;function _(q,ie,me,Q,K){let le=!1;if(r){const de=x(Q,me,ie);h!==de&&(h=de,b(h.object)),le=T(q,Q,me,K),le&&D(q,Q,me,K)}else{const de=ie.wireframe===!0;(h.geometry!==Q.id||h.program!==me.id||h.wireframe!==de)&&(h.geometry=Q.id,h.program=me.id,h.wireframe=de,le=!0)}K!==null&&t.update(K,34963),(le||f)&&(f=!1,L(q,ie,me,Q),K!==null&&s.bindBuffer(34963,t.get(K).buffer))}function g(){return n.isWebGL2?s.createVertexArray():a.createVertexArrayOES()}function b(q){return n.isWebGL2?s.bindVertexArray(q):a.bindVertexArrayOES(q)}function w(q){return n.isWebGL2?s.deleteVertexArray(q):a.deleteVertexArrayOES(q)}function x(q,ie,me){const Q=me.wireframe===!0;let K=l[q.id];K===void 0&&(K={},l[q.id]=K);let le=K[ie.id];le===void 0&&(le={},K[ie.id]=le);let de=le[Q];return de===void 0&&(de=v(g()),le[Q]=de),de}function v(q){const ie=[],me=[],Q=[];for(let K=0;K<o;K++)ie[K]=0,me[K]=0,Q[K]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:ie,enabledAttributes:me,attributeDivisors:Q,object:q,attributes:{},index:null}}function T(q,ie,me,Q){const K=h.attributes,le=ie.attributes;let de=0;const ve=me.getAttributes();for(const $ in ve)if(ve[$].location>=0){const ne=K[$];let V=le[$];if(V===void 0&&($==="instanceMatrix"&&q.instanceMatrix&&(V=q.instanceMatrix),$==="instanceColor"&&q.instanceColor&&(V=q.instanceColor)),ne===void 0||ne.attribute!==V||V&&ne.data!==V.data)return!0;de++}return h.attributesNum!==de||h.index!==Q}function D(q,ie,me,Q){const K={},le=ie.attributes;let de=0;const ve=me.getAttributes();for(const $ in ve)if(ve[$].location>=0){let ne=le[$];ne===void 0&&($==="instanceMatrix"&&q.instanceMatrix&&(ne=q.instanceMatrix),$==="instanceColor"&&q.instanceColor&&(ne=q.instanceColor));const V={};V.attribute=ne,ne&&ne.data&&(V.data=ne.data),K[$]=V,de++}h.attributes=K,h.attributesNum=de,h.index=Q}function C(){const q=h.newAttributes;for(let ie=0,me=q.length;ie<me;ie++)q[ie]=0}function I(q){N(q,0)}function N(q,ie){const me=h.newAttributes,Q=h.enabledAttributes,K=h.attributeDivisors;me[q]=1,Q[q]===0&&(s.enableVertexAttribArray(q),Q[q]=1),K[q]!==ie&&((n.isWebGL2?s:e.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](q,ie),K[q]=ie)}function F(){const q=h.newAttributes,ie=h.enabledAttributes;for(let me=0,Q=ie.length;me<Q;me++)ie[me]!==q[me]&&(s.disableVertexAttribArray(me),ie[me]=0)}function G(q,ie,me,Q,K,le){n.isWebGL2===!0&&(me===5124||me===5125)?s.vertexAttribIPointer(q,ie,me,K,le):s.vertexAttribPointer(q,ie,me,Q,K,le)}function L(q,ie,me,Q){if(n.isWebGL2===!1&&(q.isInstancedMesh||Q.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;C();const K=Q.attributes,le=me.getAttributes(),de=ie.defaultAttributeValues;for(const ve in le){const $=le[ve];if($.location>=0){let z=K[ve];if(z===void 0&&(ve==="instanceMatrix"&&q.instanceMatrix&&(z=q.instanceMatrix),ve==="instanceColor"&&q.instanceColor&&(z=q.instanceColor)),z!==void 0){const ne=z.normalized,V=z.itemSize,ye=t.get(z);if(ye===void 0)continue;const Se=ye.buffer,Le=ye.type,De=ye.bytesPerElement;if(z.isInterleavedBufferAttribute){const Oe=z.data,ke=Oe.stride,Ve=z.offset;if(Oe.isInstancedInterleavedBuffer){for(let je=0;je<$.locationSize;je++)N($.location+je,Oe.meshPerAttribute);q.isInstancedMesh!==!0&&Q._maxInstanceCount===void 0&&(Q._maxInstanceCount=Oe.meshPerAttribute*Oe.count)}else for(let je=0;je<$.locationSize;je++)I($.location+je);s.bindBuffer(34962,Se);for(let je=0;je<$.locationSize;je++)G($.location+je,V/$.locationSize,Le,ne,ke*De,(Ve+V/$.locationSize*je)*De)}else{if(z.isInstancedBufferAttribute){for(let Oe=0;Oe<$.locationSize;Oe++)N($.location+Oe,z.meshPerAttribute);q.isInstancedMesh!==!0&&Q._maxInstanceCount===void 0&&(Q._maxInstanceCount=z.meshPerAttribute*z.count)}else for(let Oe=0;Oe<$.locationSize;Oe++)I($.location+Oe);s.bindBuffer(34962,Se);for(let Oe=0;Oe<$.locationSize;Oe++)G($.location+Oe,V/$.locationSize,Le,ne,V*De,V/$.locationSize*Oe*De)}}else if(de!==void 0){const ne=de[ve];if(ne!==void 0)switch(ne.length){case 2:s.vertexAttrib2fv($.location,ne);break;case 3:s.vertexAttrib3fv($.location,ne);break;case 4:s.vertexAttrib4fv($.location,ne);break;default:s.vertexAttrib1fv($.location,ne)}}}}F()}function B(){se();for(const q in l){const ie=l[q];for(const me in ie){const Q=ie[me];for(const K in Q)w(Q[K].object),delete Q[K];delete ie[me]}delete l[q]}}function W(q){if(l[q.id]===void 0)return;const ie=l[q.id];for(const me in ie){const Q=ie[me];for(const K in Q)w(Q[K].object),delete Q[K];delete ie[me]}delete l[q.id]}function oe(q){for(const ie in l){const me=l[ie];if(me[q.id]===void 0)continue;const Q=me[q.id];for(const K in Q)w(Q[K].object),delete Q[K];delete me[q.id]}}function se(){Y(),f=!0,h!==d&&(h=d,b(h.object))}function Y(){d.geometry=null,d.program=null,d.wireframe=!1}return{setup:_,reset:se,resetDefaultState:Y,dispose:B,releaseStatesOfGeometry:W,releaseStatesOfProgram:oe,initAttributes:C,enableAttribute:I,disableUnusedAttributes:F}}function WebGLBufferRenderer(s,e,t,n){const o=n.isWebGL2;let a;function r(h){a=h}function l(h,f){s.drawArrays(a,h,f),t.update(f,a,1)}function d(h,f,_){if(_===0)return;let g,b;if(o)g=s,b="drawArraysInstanced";else if(g=e.get("ANGLE_instanced_arrays"),b="drawArraysInstancedANGLE",g===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}g[b](a,h,f,_),t.update(f,a,_)}this.setMode=r,this.render=l,this.renderInstances=d}function WebGLCapabilities(s,e,t){let n;function o(){if(n!==void 0)return n;if(e.has("EXT_texture_filter_anisotropic")===!0){const G=e.get("EXT_texture_filter_anisotropic");n=s.getParameter(G.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function a(G){if(G==="highp"){if(s.getShaderPrecisionFormat(35633,36338).precision>0&&s.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";G="mediump"}return G==="mediump"&&s.getShaderPrecisionFormat(35633,36337).precision>0&&s.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const r=typeof WebGL2RenderingContext<"u"&&s instanceof WebGL2RenderingContext;let l=t.precision!==void 0?t.precision:"highp";const d=a(l);d!==l&&(console.warn("THREE.WebGLRenderer:",l,"not supported, using",d,"instead."),l=d);const h=r||e.has("WEBGL_draw_buffers"),f=t.logarithmicDepthBuffer===!0,_=s.getParameter(34930),g=s.getParameter(35660),b=s.getParameter(3379),w=s.getParameter(34076),x=s.getParameter(34921),v=s.getParameter(36347),T=s.getParameter(36348),D=s.getParameter(36349),C=g>0,I=r||e.has("OES_texture_float"),N=C&&I,F=r?s.getParameter(36183):0;return{isWebGL2:r,drawBuffers:h,getMaxAnisotropy:o,getMaxPrecision:a,precision:l,logarithmicDepthBuffer:f,maxTextures:_,maxVertexTextures:g,maxTextureSize:b,maxCubemapSize:w,maxAttributes:x,maxVertexUniforms:v,maxVaryings:T,maxFragmentUniforms:D,vertexTextures:C,floatFragmentTextures:I,floatVertexTextures:N,maxSamples:F}}function WebGLClipping(s){const e=this;let t=null,n=0,o=!1,a=!1;const r=new Plane,l=new Matrix3,d={value:null,needsUpdate:!1};this.uniform=d,this.numPlanes=0,this.numIntersection=0,this.init=function(_,g){const b=_.length!==0||g||n!==0||o;return o=g,n=_.length,b},this.beginShadows=function(){a=!0,f(null)},this.endShadows=function(){a=!1},this.setGlobalState=function(_,g){t=f(_,g,0)},this.setState=function(_,g,b){const w=_.clippingPlanes,x=_.clipIntersection,v=_.clipShadows,T=s.get(_);if(!o||w===null||w.length===0||a&&!v)a?f(null):h();else{const D=a?0:n,C=D*4;let I=T.clippingState||null;d.value=I,I=f(w,g,C,b);for(let N=0;N!==C;++N)I[N]=t[N];T.clippingState=I,this.numIntersection=x?this.numPlanes:0,this.numPlanes+=D}};function h(){d.value!==t&&(d.value=t,d.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function f(_,g,b,w){const x=_!==null?_.length:0;let v=null;if(x!==0){if(v=d.value,w!==!0||v===null){const T=b+x*4,D=g.matrixWorldInverse;l.getNormalMatrix(D),(v===null||v.length<T)&&(v=new Float32Array(T));for(let C=0,I=b;C!==x;++C,I+=4)r.copy(_[C]).applyMatrix4(D,l),r.normal.toArray(v,I),v[I+3]=r.constant}d.value=v,d.needsUpdate=!0}return e.numPlanes=x,e.numIntersection=0,v}}function WebGLCubeMaps(s){let e=new WeakMap;function t(r,l){return l===EquirectangularReflectionMapping?r.mapping=CubeReflectionMapping:l===EquirectangularRefractionMapping&&(r.mapping=CubeRefractionMapping),r}function n(r){if(r&&r.isTexture&&r.isRenderTargetTexture===!1){const l=r.mapping;if(l===EquirectangularReflectionMapping||l===EquirectangularRefractionMapping)if(e.has(r)){const d=e.get(r).texture;return t(d,r.mapping)}else{const d=r.image;if(d&&d.height>0){const h=new WebGLCubeRenderTarget(d.height/2);return h.fromEquirectangularTexture(s,r),e.set(r,h),r.addEventListener("dispose",o),t(h.texture,r.mapping)}else return null}}return r}function o(r){const l=r.target;l.removeEventListener("dispose",o);const d=e.get(l);d!==void 0&&(e.delete(l),d.dispose())}function a(){e=new WeakMap}return{get:n,dispose:a}}class OrthographicCamera extends Camera{constructor(e=-1,t=1,n=1,o=-1,a=.1,r=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=o,this.near=a,this.far=r,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,o,a,r){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=o,this.view.width=a,this.view.height=r,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,o=(this.top+this.bottom)/2;let a=n-e,r=n+e,l=o+t,d=o-t;if(this.view!==null&&this.view.enabled){const h=(this.right-this.left)/this.view.fullWidth/this.zoom,f=(this.top-this.bottom)/this.view.fullHeight/this.zoom;a+=h*this.view.offsetX,r=a+h*this.view.width,l-=f*this.view.offsetY,d=l-f*this.view.height}this.projectionMatrix.makeOrthographic(a,r,l,d,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}const LOD_MIN=4,EXTRA_LOD_SIGMA=[.125,.215,.35,.446,.526,.582],MAX_SAMPLES=20,_flatCamera=new OrthographicCamera,_clearColor=new Color;let _oldTarget=null;const PHI=(1+Math.sqrt(5))/2,INV_PHI=1/PHI,_axisDirections=[new Vector3(1,1,1),new Vector3(-1,1,1),new Vector3(1,1,-1),new Vector3(-1,1,-1),new Vector3(0,PHI,INV_PHI),new Vector3(0,PHI,-INV_PHI),new Vector3(INV_PHI,0,PHI),new Vector3(-INV_PHI,0,PHI),new Vector3(PHI,INV_PHI,0),new Vector3(-PHI,INV_PHI,0)];class PMREMGenerator{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,o=100){_oldTarget=this._renderer.getRenderTarget(),this._setSize(256);const a=this._allocateTargets();return a.depthBuffer=!0,this._sceneToCubeUV(e,n,o,a),t>0&&this._blur(a,0,0,t),this._applyPMREM(a),this._cleanup(a),a}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=_getCubemapMaterial(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=_getEquirectMaterial(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(_oldTarget),e.scissorTest=!1,_setViewport(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===CubeReflectionMapping||e.mapping===CubeRefractionMapping?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),_oldTarget=this._renderer.getRenderTarget();const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:LinearFilter,minFilter:LinearFilter,generateMipmaps:!1,type:HalfFloatType,format:RGBAFormat,encoding:LinearEncoding,depthBuffer:!1},o=_createRenderTarget(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=_createRenderTarget(e,t,n);const{_lodMax:a}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=_createPlanes(a)),this._blurMaterial=_getBlurShader(a,e,t)}return o}_compileMaterial(e){const t=new Mesh(this._lodPlanes[0],e);this._renderer.compile(t,_flatCamera)}_sceneToCubeUV(e,t,n,o){const l=new PerspectiveCamera(90,1,t,n),d=[1,-1,1,1,1,1],h=[1,1,1,-1,-1,-1],f=this._renderer,_=f.autoClear,g=f.toneMapping;f.getClearColor(_clearColor),f.toneMapping=NoToneMapping,f.autoClear=!1;const b=new MeshBasicMaterial({name:"PMREM.Background",side:BackSide,depthWrite:!1,depthTest:!1}),w=new Mesh(new BoxGeometry,b);let x=!1;const v=e.background;v?v.isColor&&(b.color.copy(v),e.background=null,x=!0):(b.color.copy(_clearColor),x=!0);for(let T=0;T<6;T++){const D=T%3;D===0?(l.up.set(0,d[T],0),l.lookAt(h[T],0,0)):D===1?(l.up.set(0,0,d[T]),l.lookAt(0,h[T],0)):(l.up.set(0,d[T],0),l.lookAt(0,0,h[T]));const C=this._cubeSize;_setViewport(o,D*C,T>2?C:0,C,C),f.setRenderTarget(o),x&&f.render(w,l),f.render(e,l)}w.geometry.dispose(),w.material.dispose(),f.toneMapping=g,f.autoClear=_,e.background=v}_textureToCubeUV(e,t){const n=this._renderer,o=e.mapping===CubeReflectionMapping||e.mapping===CubeRefractionMapping;o?(this._cubemapMaterial===null&&(this._cubemapMaterial=_getCubemapMaterial()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=_getEquirectMaterial());const a=o?this._cubemapMaterial:this._equirectMaterial,r=new Mesh(this._lodPlanes[0],a),l=a.uniforms;l.envMap.value=e;const d=this._cubeSize;_setViewport(t,0,0,3*d,2*d),n.setRenderTarget(t),n.render(r,_flatCamera)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let o=1;o<this._lodPlanes.length;o++){const a=Math.sqrt(this._sigmas[o]*this._sigmas[o]-this._sigmas[o-1]*this._sigmas[o-1]),r=_axisDirections[(o-1)%_axisDirections.length];this._blur(e,o-1,o,a,r)}t.autoClear=n}_blur(e,t,n,o,a){const r=this._pingPongRenderTarget;this._halfBlur(e,r,t,n,o,"latitudinal",a),this._halfBlur(r,e,n,n,o,"longitudinal",a)}_halfBlur(e,t,n,o,a,r,l){const d=this._renderer,h=this._blurMaterial;r!=="latitudinal"&&r!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const f=3,_=new Mesh(this._lodPlanes[o],h),g=h.uniforms,b=this._sizeLods[n]-1,w=isFinite(a)?Math.PI/(2*b):2*Math.PI/(2*MAX_SAMPLES-1),x=a/w,v=isFinite(a)?1+Math.floor(f*x):MAX_SAMPLES;v>MAX_SAMPLES&&console.warn(`sigmaRadians, ${a}, is too large and will clip, as it requested ${v} samples when the maximum is set to ${MAX_SAMPLES}`);const T=[];let D=0;for(let G=0;G<MAX_SAMPLES;++G){const L=G/x,B=Math.exp(-L*L/2);T.push(B),G===0?D+=B:G<v&&(D+=2*B)}for(let G=0;G<T.length;G++)T[G]=T[G]/D;g.envMap.value=e.texture,g.samples.value=v,g.weights.value=T,g.latitudinal.value=r==="latitudinal",l&&(g.poleAxis.value=l);const{_lodMax:C}=this;g.dTheta.value=w,g.mipInt.value=C-n;const I=this._sizeLods[o],N=3*I*(o>C-LOD_MIN?o-C+LOD_MIN:0),F=4*(this._cubeSize-I);_setViewport(t,N,F,3*I,2*I),d.setRenderTarget(t),d.render(_,_flatCamera)}}function _createPlanes(s){const e=[],t=[],n=[];let o=s;const a=s-LOD_MIN+1+EXTRA_LOD_SIGMA.length;for(let r=0;r<a;r++){const l=Math.pow(2,o);t.push(l);let d=1/l;r>s-LOD_MIN?d=EXTRA_LOD_SIGMA[r-s+LOD_MIN-1]:r===0&&(d=0),n.push(d);const h=1/(l-2),f=-h,_=1+h,g=[f,f,_,f,_,_,f,f,_,_,f,_],b=6,w=6,x=3,v=2,T=1,D=new Float32Array(x*w*b),C=new Float32Array(v*w*b),I=new Float32Array(T*w*b);for(let F=0;F<b;F++){const G=F%3*2/3-1,L=F>2?0:-1,B=[G,L,0,G+2/3,L,0,G+2/3,L+1,0,G,L,0,G+2/3,L+1,0,G,L+1,0];D.set(B,x*w*F),C.set(g,v*w*F);const W=[F,F,F,F,F,F];I.set(W,T*w*F)}const N=new BufferGeometry;N.setAttribute("position",new BufferAttribute(D,x)),N.setAttribute("uv",new BufferAttribute(C,v)),N.setAttribute("faceIndex",new BufferAttribute(I,T)),e.push(N),o>LOD_MIN&&o--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function _createRenderTarget(s,e,t){const n=new WebGLRenderTarget(s,e,t);return n.texture.mapping=CubeUVReflectionMapping,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function _setViewport(s,e,t,n,o){s.viewport.set(e,t,n,o),s.scissor.set(e,t,n,o)}function _getBlurShader(s,e,t){const n=new Float32Array(MAX_SAMPLES),o=new Vector3(0,1,0);return new ShaderMaterial({name:"SphericalGaussianBlur",defines:{n:MAX_SAMPLES,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${s}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:o}},vertexShader:_getCommonVertexShader(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:NoBlending,depthTest:!1,depthWrite:!1})}function _getEquirectMaterial(){return new ShaderMaterial({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:_getCommonVertexShader(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:NoBlending,depthTest:!1,depthWrite:!1})}function _getCubemapMaterial(){return new ShaderMaterial({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:_getCommonVertexShader(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:NoBlending,depthTest:!1,depthWrite:!1})}function _getCommonVertexShader(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function WebGLCubeUVMaps(s){let e=new WeakMap,t=null;function n(l){if(l&&l.isTexture){const d=l.mapping,h=d===EquirectangularReflectionMapping||d===EquirectangularRefractionMapping,f=d===CubeReflectionMapping||d===CubeRefractionMapping;if(h||f)if(l.isRenderTargetTexture&&l.needsPMREMUpdate===!0){l.needsPMREMUpdate=!1;let _=e.get(l);return t===null&&(t=new PMREMGenerator(s)),_=h?t.fromEquirectangular(l,_):t.fromCubemap(l,_),e.set(l,_),_.texture}else{if(e.has(l))return e.get(l).texture;{const _=l.image;if(h&&_&&_.height>0||f&&_&&o(_)){t===null&&(t=new PMREMGenerator(s));const g=h?t.fromEquirectangular(l):t.fromCubemap(l);return e.set(l,g),l.addEventListener("dispose",a),g.texture}else return null}}}return l}function o(l){let d=0;const h=6;for(let f=0;f<h;f++)l[f]!==void 0&&d++;return d===h}function a(l){const d=l.target;d.removeEventListener("dispose",a);const h=e.get(d);h!==void 0&&(e.delete(d),h.dispose())}function r(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:r}}function WebGLExtensions(s){const e={};function t(n){if(e[n]!==void 0)return e[n];let o;switch(n){case"WEBGL_depth_texture":o=s.getExtension("WEBGL_depth_texture")||s.getExtension("MOZ_WEBGL_depth_texture")||s.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":o=s.getExtension("EXT_texture_filter_anisotropic")||s.getExtension("MOZ_EXT_texture_filter_anisotropic")||s.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":o=s.getExtension("WEBGL_compressed_texture_s3tc")||s.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":o=s.getExtension("WEBGL_compressed_texture_pvrtc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:o=s.getExtension(n)}return e[n]=o,o}return{has:function(n){return t(n)!==null},init:function(n){n.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(n){const o=t(n);return o===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),o}}}function WebGLGeometries(s,e,t,n){const o={},a=new WeakMap;function r(_){const g=_.target;g.index!==null&&e.remove(g.index);for(const w in g.attributes)e.remove(g.attributes[w]);g.removeEventListener("dispose",r),delete o[g.id];const b=a.get(g);b&&(e.remove(b),a.delete(g)),n.releaseStatesOfGeometry(g),g.isInstancedBufferGeometry===!0&&delete g._maxInstanceCount,t.memory.geometries--}function l(_,g){return o[g.id]===!0||(g.addEventListener("dispose",r),o[g.id]=!0,t.memory.geometries++),g}function d(_){const g=_.attributes;for(const w in g)e.update(g[w],34962);const b=_.morphAttributes;for(const w in b){const x=b[w];for(let v=0,T=x.length;v<T;v++)e.update(x[v],34962)}}function h(_){const g=[],b=_.index,w=_.attributes.position;let x=0;if(b!==null){const D=b.array;x=b.version;for(let C=0,I=D.length;C<I;C+=3){const N=D[C+0],F=D[C+1],G=D[C+2];g.push(N,F,F,G,G,N)}}else{const D=w.array;x=w.version;for(let C=0,I=D.length/3-1;C<I;C+=3){const N=C+0,F=C+1,G=C+2;g.push(N,F,F,G,G,N)}}const v=new(arrayNeedsUint32(g)?Uint32BufferAttribute:Uint16BufferAttribute)(g,1);v.version=x;const T=a.get(_);T&&e.remove(T),a.set(_,v)}function f(_){const g=a.get(_);if(g){const b=_.index;b!==null&&g.version<b.version&&h(_)}else h(_);return a.get(_)}return{get:l,update:d,getWireframeAttribute:f}}function WebGLIndexedBufferRenderer(s,e,t,n){const o=n.isWebGL2;let a;function r(g){a=g}let l,d;function h(g){l=g.type,d=g.bytesPerElement}function f(g,b){s.drawElements(a,b,l,g*d),t.update(b,a,1)}function _(g,b,w){if(w===0)return;let x,v;if(o)x=s,v="drawElementsInstanced";else if(x=e.get("ANGLE_instanced_arrays"),v="drawElementsInstancedANGLE",x===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}x[v](a,b,l,g*d,w),t.update(b,a,w)}this.setMode=r,this.setIndex=h,this.render=f,this.renderInstances=_}function WebGLInfo(s){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(a,r,l){switch(t.calls++,r){case 4:t.triangles+=l*(a/3);break;case 1:t.lines+=l*(a/2);break;case 3:t.lines+=l*(a-1);break;case 2:t.lines+=l*a;break;case 0:t.points+=l*a;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",r);break}}function o(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:o,update:n}}function numericalSort(s,e){return s[0]-e[0]}function absNumericalSort(s,e){return Math.abs(e[1])-Math.abs(s[1])}function WebGLMorphtargets(s,e,t){const n={},o=new Float32Array(8),a=new WeakMap,r=new Vector4,l=[];for(let h=0;h<8;h++)l[h]=[h,0];function d(h,f,_){const g=h.morphTargetInfluences;if(e.isWebGL2===!0){const w=f.morphAttributes.position||f.morphAttributes.normal||f.morphAttributes.color,x=w!==void 0?w.length:0;let v=a.get(f);if(v===void 0||v.count!==x){let ie=function(){Y.dispose(),a.delete(f),f.removeEventListener("dispose",ie)};var b=ie;v!==void 0&&v.texture.dispose();const C=f.morphAttributes.position!==void 0,I=f.morphAttributes.normal!==void 0,N=f.morphAttributes.color!==void 0,F=f.morphAttributes.position||[],G=f.morphAttributes.normal||[],L=f.morphAttributes.color||[];let B=0;C===!0&&(B=1),I===!0&&(B=2),N===!0&&(B=3);let W=f.attributes.position.count*B,oe=1;W>e.maxTextureSize&&(oe=Math.ceil(W/e.maxTextureSize),W=e.maxTextureSize);const se=new Float32Array(W*oe*4*x),Y=new DataArrayTexture(se,W,oe,x);Y.type=FloatType,Y.needsUpdate=!0;const q=B*4;for(let me=0;me<x;me++){const Q=F[me],K=G[me],le=L[me],de=W*oe*4*me;for(let ve=0;ve<Q.count;ve++){const $=ve*q;C===!0&&(r.fromBufferAttribute(Q,ve),se[de+$+0]=r.x,se[de+$+1]=r.y,se[de+$+2]=r.z,se[de+$+3]=0),I===!0&&(r.fromBufferAttribute(K,ve),se[de+$+4]=r.x,se[de+$+5]=r.y,se[de+$+6]=r.z,se[de+$+7]=0),N===!0&&(r.fromBufferAttribute(le,ve),se[de+$+8]=r.x,se[de+$+9]=r.y,se[de+$+10]=r.z,se[de+$+11]=le.itemSize===4?r.w:1)}}v={count:x,texture:Y,size:new Vector2(W,oe)},a.set(f,v),f.addEventListener("dispose",ie)}let T=0;for(let C=0;C<g.length;C++)T+=g[C];const D=f.morphTargetsRelative?1:1-T;_.getUniforms().setValue(s,"morphTargetBaseInfluence",D),_.getUniforms().setValue(s,"morphTargetInfluences",g),_.getUniforms().setValue(s,"morphTargetsTexture",v.texture,t),_.getUniforms().setValue(s,"morphTargetsTextureSize",v.size)}else{const w=g===void 0?0:g.length;let x=n[f.id];if(x===void 0||x.length!==w){x=[];for(let I=0;I<w;I++)x[I]=[I,0];n[f.id]=x}for(let I=0;I<w;I++){const N=x[I];N[0]=I,N[1]=g[I]}x.sort(absNumericalSort);for(let I=0;I<8;I++)I<w&&x[I][1]?(l[I][0]=x[I][0],l[I][1]=x[I][1]):(l[I][0]=Number.MAX_SAFE_INTEGER,l[I][1]=0);l.sort(numericalSort);const v=f.morphAttributes.position,T=f.morphAttributes.normal;let D=0;for(let I=0;I<8;I++){const N=l[I],F=N[0],G=N[1];F!==Number.MAX_SAFE_INTEGER&&G?(v&&f.getAttribute("morphTarget"+I)!==v[F]&&f.setAttribute("morphTarget"+I,v[F]),T&&f.getAttribute("morphNormal"+I)!==T[F]&&f.setAttribute("morphNormal"+I,T[F]),o[I]=G,D+=G):(v&&f.hasAttribute("morphTarget"+I)===!0&&f.deleteAttribute("morphTarget"+I),T&&f.hasAttribute("morphNormal"+I)===!0&&f.deleteAttribute("morphNormal"+I),o[I]=0)}const C=f.morphTargetsRelative?1:1-D;_.getUniforms().setValue(s,"morphTargetBaseInfluence",C),_.getUniforms().setValue(s,"morphTargetInfluences",o)}}return{update:d}}function WebGLObjects(s,e,t,n){let o=new WeakMap;function a(d){const h=n.render.frame,f=d.geometry,_=e.get(d,f);return o.get(_)!==h&&(e.update(_),o.set(_,h)),d.isInstancedMesh&&(d.hasEventListener("dispose",l)===!1&&d.addEventListener("dispose",l),t.update(d.instanceMatrix,34962),d.instanceColor!==null&&t.update(d.instanceColor,34962)),_}function r(){o=new WeakMap}function l(d){const h=d.target;h.removeEventListener("dispose",l),t.remove(h.instanceMatrix),h.instanceColor!==null&&t.remove(h.instanceColor)}return{update:a,dispose:r}}const emptyTexture=new Texture,emptyArrayTexture=new DataArrayTexture,empty3dTexture=new Data3DTexture,emptyCubeTexture=new CubeTexture,arrayCacheF32=[],arrayCacheI32=[],mat4array=new Float32Array(16),mat3array=new Float32Array(9),mat2array=new Float32Array(4);function flatten(s,e,t){const n=s[0];if(n<=0||n>0)return s;const o=e*t;let a=arrayCacheF32[o];if(a===void 0&&(a=new Float32Array(o),arrayCacheF32[o]=a),e!==0){n.toArray(a,0);for(let r=1,l=0;r!==e;++r)l+=t,s[r].toArray(a,l)}return a}function arraysEqual(s,e){if(s.length!==e.length)return!1;for(let t=0,n=s.length;t<n;t++)if(s[t]!==e[t])return!1;return!0}function copyArray(s,e){for(let t=0,n=e.length;t<n;t++)s[t]=e[t]}function allocTexUnits(s,e){let t=arrayCacheI32[e];t===void 0&&(t=new Int32Array(e),arrayCacheI32[e]=t);for(let n=0;n!==e;++n)t[n]=s.allocateTextureUnit();return t}function setValueV1f(s,e){const t=this.cache;t[0]!==e&&(s.uniform1f(this.addr,e),t[0]=e)}function setValueV2f(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(arraysEqual(t,e))return;s.uniform2fv(this.addr,e),copyArray(t,e)}}function setValueV3f(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(s.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(arraysEqual(t,e))return;s.uniform3fv(this.addr,e),copyArray(t,e)}}function setValueV4f(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(arraysEqual(t,e))return;s.uniform4fv(this.addr,e),copyArray(t,e)}}function setValueM2(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(arraysEqual(t,e))return;s.uniformMatrix2fv(this.addr,!1,e),copyArray(t,e)}else{if(arraysEqual(t,n))return;mat2array.set(n),s.uniformMatrix2fv(this.addr,!1,mat2array),copyArray(t,n)}}function setValueM3(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(arraysEqual(t,e))return;s.uniformMatrix3fv(this.addr,!1,e),copyArray(t,e)}else{if(arraysEqual(t,n))return;mat3array.set(n),s.uniformMatrix3fv(this.addr,!1,mat3array),copyArray(t,n)}}function setValueM4(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(arraysEqual(t,e))return;s.uniformMatrix4fv(this.addr,!1,e),copyArray(t,e)}else{if(arraysEqual(t,n))return;mat4array.set(n),s.uniformMatrix4fv(this.addr,!1,mat4array),copyArray(t,n)}}function setValueV1i(s,e){const t=this.cache;t[0]!==e&&(s.uniform1i(this.addr,e),t[0]=e)}function setValueV2i(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(arraysEqual(t,e))return;s.uniform2iv(this.addr,e),copyArray(t,e)}}function setValueV3i(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(arraysEqual(t,e))return;s.uniform3iv(this.addr,e),copyArray(t,e)}}function setValueV4i(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(arraysEqual(t,e))return;s.uniform4iv(this.addr,e),copyArray(t,e)}}function setValueV1ui(s,e){const t=this.cache;t[0]!==e&&(s.uniform1ui(this.addr,e),t[0]=e)}function setValueV2ui(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(arraysEqual(t,e))return;s.uniform2uiv(this.addr,e),copyArray(t,e)}}function setValueV3ui(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(arraysEqual(t,e))return;s.uniform3uiv(this.addr,e),copyArray(t,e)}}function setValueV4ui(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(arraysEqual(t,e))return;s.uniform4uiv(this.addr,e),copyArray(t,e)}}function setValueT1(s,e,t){const n=this.cache,o=t.allocateTextureUnit();n[0]!==o&&(s.uniform1i(this.addr,o),n[0]=o),t.setTexture2D(e||emptyTexture,o)}function setValueT3D1(s,e,t){const n=this.cache,o=t.allocateTextureUnit();n[0]!==o&&(s.uniform1i(this.addr,o),n[0]=o),t.setTexture3D(e||empty3dTexture,o)}function setValueT6(s,e,t){const n=this.cache,o=t.allocateTextureUnit();n[0]!==o&&(s.uniform1i(this.addr,o),n[0]=o),t.setTextureCube(e||emptyCubeTexture,o)}function setValueT2DArray1(s,e,t){const n=this.cache,o=t.allocateTextureUnit();n[0]!==o&&(s.uniform1i(this.addr,o),n[0]=o),t.setTexture2DArray(e||emptyArrayTexture,o)}function getSingularSetter(s){switch(s){case 5126:return setValueV1f;case 35664:return setValueV2f;case 35665:return setValueV3f;case 35666:return setValueV4f;case 35674:return setValueM2;case 35675:return setValueM3;case 35676:return setValueM4;case 5124:case 35670:return setValueV1i;case 35667:case 35671:return setValueV2i;case 35668:case 35672:return setValueV3i;case 35669:case 35673:return setValueV4i;case 5125:return setValueV1ui;case 36294:return setValueV2ui;case 36295:return setValueV3ui;case 36296:return setValueV4ui;case 35678:case 36198:case 36298:case 36306:case 35682:return setValueT1;case 35679:case 36299:case 36307:return setValueT3D1;case 35680:case 36300:case 36308:case 36293:return setValueT6;case 36289:case 36303:case 36311:case 36292:return setValueT2DArray1}}function setValueV1fArray(s,e){s.uniform1fv(this.addr,e)}function setValueV2fArray(s,e){const t=flatten(e,this.size,2);s.uniform2fv(this.addr,t)}function setValueV3fArray(s,e){const t=flatten(e,this.size,3);s.uniform3fv(this.addr,t)}function setValueV4fArray(s,e){const t=flatten(e,this.size,4);s.uniform4fv(this.addr,t)}function setValueM2Array(s,e){const t=flatten(e,this.size,4);s.uniformMatrix2fv(this.addr,!1,t)}function setValueM3Array(s,e){const t=flatten(e,this.size,9);s.uniformMatrix3fv(this.addr,!1,t)}function setValueM4Array(s,e){const t=flatten(e,this.size,16);s.uniformMatrix4fv(this.addr,!1,t)}function setValueV1iArray(s,e){s.uniform1iv(this.addr,e)}function setValueV2iArray(s,e){s.uniform2iv(this.addr,e)}function setValueV3iArray(s,e){s.uniform3iv(this.addr,e)}function setValueV4iArray(s,e){s.uniform4iv(this.addr,e)}function setValueV1uiArray(s,e){s.uniform1uiv(this.addr,e)}function setValueV2uiArray(s,e){s.uniform2uiv(this.addr,e)}function setValueV3uiArray(s,e){s.uniform3uiv(this.addr,e)}function setValueV4uiArray(s,e){s.uniform4uiv(this.addr,e)}function setValueT1Array(s,e,t){const n=this.cache,o=e.length,a=allocTexUnits(t,o);arraysEqual(n,a)||(s.uniform1iv(this.addr,a),copyArray(n,a));for(let r=0;r!==o;++r)t.setTexture2D(e[r]||emptyTexture,a[r])}function setValueT3DArray(s,e,t){const n=this.cache,o=e.length,a=allocTexUnits(t,o);arraysEqual(n,a)||(s.uniform1iv(this.addr,a),copyArray(n,a));for(let r=0;r!==o;++r)t.setTexture3D(e[r]||empty3dTexture,a[r])}function setValueT6Array(s,e,t){const n=this.cache,o=e.length,a=allocTexUnits(t,o);arraysEqual(n,a)||(s.uniform1iv(this.addr,a),copyArray(n,a));for(let r=0;r!==o;++r)t.setTextureCube(e[r]||emptyCubeTexture,a[r])}function setValueT2DArrayArray(s,e,t){const n=this.cache,o=e.length,a=allocTexUnits(t,o);arraysEqual(n,a)||(s.uniform1iv(this.addr,a),copyArray(n,a));for(let r=0;r!==o;++r)t.setTexture2DArray(e[r]||emptyArrayTexture,a[r])}function getPureArraySetter(s){switch(s){case 5126:return setValueV1fArray;case 35664:return setValueV2fArray;case 35665:return setValueV3fArray;case 35666:return setValueV4fArray;case 35674:return setValueM2Array;case 35675:return setValueM3Array;case 35676:return setValueM4Array;case 5124:case 35670:return setValueV1iArray;case 35667:case 35671:return setValueV2iArray;case 35668:case 35672:return setValueV3iArray;case 35669:case 35673:return setValueV4iArray;case 5125:return setValueV1uiArray;case 36294:return setValueV2uiArray;case 36295:return setValueV3uiArray;case 36296:return setValueV4uiArray;case 35678:case 36198:case 36298:case 36306:case 35682:return setValueT1Array;case 35679:case 36299:case 36307:return setValueT3DArray;case 35680:case 36300:case 36308:case 36293:return setValueT6Array;case 36289:case 36303:case 36311:case 36292:return setValueT2DArrayArray}}class SingleUniform{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.setValue=getSingularSetter(t.type)}}class PureArrayUniform{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.size=t.size,this.setValue=getPureArraySetter(t.type)}}class StructuredUniform{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const o=this.seq;for(let a=0,r=o.length;a!==r;++a){const l=o[a];l.setValue(e,t[l.id],n)}}}const RePathPart=/(\w+)(\])?(\[|\.)?/g;function addUniform(s,e){s.seq.push(e),s.map[e.id]=e}function parseUniform(s,e,t){const n=s.name,o=n.length;for(RePathPart.lastIndex=0;;){const a=RePathPart.exec(n),r=RePathPart.lastIndex;let l=a[1];const d=a[2]==="]",h=a[3];if(d&&(l=l|0),h===void 0||h==="["&&r+2===o){addUniform(t,h===void 0?new SingleUniform(l,s,e):new PureArrayUniform(l,s,e));break}else{let _=t.map[l];_===void 0&&(_=new StructuredUniform(l),addUniform(t,_)),t=_}}}class WebGLUniforms{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,35718);for(let o=0;o<n;++o){const a=e.getActiveUniform(t,o),r=e.getUniformLocation(t,a.name);parseUniform(a,r,this)}}setValue(e,t,n,o){const a=this.map[t];a!==void 0&&a.setValue(e,n,o)}setOptional(e,t,n){const o=t[n];o!==void 0&&this.setValue(e,n,o)}static upload(e,t,n,o){for(let a=0,r=t.length;a!==r;++a){const l=t[a],d=n[l.id];d.needsUpdate!==!1&&l.setValue(e,d.value,o)}}static seqWithValue(e,t){const n=[];for(let o=0,a=e.length;o!==a;++o){const r=e[o];r.id in t&&n.push(r)}return n}}function WebGLShader(s,e,t){const n=s.createShader(e);return s.shaderSource(n,t),s.compileShader(n),n}let programIdCount=0;function handleSource(s,e){const t=s.split(`
`),n=[],o=Math.max(e-6,0),a=Math.min(e+6,t.length);for(let r=o;r<a;r++){const l=r+1;n.push(`${l===e?">":" "} ${l}: ${t[r]}`)}return n.join(`
`)}function getEncodingComponents(s){switch(s){case LinearEncoding:return["Linear","( value )"];case sRGBEncoding:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",s),["Linear","( value )"]}}function getShaderErrors(s,e,t){const n=s.getShaderParameter(e,35713),o=s.getShaderInfoLog(e).trim();if(n&&o==="")return"";const a=/ERROR: 0:(\d+)/.exec(o);if(a){const r=parseInt(a[1]);return t.toUpperCase()+`

`+o+`

`+handleSource(s.getShaderSource(e),r)}else return o}function getTexelEncodingFunction(s,e){const t=getEncodingComponents(e);return"vec4 "+s+"( vec4 value ) { return LinearTo"+t[0]+t[1]+"; }"}function getToneMappingFunction(s,e){let t;switch(e){case LinearToneMapping:t="Linear";break;case ReinhardToneMapping:t="Reinhard";break;case CineonToneMapping:t="OptimizedCineon";break;case ACESFilmicToneMapping:t="ACESFilmic";break;case CustomToneMapping:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+s+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function generateExtensions(s){return[s.extensionDerivatives||s.envMapCubeUVHeight||s.bumpMap||s.tangentSpaceNormalMap||s.clearcoatNormalMap||s.flatShading||s.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(s.extensionFragDepth||s.logarithmicDepthBuffer)&&s.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",s.extensionDrawBuffers&&s.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(s.extensionShaderTextureLOD||s.envMap||s.transmission)&&s.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(filterEmptyLine).join(`
`)}function generateDefines(s){const e=[];for(const t in s){const n=s[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function fetchAttributeLocations(s,e){const t={},n=s.getProgramParameter(e,35721);for(let o=0;o<n;o++){const a=s.getActiveAttrib(e,o),r=a.name;let l=1;a.type===35674&&(l=2),a.type===35675&&(l=3),a.type===35676&&(l=4),t[r]={type:a.type,location:s.getAttribLocation(e,r),locationSize:l}}return t}function filterEmptyLine(s){return s!==""}function replaceLightNums(s,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return s.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function replaceClippingPlaneNums(s,e){return s.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const includePattern=/^[ \t]*#include +<([\w\d./]+)>/gm;function resolveIncludes(s){return s.replace(includePattern,includeReplacer)}function includeReplacer(s,e){const t=ShaderChunk[e];if(t===void 0)throw new Error("Can not resolve #include <"+e+">");return resolveIncludes(t)}const unrollLoopPattern=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function unrollLoops(s){return s.replace(unrollLoopPattern,loopReplacer)}function loopReplacer(s,e,t,n){let o="";for(let a=parseInt(e);a<parseInt(t);a++)o+=n.replace(/\[\s*i\s*\]/g,"[ "+a+" ]").replace(/UNROLLED_LOOP_INDEX/g,a);return o}function generatePrecision(s){let e="precision "+s.precision+` float;
precision `+s.precision+" int;";return s.precision==="highp"?e+=`
#define HIGH_PRECISION`:s.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:s.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function generateShadowMapTypeDefine(s){let e="SHADOWMAP_TYPE_BASIC";return s.shadowMapType===PCFShadowMap?e="SHADOWMAP_TYPE_PCF":s.shadowMapType===PCFSoftShadowMap?e="SHADOWMAP_TYPE_PCF_SOFT":s.shadowMapType===VSMShadowMap&&(e="SHADOWMAP_TYPE_VSM"),e}function generateEnvMapTypeDefine(s){let e="ENVMAP_TYPE_CUBE";if(s.envMap)switch(s.envMapMode){case CubeReflectionMapping:case CubeRefractionMapping:e="ENVMAP_TYPE_CUBE";break;case CubeUVReflectionMapping:e="ENVMAP_TYPE_CUBE_UV";break}return e}function generateEnvMapModeDefine(s){let e="ENVMAP_MODE_REFLECTION";if(s.envMap)switch(s.envMapMode){case CubeRefractionMapping:e="ENVMAP_MODE_REFRACTION";break}return e}function generateEnvMapBlendingDefine(s){let e="ENVMAP_BLENDING_NONE";if(s.envMap)switch(s.combine){case MultiplyOperation:e="ENVMAP_BLENDING_MULTIPLY";break;case MixOperation:e="ENVMAP_BLENDING_MIX";break;case AddOperation:e="ENVMAP_BLENDING_ADD";break}return e}function generateCubeUVSize(s){const e=s.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function WebGLProgram(s,e,t,n){const o=s.getContext(),a=t.defines;let r=t.vertexShader,l=t.fragmentShader;const d=generateShadowMapTypeDefine(t),h=generateEnvMapTypeDefine(t),f=generateEnvMapModeDefine(t),_=generateEnvMapBlendingDefine(t),g=generateCubeUVSize(t),b=t.isWebGL2?"":generateExtensions(t),w=generateDefines(a),x=o.createProgram();let v,T,D=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(v=[w].filter(filterEmptyLine).join(`
`),v.length>0&&(v+=`
`),T=[b,w].filter(filterEmptyLine).join(`
`),T.length>0&&(T+=`
`)):(v=[generatePrecision(t),"#define SHADER_NAME "+t.shaderName,w,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.supportsVertexTextures?"#define VERTEX_TEXTURES":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+f:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.displacementMap&&t.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+d:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(filterEmptyLine).join(`
`),T=[b,generatePrecision(t),"#define SHADER_NAME "+t.shaderName,w,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.envMap?"#define "+f:"",t.envMap?"#define "+_:"",g?"#define CUBEUV_TEXEL_WIDTH "+g.texelWidth:"",g?"#define CUBEUV_TEXEL_HEIGHT "+g.texelHeight:"",g?"#define CUBEUV_MAX_MIP "+g.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+d:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==NoToneMapping?"#define TONE_MAPPING":"",t.toneMapping!==NoToneMapping?ShaderChunk.tonemapping_pars_fragment:"",t.toneMapping!==NoToneMapping?getToneMappingFunction("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",ShaderChunk.encodings_pars_fragment,getTexelEncodingFunction("linearToOutputTexel",t.outputEncoding),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(filterEmptyLine).join(`
`)),r=resolveIncludes(r),r=replaceLightNums(r,t),r=replaceClippingPlaneNums(r,t),l=resolveIncludes(l),l=replaceLightNums(l,t),l=replaceClippingPlaneNums(l,t),r=unrollLoops(r),l=unrollLoops(l),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(D=`#version 300 es
`,v=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+v,T=["#define varying in",t.glslVersion===GLSL3?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===GLSL3?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+T);const C=D+v+r,I=D+T+l,N=WebGLShader(o,35633,C),F=WebGLShader(o,35632,I);if(o.attachShader(x,N),o.attachShader(x,F),t.index0AttributeName!==void 0?o.bindAttribLocation(x,0,t.index0AttributeName):t.morphTargets===!0&&o.bindAttribLocation(x,0,"position"),o.linkProgram(x),s.debug.checkShaderErrors){const B=o.getProgramInfoLog(x).trim(),W=o.getShaderInfoLog(N).trim(),oe=o.getShaderInfoLog(F).trim();let se=!0,Y=!0;if(o.getProgramParameter(x,35714)===!1){se=!1;const q=getShaderErrors(o,N,"vertex"),ie=getShaderErrors(o,F,"fragment");console.error("THREE.WebGLProgram: Shader Error "+o.getError()+" - VALIDATE_STATUS "+o.getProgramParameter(x,35715)+`

Program Info Log: `+B+`
`+q+`
`+ie)}else B!==""?console.warn("THREE.WebGLProgram: Program Info Log:",B):(W===""||oe==="")&&(Y=!1);Y&&(this.diagnostics={runnable:se,programLog:B,vertexShader:{log:W,prefix:v},fragmentShader:{log:oe,prefix:T}})}o.deleteShader(N),o.deleteShader(F);let G;this.getUniforms=function(){return G===void 0&&(G=new WebGLUniforms(o,x)),G};let L;return this.getAttributes=function(){return L===void 0&&(L=fetchAttributeLocations(o,x)),L},this.destroy=function(){n.releaseStatesOfProgram(this),o.deleteProgram(x),this.program=void 0},this.name=t.shaderName,this.id=programIdCount++,this.cacheKey=e,this.usedTimes=1,this.program=x,this.vertexShader=N,this.fragmentShader=F,this}let _id=0;class WebGLShaderCache{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,o=this._getShaderStage(t),a=this._getShaderStage(n),r=this._getShaderCacheForMaterial(e);return r.has(o)===!1&&(r.add(o),o.usedTimes++),r.has(a)===!1&&(r.add(a),a.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return n===void 0&&(n=new WebGLShaderStage(e),t.set(e,n)),n}}class WebGLShaderStage{constructor(e){this.id=_id++,this.code=e,this.usedTimes=0}}function WebGLPrograms(s,e,t,n,o,a,r){const l=new Layers,d=new WebGLShaderCache,h=[],f=o.isWebGL2,_=o.logarithmicDepthBuffer,g=o.vertexTextures;let b=o.precision;const w={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function x(L,B,W,oe,se){const Y=oe.fog,q=se.geometry,ie=L.isMeshStandardMaterial?oe.environment:null,me=(L.isMeshStandardMaterial?t:e).get(L.envMap||ie),Q=me&&me.mapping===CubeUVReflectionMapping?me.image.height:null,K=w[L.type];L.precision!==null&&(b=o.getMaxPrecision(L.precision),b!==L.precision&&console.warn("THREE.WebGLProgram.getParameters:",L.precision,"not supported, using",b,"instead."));const le=q.morphAttributes.position||q.morphAttributes.normal||q.morphAttributes.color,de=le!==void 0?le.length:0;let ve=0;q.morphAttributes.position!==void 0&&(ve=1),q.morphAttributes.normal!==void 0&&(ve=2),q.morphAttributes.color!==void 0&&(ve=3);let $,z,ne,V;if(K){const ke=ShaderLib[K];$=ke.vertexShader,z=ke.fragmentShader}else $=L.vertexShader,z=L.fragmentShader,d.update(L),ne=d.getVertexShaderID(L),V=d.getFragmentShaderID(L);const ye=s.getRenderTarget(),Se=L.alphaTest>0,Le=L.clearcoat>0,De=L.iridescence>0;return{isWebGL2:f,shaderID:K,shaderName:L.type,vertexShader:$,fragmentShader:z,defines:L.defines,customVertexShaderID:ne,customFragmentShaderID:V,isRawShaderMaterial:L.isRawShaderMaterial===!0,glslVersion:L.glslVersion,precision:b,instancing:se.isInstancedMesh===!0,instancingColor:se.isInstancedMesh===!0&&se.instanceColor!==null,supportsVertexTextures:g,outputEncoding:ye===null?s.outputEncoding:ye.isXRRenderTarget===!0?ye.texture.encoding:LinearEncoding,map:!!L.map,matcap:!!L.matcap,envMap:!!me,envMapMode:me&&me.mapping,envMapCubeUVHeight:Q,lightMap:!!L.lightMap,aoMap:!!L.aoMap,emissiveMap:!!L.emissiveMap,bumpMap:!!L.bumpMap,normalMap:!!L.normalMap,objectSpaceNormalMap:L.normalMapType===ObjectSpaceNormalMap,tangentSpaceNormalMap:L.normalMapType===TangentSpaceNormalMap,decodeVideoTexture:!!L.map&&L.map.isVideoTexture===!0&&L.map.encoding===sRGBEncoding,clearcoat:Le,clearcoatMap:Le&&!!L.clearcoatMap,clearcoatRoughnessMap:Le&&!!L.clearcoatRoughnessMap,clearcoatNormalMap:Le&&!!L.clearcoatNormalMap,iridescence:De,iridescenceMap:De&&!!L.iridescenceMap,iridescenceThicknessMap:De&&!!L.iridescenceThicknessMap,displacementMap:!!L.displacementMap,roughnessMap:!!L.roughnessMap,metalnessMap:!!L.metalnessMap,specularMap:!!L.specularMap,specularIntensityMap:!!L.specularIntensityMap,specularColorMap:!!L.specularColorMap,opaque:L.transparent===!1&&L.blending===NormalBlending,alphaMap:!!L.alphaMap,alphaTest:Se,gradientMap:!!L.gradientMap,sheen:L.sheen>0,sheenColorMap:!!L.sheenColorMap,sheenRoughnessMap:!!L.sheenRoughnessMap,transmission:L.transmission>0,transmissionMap:!!L.transmissionMap,thicknessMap:!!L.thicknessMap,combine:L.combine,vertexTangents:!!L.normalMap&&!!q.attributes.tangent,vertexColors:L.vertexColors,vertexAlphas:L.vertexColors===!0&&!!q.attributes.color&&q.attributes.color.itemSize===4,vertexUvs:!!L.map||!!L.bumpMap||!!L.normalMap||!!L.specularMap||!!L.alphaMap||!!L.emissiveMap||!!L.roughnessMap||!!L.metalnessMap||!!L.clearcoatMap||!!L.clearcoatRoughnessMap||!!L.clearcoatNormalMap||!!L.iridescenceMap||!!L.iridescenceThicknessMap||!!L.displacementMap||!!L.transmissionMap||!!L.thicknessMap||!!L.specularIntensityMap||!!L.specularColorMap||!!L.sheenColorMap||!!L.sheenRoughnessMap,uvsVertexOnly:!(L.map||L.bumpMap||L.normalMap||L.specularMap||L.alphaMap||L.emissiveMap||L.roughnessMap||L.metalnessMap||L.clearcoatNormalMap||L.iridescenceMap||L.iridescenceThicknessMap||L.transmission>0||L.transmissionMap||L.thicknessMap||L.specularIntensityMap||L.specularColorMap||L.sheen>0||L.sheenColorMap||L.sheenRoughnessMap)&&!!L.displacementMap,fog:!!Y,useFog:L.fog===!0,fogExp2:Y&&Y.isFogExp2,flatShading:!!L.flatShading,sizeAttenuation:L.sizeAttenuation,logarithmicDepthBuffer:_,skinning:se.isSkinnedMesh===!0,morphTargets:q.morphAttributes.position!==void 0,morphNormals:q.morphAttributes.normal!==void 0,morphColors:q.morphAttributes.color!==void 0,morphTargetsCount:de,morphTextureStride:ve,numDirLights:B.directional.length,numPointLights:B.point.length,numSpotLights:B.spot.length,numSpotLightMaps:B.spotLightMap.length,numRectAreaLights:B.rectArea.length,numHemiLights:B.hemi.length,numDirLightShadows:B.directionalShadowMap.length,numPointLightShadows:B.pointShadowMap.length,numSpotLightShadows:B.spotShadowMap.length,numSpotLightShadowsWithMaps:B.numSpotLightShadowsWithMaps,numClippingPlanes:r.numPlanes,numClipIntersection:r.numIntersection,dithering:L.dithering,shadowMapEnabled:s.shadowMap.enabled&&W.length>0,shadowMapType:s.shadowMap.type,toneMapping:L.toneMapped?s.toneMapping:NoToneMapping,useLegacyLights:s.useLegacyLights,premultipliedAlpha:L.premultipliedAlpha,doubleSided:L.side===DoubleSide,flipSided:L.side===BackSide,useDepthPacking:!!L.depthPacking,depthPacking:L.depthPacking||0,index0AttributeName:L.index0AttributeName,extensionDerivatives:L.extensions&&L.extensions.derivatives,extensionFragDepth:L.extensions&&L.extensions.fragDepth,extensionDrawBuffers:L.extensions&&L.extensions.drawBuffers,extensionShaderTextureLOD:L.extensions&&L.extensions.shaderTextureLOD,rendererExtensionFragDepth:f||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:f||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:f||n.has("EXT_shader_texture_lod"),customProgramCacheKey:L.customProgramCacheKey()}}function v(L){const B=[];if(L.shaderID?B.push(L.shaderID):(B.push(L.customVertexShaderID),B.push(L.customFragmentShaderID)),L.defines!==void 0)for(const W in L.defines)B.push(W),B.push(L.defines[W]);return L.isRawShaderMaterial===!1&&(T(B,L),D(B,L),B.push(s.outputEncoding)),B.push(L.customProgramCacheKey),B.join()}function T(L,B){L.push(B.precision),L.push(B.outputEncoding),L.push(B.envMapMode),L.push(B.envMapCubeUVHeight),L.push(B.combine),L.push(B.vertexUvs),L.push(B.fogExp2),L.push(B.sizeAttenuation),L.push(B.morphTargetsCount),L.push(B.morphAttributeCount),L.push(B.numDirLights),L.push(B.numPointLights),L.push(B.numSpotLights),L.push(B.numSpotLightMaps),L.push(B.numHemiLights),L.push(B.numRectAreaLights),L.push(B.numDirLightShadows),L.push(B.numPointLightShadows),L.push(B.numSpotLightShadows),L.push(B.numSpotLightShadowsWithMaps),L.push(B.shadowMapType),L.push(B.toneMapping),L.push(B.numClippingPlanes),L.push(B.numClipIntersection),L.push(B.depthPacking)}function D(L,B){l.disableAll(),B.isWebGL2&&l.enable(0),B.supportsVertexTextures&&l.enable(1),B.instancing&&l.enable(2),B.instancingColor&&l.enable(3),B.map&&l.enable(4),B.matcap&&l.enable(5),B.envMap&&l.enable(6),B.lightMap&&l.enable(7),B.aoMap&&l.enable(8),B.emissiveMap&&l.enable(9),B.bumpMap&&l.enable(10),B.normalMap&&l.enable(11),B.objectSpaceNormalMap&&l.enable(12),B.tangentSpaceNormalMap&&l.enable(13),B.clearcoat&&l.enable(14),B.clearcoatMap&&l.enable(15),B.clearcoatRoughnessMap&&l.enable(16),B.clearcoatNormalMap&&l.enable(17),B.iridescence&&l.enable(18),B.iridescenceMap&&l.enable(19),B.iridescenceThicknessMap&&l.enable(20),B.displacementMap&&l.enable(21),B.specularMap&&l.enable(22),B.roughnessMap&&l.enable(23),B.metalnessMap&&l.enable(24),B.gradientMap&&l.enable(25),B.alphaMap&&l.enable(26),B.alphaTest&&l.enable(27),B.vertexColors&&l.enable(28),B.vertexAlphas&&l.enable(29),B.vertexUvs&&l.enable(30),B.vertexTangents&&l.enable(31),B.uvsVertexOnly&&l.enable(32),L.push(l.mask),l.disableAll(),B.fog&&l.enable(0),B.useFog&&l.enable(1),B.flatShading&&l.enable(2),B.logarithmicDepthBuffer&&l.enable(3),B.skinning&&l.enable(4),B.morphTargets&&l.enable(5),B.morphNormals&&l.enable(6),B.morphColors&&l.enable(7),B.premultipliedAlpha&&l.enable(8),B.shadowMapEnabled&&l.enable(9),B.useLegacyLights&&l.enable(10),B.doubleSided&&l.enable(11),B.flipSided&&l.enable(12),B.useDepthPacking&&l.enable(13),B.dithering&&l.enable(14),B.specularIntensityMap&&l.enable(15),B.specularColorMap&&l.enable(16),B.transmission&&l.enable(17),B.transmissionMap&&l.enable(18),B.thicknessMap&&l.enable(19),B.sheen&&l.enable(20),B.sheenColorMap&&l.enable(21),B.sheenRoughnessMap&&l.enable(22),B.decodeVideoTexture&&l.enable(23),B.opaque&&l.enable(24),L.push(l.mask)}function C(L){const B=w[L.type];let W;if(B){const oe=ShaderLib[B];W=UniformsUtils.clone(oe.uniforms)}else W=L.uniforms;return W}function I(L,B){let W;for(let oe=0,se=h.length;oe<se;oe++){const Y=h[oe];if(Y.cacheKey===B){W=Y,++W.usedTimes;break}}return W===void 0&&(W=new WebGLProgram(s,B,L,a),h.push(W)),W}function N(L){if(--L.usedTimes===0){const B=h.indexOf(L);h[B]=h[h.length-1],h.pop(),L.destroy()}}function F(L){d.remove(L)}function G(){d.dispose()}return{getParameters:x,getProgramCacheKey:v,getUniforms:C,acquireProgram:I,releaseProgram:N,releaseShaderCache:F,programs:h,dispose:G}}function WebGLProperties(){let s=new WeakMap;function e(a){let r=s.get(a);return r===void 0&&(r={},s.set(a,r)),r}function t(a){s.delete(a)}function n(a,r,l){s.get(a)[r]=l}function o(){s=new WeakMap}return{get:e,remove:t,update:n,dispose:o}}function painterSortStable(s,e){return s.groupOrder!==e.groupOrder?s.groupOrder-e.groupOrder:s.renderOrder!==e.renderOrder?s.renderOrder-e.renderOrder:s.material.id!==e.material.id?s.material.id-e.material.id:s.z!==e.z?s.z-e.z:s.id-e.id}function reversePainterSortStable(s,e){return s.groupOrder!==e.groupOrder?s.groupOrder-e.groupOrder:s.renderOrder!==e.renderOrder?s.renderOrder-e.renderOrder:s.z!==e.z?e.z-s.z:s.id-e.id}function WebGLRenderList(){const s=[];let e=0;const t=[],n=[],o=[];function a(){e=0,t.length=0,n.length=0,o.length=0}function r(_,g,b,w,x,v){let T=s[e];return T===void 0?(T={id:_.id,object:_,geometry:g,material:b,groupOrder:w,renderOrder:_.renderOrder,z:x,group:v},s[e]=T):(T.id=_.id,T.object=_,T.geometry=g,T.material=b,T.groupOrder=w,T.renderOrder=_.renderOrder,T.z=x,T.group=v),e++,T}function l(_,g,b,w,x,v){const T=r(_,g,b,w,x,v);b.transmission>0?n.push(T):b.transparent===!0?o.push(T):t.push(T)}function d(_,g,b,w,x,v){const T=r(_,g,b,w,x,v);b.transmission>0?n.unshift(T):b.transparent===!0?o.unshift(T):t.unshift(T)}function h(_,g){t.length>1&&t.sort(_||painterSortStable),n.length>1&&n.sort(g||reversePainterSortStable),o.length>1&&o.sort(g||reversePainterSortStable)}function f(){for(let _=e,g=s.length;_<g;_++){const b=s[_];if(b.id===null)break;b.id=null,b.object=null,b.geometry=null,b.material=null,b.group=null}}return{opaque:t,transmissive:n,transparent:o,init:a,push:l,unshift:d,finish:f,sort:h}}function WebGLRenderLists(){let s=new WeakMap;function e(n,o){const a=s.get(n);let r;return a===void 0?(r=new WebGLRenderList,s.set(n,[r])):o>=a.length?(r=new WebGLRenderList,a.push(r)):r=a[o],r}function t(){s=new WeakMap}return{get:e,dispose:t}}function UniformsCache(){const s={};return{get:function(e){if(s[e.id]!==void 0)return s[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new Vector3,color:new Color};break;case"SpotLight":t={position:new Vector3,direction:new Vector3,color:new Color,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new Vector3,color:new Color,distance:0,decay:0};break;case"HemisphereLight":t={direction:new Vector3,skyColor:new Color,groundColor:new Color};break;case"RectAreaLight":t={color:new Color,position:new Vector3,halfWidth:new Vector3,halfHeight:new Vector3};break}return s[e.id]=t,t}}}function ShadowUniformsCache(){const s={};return{get:function(e){if(s[e.id]!==void 0)return s[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Vector2};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Vector2};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Vector2,shadowCameraNear:1,shadowCameraFar:1e3};break}return s[e.id]=t,t}}}let nextVersion=0;function shadowCastingAndTexturingLightsFirst(s,e){return(e.castShadow?2:0)-(s.castShadow?2:0)+(e.map?1:0)-(s.map?1:0)}function WebGLLights(s,e){const t=new UniformsCache,n=ShadowUniformsCache(),o={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0};for(let f=0;f<9;f++)o.probe.push(new Vector3);const a=new Vector3,r=new Matrix4,l=new Matrix4;function d(f,_){let g=0,b=0,w=0;for(let oe=0;oe<9;oe++)o.probe[oe].set(0,0,0);let x=0,v=0,T=0,D=0,C=0,I=0,N=0,F=0,G=0,L=0;f.sort(shadowCastingAndTexturingLightsFirst);const B=_===!0?Math.PI:1;for(let oe=0,se=f.length;oe<se;oe++){const Y=f[oe],q=Y.color,ie=Y.intensity,me=Y.distance,Q=Y.shadow&&Y.shadow.map?Y.shadow.map.texture:null;if(Y.isAmbientLight)g+=q.r*ie*B,b+=q.g*ie*B,w+=q.b*ie*B;else if(Y.isLightProbe)for(let K=0;K<9;K++)o.probe[K].addScaledVector(Y.sh.coefficients[K],ie);else if(Y.isDirectionalLight){const K=t.get(Y);if(K.color.copy(Y.color).multiplyScalar(Y.intensity*B),Y.castShadow){const le=Y.shadow,de=n.get(Y);de.shadowBias=le.bias,de.shadowNormalBias=le.normalBias,de.shadowRadius=le.radius,de.shadowMapSize=le.mapSize,o.directionalShadow[x]=de,o.directionalShadowMap[x]=Q,o.directionalShadowMatrix[x]=Y.shadow.matrix,I++}o.directional[x]=K,x++}else if(Y.isSpotLight){const K=t.get(Y);K.position.setFromMatrixPosition(Y.matrixWorld),K.color.copy(q).multiplyScalar(ie*B),K.distance=me,K.coneCos=Math.cos(Y.angle),K.penumbraCos=Math.cos(Y.angle*(1-Y.penumbra)),K.decay=Y.decay,o.spot[T]=K;const le=Y.shadow;if(Y.map&&(o.spotLightMap[G]=Y.map,G++,le.updateMatrices(Y),Y.castShadow&&L++),o.spotLightMatrix[T]=le.matrix,Y.castShadow){const de=n.get(Y);de.shadowBias=le.bias,de.shadowNormalBias=le.normalBias,de.shadowRadius=le.radius,de.shadowMapSize=le.mapSize,o.spotShadow[T]=de,o.spotShadowMap[T]=Q,F++}T++}else if(Y.isRectAreaLight){const K=t.get(Y);K.color.copy(q).multiplyScalar(ie),K.halfWidth.set(Y.width*.5,0,0),K.halfHeight.set(0,Y.height*.5,0),o.rectArea[D]=K,D++}else if(Y.isPointLight){const K=t.get(Y);if(K.color.copy(Y.color).multiplyScalar(Y.intensity*B),K.distance=Y.distance,K.decay=Y.decay,Y.castShadow){const le=Y.shadow,de=n.get(Y);de.shadowBias=le.bias,de.shadowNormalBias=le.normalBias,de.shadowRadius=le.radius,de.shadowMapSize=le.mapSize,de.shadowCameraNear=le.camera.near,de.shadowCameraFar=le.camera.far,o.pointShadow[v]=de,o.pointShadowMap[v]=Q,o.pointShadowMatrix[v]=Y.shadow.matrix,N++}o.point[v]=K,v++}else if(Y.isHemisphereLight){const K=t.get(Y);K.skyColor.copy(Y.color).multiplyScalar(ie*B),K.groundColor.copy(Y.groundColor).multiplyScalar(ie*B),o.hemi[C]=K,C++}}D>0&&(e.isWebGL2||s.has("OES_texture_float_linear")===!0?(o.rectAreaLTC1=UniformsLib.LTC_FLOAT_1,o.rectAreaLTC2=UniformsLib.LTC_FLOAT_2):s.has("OES_texture_half_float_linear")===!0?(o.rectAreaLTC1=UniformsLib.LTC_HALF_1,o.rectAreaLTC2=UniformsLib.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),o.ambient[0]=g,o.ambient[1]=b,o.ambient[2]=w;const W=o.hash;(W.directionalLength!==x||W.pointLength!==v||W.spotLength!==T||W.rectAreaLength!==D||W.hemiLength!==C||W.numDirectionalShadows!==I||W.numPointShadows!==N||W.numSpotShadows!==F||W.numSpotMaps!==G)&&(o.directional.length=x,o.spot.length=T,o.rectArea.length=D,o.point.length=v,o.hemi.length=C,o.directionalShadow.length=I,o.directionalShadowMap.length=I,o.pointShadow.length=N,o.pointShadowMap.length=N,o.spotShadow.length=F,o.spotShadowMap.length=F,o.directionalShadowMatrix.length=I,o.pointShadowMatrix.length=N,o.spotLightMatrix.length=F+G-L,o.spotLightMap.length=G,o.numSpotLightShadowsWithMaps=L,W.directionalLength=x,W.pointLength=v,W.spotLength=T,W.rectAreaLength=D,W.hemiLength=C,W.numDirectionalShadows=I,W.numPointShadows=N,W.numSpotShadows=F,W.numSpotMaps=G,o.version=nextVersion++)}function h(f,_){let g=0,b=0,w=0,x=0,v=0;const T=_.matrixWorldInverse;for(let D=0,C=f.length;D<C;D++){const I=f[D];if(I.isDirectionalLight){const N=o.directional[g];N.direction.setFromMatrixPosition(I.matrixWorld),a.setFromMatrixPosition(I.target.matrixWorld),N.direction.sub(a),N.direction.transformDirection(T),g++}else if(I.isSpotLight){const N=o.spot[w];N.position.setFromMatrixPosition(I.matrixWorld),N.position.applyMatrix4(T),N.direction.setFromMatrixPosition(I.matrixWorld),a.setFromMatrixPosition(I.target.matrixWorld),N.direction.sub(a),N.direction.transformDirection(T),w++}else if(I.isRectAreaLight){const N=o.rectArea[x];N.position.setFromMatrixPosition(I.matrixWorld),N.position.applyMatrix4(T),l.identity(),r.copy(I.matrixWorld),r.premultiply(T),l.extractRotation(r),N.halfWidth.set(I.width*.5,0,0),N.halfHeight.set(0,I.height*.5,0),N.halfWidth.applyMatrix4(l),N.halfHeight.applyMatrix4(l),x++}else if(I.isPointLight){const N=o.point[b];N.position.setFromMatrixPosition(I.matrixWorld),N.position.applyMatrix4(T),b++}else if(I.isHemisphereLight){const N=o.hemi[v];N.direction.setFromMatrixPosition(I.matrixWorld),N.direction.transformDirection(T),v++}}}return{setup:d,setupView:h,state:o}}function WebGLRenderState(s,e){const t=new WebGLLights(s,e),n=[],o=[];function a(){n.length=0,o.length=0}function r(_){n.push(_)}function l(_){o.push(_)}function d(_){t.setup(n,_)}function h(_){t.setupView(n,_)}return{init:a,state:{lightsArray:n,shadowsArray:o,lights:t},setupLights:d,setupLightsView:h,pushLight:r,pushShadow:l}}function WebGLRenderStates(s,e){let t=new WeakMap;function n(a,r=0){const l=t.get(a);let d;return l===void 0?(d=new WebGLRenderState(s,e),t.set(a,[d])):r>=l.length?(d=new WebGLRenderState(s,e),l.push(d)):d=l[r],d}function o(){t=new WeakMap}return{get:n,dispose:o}}class MeshDepthMaterial extends Material{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=BasicDepthPacking,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class MeshDistanceMaterial extends Material{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.referencePosition=new Vector3,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const vertex=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,fragment=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function WebGLShadowMap(s,e,t){let n=new Frustum;const o=new Vector2,a=new Vector2,r=new Vector4,l=new MeshDepthMaterial({depthPacking:RGBADepthPacking}),d=new MeshDistanceMaterial,h={},f=t.maxTextureSize,_={[FrontSide]:BackSide,[BackSide]:FrontSide,[DoubleSide]:DoubleSide},g=new ShaderMaterial({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new Vector2},radius:{value:4}},vertexShader:vertex,fragmentShader:fragment}),b=g.clone();b.defines.HORIZONTAL_PASS=1;const w=new BufferGeometry;w.setAttribute("position",new BufferAttribute(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const x=new Mesh(w,g),v=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=PCFShadowMap,this.render=function(I,N,F){if(v.enabled===!1||v.autoUpdate===!1&&v.needsUpdate===!1||I.length===0)return;const G=s.getRenderTarget(),L=s.getActiveCubeFace(),B=s.getActiveMipmapLevel(),W=s.state;W.setBlending(NoBlending),W.buffers.color.setClear(1,1,1,1),W.buffers.depth.setTest(!0),W.setScissorTest(!1);for(let oe=0,se=I.length;oe<se;oe++){const Y=I[oe],q=Y.shadow;if(q===void 0){console.warn("THREE.WebGLShadowMap:",Y,"has no shadow.");continue}if(q.autoUpdate===!1&&q.needsUpdate===!1)continue;o.copy(q.mapSize);const ie=q.getFrameExtents();if(o.multiply(ie),a.copy(q.mapSize),(o.x>f||o.y>f)&&(o.x>f&&(a.x=Math.floor(f/ie.x),o.x=a.x*ie.x,q.mapSize.x=a.x),o.y>f&&(a.y=Math.floor(f/ie.y),o.y=a.y*ie.y,q.mapSize.y=a.y)),q.map===null){const Q=this.type!==VSMShadowMap?{minFilter:NearestFilter,magFilter:NearestFilter}:{};q.map=new WebGLRenderTarget(o.x,o.y,Q),q.map.texture.name=Y.name+".shadowMap",q.camera.updateProjectionMatrix()}s.setRenderTarget(q.map),s.clear();const me=q.getViewportCount();for(let Q=0;Q<me;Q++){const K=q.getViewport(Q);r.set(a.x*K.x,a.y*K.y,a.x*K.z,a.y*K.w),W.viewport(r),q.updateMatrices(Y,Q),n=q.getFrustum(),C(N,F,q.camera,Y,this.type)}q.isPointLightShadow!==!0&&this.type===VSMShadowMap&&T(q,F),q.needsUpdate=!1}v.needsUpdate=!1,s.setRenderTarget(G,L,B)};function T(I,N){const F=e.update(x);g.defines.VSM_SAMPLES!==I.blurSamples&&(g.defines.VSM_SAMPLES=I.blurSamples,b.defines.VSM_SAMPLES=I.blurSamples,g.needsUpdate=!0,b.needsUpdate=!0),I.mapPass===null&&(I.mapPass=new WebGLRenderTarget(o.x,o.y)),g.uniforms.shadow_pass.value=I.map.texture,g.uniforms.resolution.value=I.mapSize,g.uniforms.radius.value=I.radius,s.setRenderTarget(I.mapPass),s.clear(),s.renderBufferDirect(N,null,F,g,x,null),b.uniforms.shadow_pass.value=I.mapPass.texture,b.uniforms.resolution.value=I.mapSize,b.uniforms.radius.value=I.radius,s.setRenderTarget(I.map),s.clear(),s.renderBufferDirect(N,null,F,b,x,null)}function D(I,N,F,G,L,B){let W=null;const oe=F.isPointLight===!0?I.customDistanceMaterial:I.customDepthMaterial;if(oe!==void 0)W=oe;else if(W=F.isPointLight===!0?d:l,s.localClippingEnabled&&N.clipShadows===!0&&Array.isArray(N.clippingPlanes)&&N.clippingPlanes.length!==0||N.displacementMap&&N.displacementScale!==0||N.alphaMap&&N.alphaTest>0||N.map&&N.alphaTest>0){const se=W.uuid,Y=N.uuid;let q=h[se];q===void 0&&(q={},h[se]=q);let ie=q[Y];ie===void 0&&(ie=W.clone(),q[Y]=ie),W=ie}return W.visible=N.visible,W.wireframe=N.wireframe,B===VSMShadowMap?W.side=N.shadowSide!==null?N.shadowSide:N.side:W.side=N.shadowSide!==null?N.shadowSide:_[N.side],W.alphaMap=N.alphaMap,W.alphaTest=N.alphaTest,W.map=N.map,W.clipShadows=N.clipShadows,W.clippingPlanes=N.clippingPlanes,W.clipIntersection=N.clipIntersection,W.displacementMap=N.displacementMap,W.displacementScale=N.displacementScale,W.displacementBias=N.displacementBias,W.wireframeLinewidth=N.wireframeLinewidth,W.linewidth=N.linewidth,F.isPointLight===!0&&W.isMeshDistanceMaterial===!0&&(W.referencePosition.setFromMatrixPosition(F.matrixWorld),W.nearDistance=G,W.farDistance=L),W}function C(I,N,F,G,L){if(I.visible===!1)return;if(I.layers.test(N.layers)&&(I.isMesh||I.isLine||I.isPoints)&&(I.castShadow||I.receiveShadow&&L===VSMShadowMap)&&(!I.frustumCulled||n.intersectsObject(I))){I.modelViewMatrix.multiplyMatrices(F.matrixWorldInverse,I.matrixWorld);const oe=e.update(I),se=I.material;if(Array.isArray(se)){const Y=oe.groups;for(let q=0,ie=Y.length;q<ie;q++){const me=Y[q],Q=se[me.materialIndex];if(Q&&Q.visible){const K=D(I,Q,G,F.near,F.far,L);s.renderBufferDirect(F,null,oe,K,I,me)}}}else if(se.visible){const Y=D(I,se,G,F.near,F.far,L);s.renderBufferDirect(F,null,oe,Y,I,null)}}const W=I.children;for(let oe=0,se=W.length;oe<se;oe++)C(W[oe],N,F,G,L)}}function WebGLState(s,e,t){const n=t.isWebGL2;function o(){let O=!1;const X=new Vector4;let Z=null;const ae=new Vector4(0,0,0,0);return{setMask:function(xe){Z!==xe&&!O&&(s.colorMask(xe,xe,xe,xe),Z=xe)},setLocked:function(xe){O=xe},setClear:function(xe,He,Ze,nn,pn){pn===!0&&(xe*=nn,He*=nn,Ze*=nn),X.set(xe,He,Ze,nn),ae.equals(X)===!1&&(s.clearColor(xe,He,Ze,nn),ae.copy(X))},reset:function(){O=!1,Z=null,ae.set(-1,0,0,0)}}}function a(){let O=!1,X=null,Z=null,ae=null;return{setTest:function(xe){xe?Se(2929):Le(2929)},setMask:function(xe){X!==xe&&!O&&(s.depthMask(xe),X=xe)},setFunc:function(xe){if(Z!==xe){switch(xe){case NeverDepth:s.depthFunc(512);break;case AlwaysDepth:s.depthFunc(519);break;case LessDepth:s.depthFunc(513);break;case LessEqualDepth:s.depthFunc(515);break;case EqualDepth:s.depthFunc(514);break;case GreaterEqualDepth:s.depthFunc(518);break;case GreaterDepth:s.depthFunc(516);break;case NotEqualDepth:s.depthFunc(517);break;default:s.depthFunc(515)}Z=xe}},setLocked:function(xe){O=xe},setClear:function(xe){ae!==xe&&(s.clearDepth(xe),ae=xe)},reset:function(){O=!1,X=null,Z=null,ae=null}}}function r(){let O=!1,X=null,Z=null,ae=null,xe=null,He=null,Ze=null,nn=null,pn=null;return{setTest:function(Tt){O||(Tt?Se(2960):Le(2960))},setMask:function(Tt){X!==Tt&&!O&&(s.stencilMask(Tt),X=Tt)},setFunc:function(Tt,xn,Cn){(Z!==Tt||ae!==xn||xe!==Cn)&&(s.stencilFunc(Tt,xn,Cn),Z=Tt,ae=xn,xe=Cn)},setOp:function(Tt,xn,Cn){(He!==Tt||Ze!==xn||nn!==Cn)&&(s.stencilOp(Tt,xn,Cn),He=Tt,Ze=xn,nn=Cn)},setLocked:function(Tt){O=Tt},setClear:function(Tt){pn!==Tt&&(s.clearStencil(Tt),pn=Tt)},reset:function(){O=!1,X=null,Z=null,ae=null,xe=null,He=null,Ze=null,nn=null,pn=null}}}const l=new o,d=new a,h=new r,f=new WeakMap,_=new WeakMap;let g={},b={},w=new WeakMap,x=[],v=null,T=!1,D=null,C=null,I=null,N=null,F=null,G=null,L=null,B=!1,W=null,oe=null,se=null,Y=null,q=null;const ie=s.getParameter(35661);let me=!1,Q=0;const K=s.getParameter(7938);K.indexOf("WebGL")!==-1?(Q=parseFloat(/^WebGL (\d)/.exec(K)[1]),me=Q>=1):K.indexOf("OpenGL ES")!==-1&&(Q=parseFloat(/^OpenGL ES (\d)/.exec(K)[1]),me=Q>=2);let le=null,de={};const ve=s.getParameter(3088),$=s.getParameter(2978),z=new Vector4().fromArray(ve),ne=new Vector4().fromArray($);function V(O,X,Z){const ae=new Uint8Array(4),xe=s.createTexture();s.bindTexture(O,xe),s.texParameteri(O,10241,9728),s.texParameteri(O,10240,9728);for(let He=0;He<Z;He++)s.texImage2D(X+He,0,6408,1,1,0,6408,5121,ae);return xe}const ye={};ye[3553]=V(3553,3553,1),ye[34067]=V(34067,34069,6),l.setClear(0,0,0,1),d.setClear(1),h.setClear(0),Se(2929),d.setFunc(LessEqualDepth),Ot(!1),_t(CullFaceBack),Se(2884),$t(NoBlending);function Se(O){g[O]!==!0&&(s.enable(O),g[O]=!0)}function Le(O){g[O]!==!1&&(s.disable(O),g[O]=!1)}function De(O,X){return b[O]!==X?(s.bindFramebuffer(O,X),b[O]=X,n&&(O===36009&&(b[36160]=X),O===36160&&(b[36009]=X)),!0):!1}function Oe(O,X){let Z=x,ae=!1;if(O)if(Z=w.get(X),Z===void 0&&(Z=[],w.set(X,Z)),O.isWebGLMultipleRenderTargets){const xe=O.texture;if(Z.length!==xe.length||Z[0]!==36064){for(let He=0,Ze=xe.length;He<Ze;He++)Z[He]=36064+He;Z.length=xe.length,ae=!0}}else Z[0]!==36064&&(Z[0]=36064,ae=!0);else Z[0]!==1029&&(Z[0]=1029,ae=!0);ae&&(t.isWebGL2?s.drawBuffers(Z):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(Z))}function ke(O){return v!==O?(s.useProgram(O),v=O,!0):!1}const Ve={[AddEquation]:32774,[SubtractEquation]:32778,[ReverseSubtractEquation]:32779};if(n)Ve[MinEquation]=32775,Ve[MaxEquation]=32776;else{const O=e.get("EXT_blend_minmax");O!==null&&(Ve[MinEquation]=O.MIN_EXT,Ve[MaxEquation]=O.MAX_EXT)}const je={[ZeroFactor]:0,[OneFactor]:1,[SrcColorFactor]:768,[SrcAlphaFactor]:770,[SrcAlphaSaturateFactor]:776,[DstColorFactor]:774,[DstAlphaFactor]:772,[OneMinusSrcColorFactor]:769,[OneMinusSrcAlphaFactor]:771,[OneMinusDstColorFactor]:775,[OneMinusDstAlphaFactor]:773};function $t(O,X,Z,ae,xe,He,Ze,nn){if(O===NoBlending){T===!0&&(Le(3042),T=!1);return}if(T===!1&&(Se(3042),T=!0),O!==CustomBlending){if(O!==D||nn!==B){if((C!==AddEquation||F!==AddEquation)&&(s.blendEquation(32774),C=AddEquation,F=AddEquation),nn)switch(O){case NormalBlending:s.blendFuncSeparate(1,771,1,771);break;case AdditiveBlending:s.blendFunc(1,1);break;case SubtractiveBlending:s.blendFuncSeparate(0,769,0,1);break;case MultiplyBlending:s.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",O);break}else switch(O){case NormalBlending:s.blendFuncSeparate(770,771,1,771);break;case AdditiveBlending:s.blendFunc(770,1);break;case SubtractiveBlending:s.blendFuncSeparate(0,769,0,1);break;case MultiplyBlending:s.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",O);break}I=null,N=null,G=null,L=null,D=O,B=nn}return}xe=xe||X,He=He||Z,Ze=Ze||ae,(X!==C||xe!==F)&&(s.blendEquationSeparate(Ve[X],Ve[xe]),C=X,F=xe),(Z!==I||ae!==N||He!==G||Ze!==L)&&(s.blendFuncSeparate(je[Z],je[ae],je[He],je[Ze]),I=Z,N=ae,G=He,L=Ze),D=O,B=!1}function jt(O,X){O.side===DoubleSide?Le(2884):Se(2884);let Z=O.side===BackSide;X&&(Z=!Z),Ot(Z),O.blending===NormalBlending&&O.transparent===!1?$t(NoBlending):$t(O.blending,O.blendEquation,O.blendSrc,O.blendDst,O.blendEquationAlpha,O.blendSrcAlpha,O.blendDstAlpha,O.premultipliedAlpha),d.setFunc(O.depthFunc),d.setTest(O.depthTest),d.setMask(O.depthWrite),l.setMask(O.colorWrite);const ae=O.stencilWrite;h.setTest(ae),ae&&(h.setMask(O.stencilWriteMask),h.setFunc(O.stencilFunc,O.stencilRef,O.stencilFuncMask),h.setOp(O.stencilFail,O.stencilZFail,O.stencilZPass)),vt(O.polygonOffset,O.polygonOffsetFactor,O.polygonOffsetUnits),O.alphaToCoverage===!0?Se(32926):Le(32926)}function Ot(O){W!==O&&(O?s.frontFace(2304):s.frontFace(2305),W=O)}function _t(O){O!==CullFaceNone?(Se(2884),O!==oe&&(O===CullFaceBack?s.cullFace(1029):O===CullFaceFront?s.cullFace(1028):s.cullFace(1032))):Le(2884),oe=O}function pt(O){O!==se&&(me&&s.lineWidth(O),se=O)}function vt(O,X,Z){O?(Se(32823),(Y!==X||q!==Z)&&(s.polygonOffset(X,Z),Y=X,q=Z)):Le(32823)}function cn(O){O?Se(3089):Le(3089)}function Mn(O){O===void 0&&(O=33984+ie-1),le!==O&&(s.activeTexture(O),le=O)}function U(O,X,Z){Z===void 0&&(le===null?Z=33984+ie-1:Z=le);let ae=de[Z];ae===void 0&&(ae={type:void 0,texture:void 0},de[Z]=ae),(ae.type!==O||ae.texture!==X)&&(le!==Z&&(s.activeTexture(Z),le=Z),s.bindTexture(O,X||ye[O]),ae.type=O,ae.texture=X)}function R(){const O=de[le];O!==void 0&&O.type!==void 0&&(s.bindTexture(O.type,null),O.type=void 0,O.texture=void 0)}function ce(){try{s.compressedTexImage2D.apply(s,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function we(){try{s.compressedTexImage3D.apply(s,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function be(){try{s.texSubImage2D.apply(s,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function Re(){try{s.texSubImage3D.apply(s,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function Fe(){try{s.compressedTexSubImage2D.apply(s,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function Ie(){try{s.compressedTexSubImage3D.apply(s,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function pe(){try{s.texStorage2D.apply(s,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function ze(){try{s.texStorage3D.apply(s,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function ge(){try{s.texImage2D.apply(s,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function Ee(){try{s.texImage3D.apply(s,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function Ce(O){z.equals(O)===!1&&(s.scissor(O.x,O.y,O.z,O.w),z.copy(O))}function Pe(O){ne.equals(O)===!1&&(s.viewport(O.x,O.y,O.z,O.w),ne.copy(O))}function $e(O,X){let Z=_.get(X);Z===void 0&&(Z=new WeakMap,_.set(X,Z));let ae=Z.get(O);ae===void 0&&(ae=s.getUniformBlockIndex(X,O.name),Z.set(O,ae))}function mt(O,X){const ae=_.get(X).get(O);f.get(X)!==ae&&(s.uniformBlockBinding(X,ae,O.__bindingPointIndex),f.set(X,ae))}function en(){s.disable(3042),s.disable(2884),s.disable(2929),s.disable(32823),s.disable(3089),s.disable(2960),s.disable(32926),s.blendEquation(32774),s.blendFunc(1,0),s.blendFuncSeparate(1,0,1,0),s.colorMask(!0,!0,!0,!0),s.clearColor(0,0,0,0),s.depthMask(!0),s.depthFunc(513),s.clearDepth(1),s.stencilMask(4294967295),s.stencilFunc(519,0,4294967295),s.stencilOp(7680,7680,7680),s.clearStencil(0),s.cullFace(1029),s.frontFace(2305),s.polygonOffset(0,0),s.activeTexture(33984),s.bindFramebuffer(36160,null),n===!0&&(s.bindFramebuffer(36009,null),s.bindFramebuffer(36008,null)),s.useProgram(null),s.lineWidth(1),s.scissor(0,0,s.canvas.width,s.canvas.height),s.viewport(0,0,s.canvas.width,s.canvas.height),g={},le=null,de={},b={},w=new WeakMap,x=[],v=null,T=!1,D=null,C=null,I=null,N=null,F=null,G=null,L=null,B=!1,W=null,oe=null,se=null,Y=null,q=null,z.set(0,0,s.canvas.width,s.canvas.height),ne.set(0,0,s.canvas.width,s.canvas.height),l.reset(),d.reset(),h.reset()}return{buffers:{color:l,depth:d,stencil:h},enable:Se,disable:Le,bindFramebuffer:De,drawBuffers:Oe,useProgram:ke,setBlending:$t,setMaterial:jt,setFlipSided:Ot,setCullFace:_t,setLineWidth:pt,setPolygonOffset:vt,setScissorTest:cn,activeTexture:Mn,bindTexture:U,unbindTexture:R,compressedTexImage2D:ce,compressedTexImage3D:we,texImage2D:ge,texImage3D:Ee,updateUBOMapping:$e,uniformBlockBinding:mt,texStorage2D:pe,texStorage3D:ze,texSubImage2D:be,texSubImage3D:Re,compressedTexSubImage2D:Fe,compressedTexSubImage3D:Ie,scissor:Ce,viewport:Pe,reset:en}}function WebGLTextures(s,e,t,n,o,a,r){const l=o.isWebGL2,d=o.maxTextures,h=o.maxCubemapSize,f=o.maxTextureSize,_=o.maxSamples,g=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,b=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),w=new WeakMap;let x;const v=new WeakMap;let T=!1;try{T=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function D(U,R){return T?new OffscreenCanvas(U,R):createElementNS("canvas")}function C(U,R,ce,we){let be=1;if((U.width>we||U.height>we)&&(be=we/Math.max(U.width,U.height)),be<1||R===!0)if(typeof HTMLImageElement<"u"&&U instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&U instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&U instanceof ImageBitmap){const Re=R?floorPowerOfTwo:Math.floor,Fe=Re(be*U.width),Ie=Re(be*U.height);x===void 0&&(x=D(Fe,Ie));const pe=ce?D(Fe,Ie):x;return pe.width=Fe,pe.height=Ie,pe.getContext("2d").drawImage(U,0,0,Fe,Ie),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+U.width+"x"+U.height+") to ("+Fe+"x"+Ie+")."),pe}else return"data"in U&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+U.width+"x"+U.height+")."),U;return U}function I(U){return isPowerOfTwo(U.width)&&isPowerOfTwo(U.height)}function N(U){return l?!1:U.wrapS!==ClampToEdgeWrapping||U.wrapT!==ClampToEdgeWrapping||U.minFilter!==NearestFilter&&U.minFilter!==LinearFilter}function F(U,R){return U.generateMipmaps&&R&&U.minFilter!==NearestFilter&&U.minFilter!==LinearFilter}function G(U){s.generateMipmap(U)}function L(U,R,ce,we,be=!1){if(l===!1)return R;if(U!==null){if(s[U]!==void 0)return s[U];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+U+"'")}let Re=R;return R===6403&&(ce===5126&&(Re=33326),ce===5131&&(Re=33325),ce===5121&&(Re=33321)),R===33319&&(ce===5126&&(Re=33328),ce===5131&&(Re=33327),ce===5121&&(Re=33323)),R===6408&&(ce===5126&&(Re=34836),ce===5131&&(Re=34842),ce===5121&&(Re=we===sRGBEncoding&&be===!1?35907:32856),ce===32819&&(Re=32854),ce===32820&&(Re=32855)),(Re===33325||Re===33326||Re===33327||Re===33328||Re===34842||Re===34836)&&e.get("EXT_color_buffer_float"),Re}function B(U,R,ce){return F(U,ce)===!0||U.isFramebufferTexture&&U.minFilter!==NearestFilter&&U.minFilter!==LinearFilter?Math.log2(Math.max(R.width,R.height))+1:U.mipmaps!==void 0&&U.mipmaps.length>0?U.mipmaps.length:U.isCompressedTexture&&Array.isArray(U.image)?R.mipmaps.length:1}function W(U){return U===NearestFilter||U===NearestMipmapNearestFilter||U===NearestMipmapLinearFilter?9728:9729}function oe(U){const R=U.target;R.removeEventListener("dispose",oe),Y(R),R.isVideoTexture&&w.delete(R)}function se(U){const R=U.target;R.removeEventListener("dispose",se),ie(R)}function Y(U){const R=n.get(U);if(R.__webglInit===void 0)return;const ce=U.source,we=v.get(ce);if(we){const be=we[R.__cacheKey];be.usedTimes--,be.usedTimes===0&&q(U),Object.keys(we).length===0&&v.delete(ce)}n.remove(U)}function q(U){const R=n.get(U);s.deleteTexture(R.__webglTexture);const ce=U.source,we=v.get(ce);delete we[R.__cacheKey],r.memory.textures--}function ie(U){const R=U.texture,ce=n.get(U),we=n.get(R);if(we.__webglTexture!==void 0&&(s.deleteTexture(we.__webglTexture),r.memory.textures--),U.depthTexture&&U.depthTexture.dispose(),U.isWebGLCubeRenderTarget)for(let be=0;be<6;be++)s.deleteFramebuffer(ce.__webglFramebuffer[be]),ce.__webglDepthbuffer&&s.deleteRenderbuffer(ce.__webglDepthbuffer[be]);else{if(s.deleteFramebuffer(ce.__webglFramebuffer),ce.__webglDepthbuffer&&s.deleteRenderbuffer(ce.__webglDepthbuffer),ce.__webglMultisampledFramebuffer&&s.deleteFramebuffer(ce.__webglMultisampledFramebuffer),ce.__webglColorRenderbuffer)for(let be=0;be<ce.__webglColorRenderbuffer.length;be++)ce.__webglColorRenderbuffer[be]&&s.deleteRenderbuffer(ce.__webglColorRenderbuffer[be]);ce.__webglDepthRenderbuffer&&s.deleteRenderbuffer(ce.__webglDepthRenderbuffer)}if(U.isWebGLMultipleRenderTargets)for(let be=0,Re=R.length;be<Re;be++){const Fe=n.get(R[be]);Fe.__webglTexture&&(s.deleteTexture(Fe.__webglTexture),r.memory.textures--),n.remove(R[be])}n.remove(R),n.remove(U)}let me=0;function Q(){me=0}function K(){const U=me;return U>=d&&console.warn("THREE.WebGLTextures: Trying to use "+U+" texture units while this GPU supports only "+d),me+=1,U}function le(U){const R=[];return R.push(U.wrapS),R.push(U.wrapT),R.push(U.wrapR||0),R.push(U.magFilter),R.push(U.minFilter),R.push(U.anisotropy),R.push(U.internalFormat),R.push(U.format),R.push(U.type),R.push(U.generateMipmaps),R.push(U.premultiplyAlpha),R.push(U.flipY),R.push(U.unpackAlignment),R.push(U.encoding),R.join()}function de(U,R){const ce=n.get(U);if(U.isVideoTexture&&cn(U),U.isRenderTargetTexture===!1&&U.version>0&&ce.__version!==U.version){const we=U.image;if(we===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(we.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Le(ce,U,R);return}}t.bindTexture(3553,ce.__webglTexture,33984+R)}function ve(U,R){const ce=n.get(U);if(U.version>0&&ce.__version!==U.version){Le(ce,U,R);return}t.bindTexture(35866,ce.__webglTexture,33984+R)}function $(U,R){const ce=n.get(U);if(U.version>0&&ce.__version!==U.version){Le(ce,U,R);return}t.bindTexture(32879,ce.__webglTexture,33984+R)}function z(U,R){const ce=n.get(U);if(U.version>0&&ce.__version!==U.version){De(ce,U,R);return}t.bindTexture(34067,ce.__webglTexture,33984+R)}const ne={[RepeatWrapping]:10497,[ClampToEdgeWrapping]:33071,[MirroredRepeatWrapping]:33648},V={[NearestFilter]:9728,[NearestMipmapNearestFilter]:9984,[NearestMipmapLinearFilter]:9986,[LinearFilter]:9729,[LinearMipmapNearestFilter]:9985,[LinearMipmapLinearFilter]:9987};function ye(U,R,ce){if(ce?(s.texParameteri(U,10242,ne[R.wrapS]),s.texParameteri(U,10243,ne[R.wrapT]),(U===32879||U===35866)&&s.texParameteri(U,32882,ne[R.wrapR]),s.texParameteri(U,10240,V[R.magFilter]),s.texParameteri(U,10241,V[R.minFilter])):(s.texParameteri(U,10242,33071),s.texParameteri(U,10243,33071),(U===32879||U===35866)&&s.texParameteri(U,32882,33071),(R.wrapS!==ClampToEdgeWrapping||R.wrapT!==ClampToEdgeWrapping)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),s.texParameteri(U,10240,W(R.magFilter)),s.texParameteri(U,10241,W(R.minFilter)),R.minFilter!==NearestFilter&&R.minFilter!==LinearFilter&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),e.has("EXT_texture_filter_anisotropic")===!0){const we=e.get("EXT_texture_filter_anisotropic");if(R.magFilter===NearestFilter||R.minFilter!==NearestMipmapLinearFilter&&R.minFilter!==LinearMipmapLinearFilter||R.type===FloatType&&e.has("OES_texture_float_linear")===!1||l===!1&&R.type===HalfFloatType&&e.has("OES_texture_half_float_linear")===!1)return;(R.anisotropy>1||n.get(R).__currentAnisotropy)&&(s.texParameterf(U,we.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(R.anisotropy,o.getMaxAnisotropy())),n.get(R).__currentAnisotropy=R.anisotropy)}}function Se(U,R){let ce=!1;U.__webglInit===void 0&&(U.__webglInit=!0,R.addEventListener("dispose",oe));const we=R.source;let be=v.get(we);be===void 0&&(be={},v.set(we,be));const Re=le(R);if(Re!==U.__cacheKey){be[Re]===void 0&&(be[Re]={texture:s.createTexture(),usedTimes:0},r.memory.textures++,ce=!0),be[Re].usedTimes++;const Fe=be[U.__cacheKey];Fe!==void 0&&(be[U.__cacheKey].usedTimes--,Fe.usedTimes===0&&q(R)),U.__cacheKey=Re,U.__webglTexture=be[Re].texture}return ce}function Le(U,R,ce){let we=3553;(R.isDataArrayTexture||R.isCompressedArrayTexture)&&(we=35866),R.isData3DTexture&&(we=32879);const be=Se(U,R),Re=R.source;t.bindTexture(we,U.__webglTexture,33984+ce);const Fe=n.get(Re);if(Re.version!==Fe.__version||be===!0){t.activeTexture(33984+ce),s.pixelStorei(37440,R.flipY),s.pixelStorei(37441,R.premultiplyAlpha),s.pixelStorei(3317,R.unpackAlignment),s.pixelStorei(37443,0);const Ie=N(R)&&I(R.image)===!1;let pe=C(R.image,Ie,!1,f);pe=Mn(R,pe);const ze=I(pe)||l,ge=a.convert(R.format,R.encoding);let Ee=a.convert(R.type),Ce=L(R.internalFormat,ge,Ee,R.encoding,R.isVideoTexture);ye(we,R,ze);let Pe;const $e=R.mipmaps,mt=l&&R.isVideoTexture!==!0,en=Fe.__version===void 0||be===!0,O=B(R,pe,ze);if(R.isDepthTexture)Ce=6402,l?R.type===FloatType?Ce=36012:R.type===UnsignedIntType?Ce=33190:R.type===UnsignedInt248Type?Ce=35056:Ce=33189:R.type===FloatType&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),R.format===DepthFormat&&Ce===6402&&R.type!==UnsignedShortType&&R.type!==UnsignedIntType&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),R.type=UnsignedIntType,Ee=a.convert(R.type)),R.format===DepthStencilFormat&&Ce===6402&&(Ce=34041,R.type!==UnsignedInt248Type&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),R.type=UnsignedInt248Type,Ee=a.convert(R.type))),en&&(mt?t.texStorage2D(3553,1,Ce,pe.width,pe.height):t.texImage2D(3553,0,Ce,pe.width,pe.height,0,ge,Ee,null));else if(R.isDataTexture)if($e.length>0&&ze){mt&&en&&t.texStorage2D(3553,O,Ce,$e[0].width,$e[0].height);for(let X=0,Z=$e.length;X<Z;X++)Pe=$e[X],mt?t.texSubImage2D(3553,X,0,0,Pe.width,Pe.height,ge,Ee,Pe.data):t.texImage2D(3553,X,Ce,Pe.width,Pe.height,0,ge,Ee,Pe.data);R.generateMipmaps=!1}else mt?(en&&t.texStorage2D(3553,O,Ce,pe.width,pe.height),t.texSubImage2D(3553,0,0,0,pe.width,pe.height,ge,Ee,pe.data)):t.texImage2D(3553,0,Ce,pe.width,pe.height,0,ge,Ee,pe.data);else if(R.isCompressedTexture)if(R.isCompressedArrayTexture){mt&&en&&t.texStorage3D(35866,O,Ce,$e[0].width,$e[0].height,pe.depth);for(let X=0,Z=$e.length;X<Z;X++)Pe=$e[X],R.format!==RGBAFormat?ge!==null?mt?t.compressedTexSubImage3D(35866,X,0,0,0,Pe.width,Pe.height,pe.depth,ge,Pe.data,0,0):t.compressedTexImage3D(35866,X,Ce,Pe.width,Pe.height,pe.depth,0,Pe.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):mt?t.texSubImage3D(35866,X,0,0,0,Pe.width,Pe.height,pe.depth,ge,Ee,Pe.data):t.texImage3D(35866,X,Ce,Pe.width,Pe.height,pe.depth,0,ge,Ee,Pe.data)}else{mt&&en&&t.texStorage2D(3553,O,Ce,$e[0].width,$e[0].height);for(let X=0,Z=$e.length;X<Z;X++)Pe=$e[X],R.format!==RGBAFormat?ge!==null?mt?t.compressedTexSubImage2D(3553,X,0,0,Pe.width,Pe.height,ge,Pe.data):t.compressedTexImage2D(3553,X,Ce,Pe.width,Pe.height,0,Pe.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):mt?t.texSubImage2D(3553,X,0,0,Pe.width,Pe.height,ge,Ee,Pe.data):t.texImage2D(3553,X,Ce,Pe.width,Pe.height,0,ge,Ee,Pe.data)}else if(R.isDataArrayTexture)mt?(en&&t.texStorage3D(35866,O,Ce,pe.width,pe.height,pe.depth),t.texSubImage3D(35866,0,0,0,0,pe.width,pe.height,pe.depth,ge,Ee,pe.data)):t.texImage3D(35866,0,Ce,pe.width,pe.height,pe.depth,0,ge,Ee,pe.data);else if(R.isData3DTexture)mt?(en&&t.texStorage3D(32879,O,Ce,pe.width,pe.height,pe.depth),t.texSubImage3D(32879,0,0,0,0,pe.width,pe.height,pe.depth,ge,Ee,pe.data)):t.texImage3D(32879,0,Ce,pe.width,pe.height,pe.depth,0,ge,Ee,pe.data);else if(R.isFramebufferTexture){if(en)if(mt)t.texStorage2D(3553,O,Ce,pe.width,pe.height);else{let X=pe.width,Z=pe.height;for(let ae=0;ae<O;ae++)t.texImage2D(3553,ae,Ce,X,Z,0,ge,Ee,null),X>>=1,Z>>=1}}else if($e.length>0&&ze){mt&&en&&t.texStorage2D(3553,O,Ce,$e[0].width,$e[0].height);for(let X=0,Z=$e.length;X<Z;X++)Pe=$e[X],mt?t.texSubImage2D(3553,X,0,0,ge,Ee,Pe):t.texImage2D(3553,X,Ce,ge,Ee,Pe);R.generateMipmaps=!1}else mt?(en&&t.texStorage2D(3553,O,Ce,pe.width,pe.height),t.texSubImage2D(3553,0,0,0,ge,Ee,pe)):t.texImage2D(3553,0,Ce,ge,Ee,pe);F(R,ze)&&G(we),Fe.__version=Re.version,R.onUpdate&&R.onUpdate(R)}U.__version=R.version}function De(U,R,ce){if(R.image.length!==6)return;const we=Se(U,R),be=R.source;t.bindTexture(34067,U.__webglTexture,33984+ce);const Re=n.get(be);if(be.version!==Re.__version||we===!0){t.activeTexture(33984+ce),s.pixelStorei(37440,R.flipY),s.pixelStorei(37441,R.premultiplyAlpha),s.pixelStorei(3317,R.unpackAlignment),s.pixelStorei(37443,0);const Fe=R.isCompressedTexture||R.image[0].isCompressedTexture,Ie=R.image[0]&&R.image[0].isDataTexture,pe=[];for(let X=0;X<6;X++)!Fe&&!Ie?pe[X]=C(R.image[X],!1,!0,h):pe[X]=Ie?R.image[X].image:R.image[X],pe[X]=Mn(R,pe[X]);const ze=pe[0],ge=I(ze)||l,Ee=a.convert(R.format,R.encoding),Ce=a.convert(R.type),Pe=L(R.internalFormat,Ee,Ce,R.encoding),$e=l&&R.isVideoTexture!==!0,mt=Re.__version===void 0||we===!0;let en=B(R,ze,ge);ye(34067,R,ge);let O;if(Fe){$e&&mt&&t.texStorage2D(34067,en,Pe,ze.width,ze.height);for(let X=0;X<6;X++){O=pe[X].mipmaps;for(let Z=0;Z<O.length;Z++){const ae=O[Z];R.format!==RGBAFormat?Ee!==null?$e?t.compressedTexSubImage2D(34069+X,Z,0,0,ae.width,ae.height,Ee,ae.data):t.compressedTexImage2D(34069+X,Z,Pe,ae.width,ae.height,0,ae.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):$e?t.texSubImage2D(34069+X,Z,0,0,ae.width,ae.height,Ee,Ce,ae.data):t.texImage2D(34069+X,Z,Pe,ae.width,ae.height,0,Ee,Ce,ae.data)}}}else{O=R.mipmaps,$e&&mt&&(O.length>0&&en++,t.texStorage2D(34067,en,Pe,pe[0].width,pe[0].height));for(let X=0;X<6;X++)if(Ie){$e?t.texSubImage2D(34069+X,0,0,0,pe[X].width,pe[X].height,Ee,Ce,pe[X].data):t.texImage2D(34069+X,0,Pe,pe[X].width,pe[X].height,0,Ee,Ce,pe[X].data);for(let Z=0;Z<O.length;Z++){const xe=O[Z].image[X].image;$e?t.texSubImage2D(34069+X,Z+1,0,0,xe.width,xe.height,Ee,Ce,xe.data):t.texImage2D(34069+X,Z+1,Pe,xe.width,xe.height,0,Ee,Ce,xe.data)}}else{$e?t.texSubImage2D(34069+X,0,0,0,Ee,Ce,pe[X]):t.texImage2D(34069+X,0,Pe,Ee,Ce,pe[X]);for(let Z=0;Z<O.length;Z++){const ae=O[Z];$e?t.texSubImage2D(34069+X,Z+1,0,0,Ee,Ce,ae.image[X]):t.texImage2D(34069+X,Z+1,Pe,Ee,Ce,ae.image[X])}}}F(R,ge)&&G(34067),Re.__version=be.version,R.onUpdate&&R.onUpdate(R)}U.__version=R.version}function Oe(U,R,ce,we,be){const Re=a.convert(ce.format,ce.encoding),Fe=a.convert(ce.type),Ie=L(ce.internalFormat,Re,Fe,ce.encoding);n.get(R).__hasExternalTextures||(be===32879||be===35866?t.texImage3D(be,0,Ie,R.width,R.height,R.depth,0,Re,Fe,null):t.texImage2D(be,0,Ie,R.width,R.height,0,Re,Fe,null)),t.bindFramebuffer(36160,U),vt(R)?g.framebufferTexture2DMultisampleEXT(36160,we,be,n.get(ce).__webglTexture,0,pt(R)):(be===3553||be>=34069&&be<=34074)&&s.framebufferTexture2D(36160,we,be,n.get(ce).__webglTexture,0),t.bindFramebuffer(36160,null)}function ke(U,R,ce){if(s.bindRenderbuffer(36161,U),R.depthBuffer&&!R.stencilBuffer){let we=33189;if(ce||vt(R)){const be=R.depthTexture;be&&be.isDepthTexture&&(be.type===FloatType?we=36012:be.type===UnsignedIntType&&(we=33190));const Re=pt(R);vt(R)?g.renderbufferStorageMultisampleEXT(36161,Re,we,R.width,R.height):s.renderbufferStorageMultisample(36161,Re,we,R.width,R.height)}else s.renderbufferStorage(36161,we,R.width,R.height);s.framebufferRenderbuffer(36160,36096,36161,U)}else if(R.depthBuffer&&R.stencilBuffer){const we=pt(R);ce&&vt(R)===!1?s.renderbufferStorageMultisample(36161,we,35056,R.width,R.height):vt(R)?g.renderbufferStorageMultisampleEXT(36161,we,35056,R.width,R.height):s.renderbufferStorage(36161,34041,R.width,R.height),s.framebufferRenderbuffer(36160,33306,36161,U)}else{const we=R.isWebGLMultipleRenderTargets===!0?R.texture:[R.texture];for(let be=0;be<we.length;be++){const Re=we[be],Fe=a.convert(Re.format,Re.encoding),Ie=a.convert(Re.type),pe=L(Re.internalFormat,Fe,Ie,Re.encoding),ze=pt(R);ce&&vt(R)===!1?s.renderbufferStorageMultisample(36161,ze,pe,R.width,R.height):vt(R)?g.renderbufferStorageMultisampleEXT(36161,ze,pe,R.width,R.height):s.renderbufferStorage(36161,pe,R.width,R.height)}}s.bindRenderbuffer(36161,null)}function Ve(U,R){if(R&&R.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(36160,U),!(R.depthTexture&&R.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(R.depthTexture).__webglTexture||R.depthTexture.image.width!==R.width||R.depthTexture.image.height!==R.height)&&(R.depthTexture.image.width=R.width,R.depthTexture.image.height=R.height,R.depthTexture.needsUpdate=!0),de(R.depthTexture,0);const we=n.get(R.depthTexture).__webglTexture,be=pt(R);if(R.depthTexture.format===DepthFormat)vt(R)?g.framebufferTexture2DMultisampleEXT(36160,36096,3553,we,0,be):s.framebufferTexture2D(36160,36096,3553,we,0);else if(R.depthTexture.format===DepthStencilFormat)vt(R)?g.framebufferTexture2DMultisampleEXT(36160,33306,3553,we,0,be):s.framebufferTexture2D(36160,33306,3553,we,0);else throw new Error("Unknown depthTexture format")}function je(U){const R=n.get(U),ce=U.isWebGLCubeRenderTarget===!0;if(U.depthTexture&&!R.__autoAllocateDepthBuffer){if(ce)throw new Error("target.depthTexture not supported in Cube render targets");Ve(R.__webglFramebuffer,U)}else if(ce){R.__webglDepthbuffer=[];for(let we=0;we<6;we++)t.bindFramebuffer(36160,R.__webglFramebuffer[we]),R.__webglDepthbuffer[we]=s.createRenderbuffer(),ke(R.__webglDepthbuffer[we],U,!1)}else t.bindFramebuffer(36160,R.__webglFramebuffer),R.__webglDepthbuffer=s.createRenderbuffer(),ke(R.__webglDepthbuffer,U,!1);t.bindFramebuffer(36160,null)}function $t(U,R,ce){const we=n.get(U);R!==void 0&&Oe(we.__webglFramebuffer,U,U.texture,36064,3553),ce!==void 0&&je(U)}function jt(U){const R=U.texture,ce=n.get(U),we=n.get(R);U.addEventListener("dispose",se),U.isWebGLMultipleRenderTargets!==!0&&(we.__webglTexture===void 0&&(we.__webglTexture=s.createTexture()),we.__version=R.version,r.memory.textures++);const be=U.isWebGLCubeRenderTarget===!0,Re=U.isWebGLMultipleRenderTargets===!0,Fe=I(U)||l;if(be){ce.__webglFramebuffer=[];for(let Ie=0;Ie<6;Ie++)ce.__webglFramebuffer[Ie]=s.createFramebuffer()}else{if(ce.__webglFramebuffer=s.createFramebuffer(),Re)if(o.drawBuffers){const Ie=U.texture;for(let pe=0,ze=Ie.length;pe<ze;pe++){const ge=n.get(Ie[pe]);ge.__webglTexture===void 0&&(ge.__webglTexture=s.createTexture(),r.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(l&&U.samples>0&&vt(U)===!1){const Ie=Re?R:[R];ce.__webglMultisampledFramebuffer=s.createFramebuffer(),ce.__webglColorRenderbuffer=[],t.bindFramebuffer(36160,ce.__webglMultisampledFramebuffer);for(let pe=0;pe<Ie.length;pe++){const ze=Ie[pe];ce.__webglColorRenderbuffer[pe]=s.createRenderbuffer(),s.bindRenderbuffer(36161,ce.__webglColorRenderbuffer[pe]);const ge=a.convert(ze.format,ze.encoding),Ee=a.convert(ze.type),Ce=L(ze.internalFormat,ge,Ee,ze.encoding,U.isXRRenderTarget===!0),Pe=pt(U);s.renderbufferStorageMultisample(36161,Pe,Ce,U.width,U.height),s.framebufferRenderbuffer(36160,36064+pe,36161,ce.__webglColorRenderbuffer[pe])}s.bindRenderbuffer(36161,null),U.depthBuffer&&(ce.__webglDepthRenderbuffer=s.createRenderbuffer(),ke(ce.__webglDepthRenderbuffer,U,!0)),t.bindFramebuffer(36160,null)}}if(be){t.bindTexture(34067,we.__webglTexture),ye(34067,R,Fe);for(let Ie=0;Ie<6;Ie++)Oe(ce.__webglFramebuffer[Ie],U,R,36064,34069+Ie);F(R,Fe)&&G(34067),t.unbindTexture()}else if(Re){const Ie=U.texture;for(let pe=0,ze=Ie.length;pe<ze;pe++){const ge=Ie[pe],Ee=n.get(ge);t.bindTexture(3553,Ee.__webglTexture),ye(3553,ge,Fe),Oe(ce.__webglFramebuffer,U,ge,36064+pe,3553),F(ge,Fe)&&G(3553)}t.unbindTexture()}else{let Ie=3553;(U.isWebGL3DRenderTarget||U.isWebGLArrayRenderTarget)&&(l?Ie=U.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(Ie,we.__webglTexture),ye(Ie,R,Fe),Oe(ce.__webglFramebuffer,U,R,36064,Ie),F(R,Fe)&&G(Ie),t.unbindTexture()}U.depthBuffer&&je(U)}function Ot(U){const R=I(U)||l,ce=U.isWebGLMultipleRenderTargets===!0?U.texture:[U.texture];for(let we=0,be=ce.length;we<be;we++){const Re=ce[we];if(F(Re,R)){const Fe=U.isWebGLCubeRenderTarget?34067:3553,Ie=n.get(Re).__webglTexture;t.bindTexture(Fe,Ie),G(Fe),t.unbindTexture()}}}function _t(U){if(l&&U.samples>0&&vt(U)===!1){const R=U.isWebGLMultipleRenderTargets?U.texture:[U.texture],ce=U.width,we=U.height;let be=16384;const Re=[],Fe=U.stencilBuffer?33306:36096,Ie=n.get(U),pe=U.isWebGLMultipleRenderTargets===!0;if(pe)for(let ze=0;ze<R.length;ze++)t.bindFramebuffer(36160,Ie.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(36160,36064+ze,36161,null),t.bindFramebuffer(36160,Ie.__webglFramebuffer),s.framebufferTexture2D(36009,36064+ze,3553,null,0);t.bindFramebuffer(36008,Ie.__webglMultisampledFramebuffer),t.bindFramebuffer(36009,Ie.__webglFramebuffer);for(let ze=0;ze<R.length;ze++){Re.push(36064+ze),U.depthBuffer&&Re.push(Fe);const ge=Ie.__ignoreDepthValues!==void 0?Ie.__ignoreDepthValues:!1;if(ge===!1&&(U.depthBuffer&&(be|=256),U.stencilBuffer&&(be|=1024)),pe&&s.framebufferRenderbuffer(36008,36064,36161,Ie.__webglColorRenderbuffer[ze]),ge===!0&&(s.invalidateFramebuffer(36008,[Fe]),s.invalidateFramebuffer(36009,[Fe])),pe){const Ee=n.get(R[ze]).__webglTexture;s.framebufferTexture2D(36009,36064,3553,Ee,0)}s.blitFramebuffer(0,0,ce,we,0,0,ce,we,be,9728),b&&s.invalidateFramebuffer(36008,Re)}if(t.bindFramebuffer(36008,null),t.bindFramebuffer(36009,null),pe)for(let ze=0;ze<R.length;ze++){t.bindFramebuffer(36160,Ie.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(36160,36064+ze,36161,Ie.__webglColorRenderbuffer[ze]);const ge=n.get(R[ze]).__webglTexture;t.bindFramebuffer(36160,Ie.__webglFramebuffer),s.framebufferTexture2D(36009,36064+ze,3553,ge,0)}t.bindFramebuffer(36009,Ie.__webglMultisampledFramebuffer)}}function pt(U){return Math.min(_,U.samples)}function vt(U){const R=n.get(U);return l&&U.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&R.__useRenderToTexture!==!1}function cn(U){const R=r.render.frame;w.get(U)!==R&&(w.set(U,R),U.update())}function Mn(U,R){const ce=U.encoding,we=U.format,be=U.type;return U.isCompressedTexture===!0||U.isVideoTexture===!0||U.format===_SRGBAFormat||ce!==LinearEncoding&&(ce===sRGBEncoding?l===!1?e.has("EXT_sRGB")===!0&&we===RGBAFormat?(U.format=_SRGBAFormat,U.minFilter=LinearFilter,U.generateMipmaps=!1):R=ImageUtils.sRGBToLinear(R):(we!==RGBAFormat||be!==UnsignedByteType)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",ce)),R}this.allocateTextureUnit=K,this.resetTextureUnits=Q,this.setTexture2D=de,this.setTexture2DArray=ve,this.setTexture3D=$,this.setTextureCube=z,this.rebindTextures=$t,this.setupRenderTarget=jt,this.updateRenderTargetMipmap=Ot,this.updateMultisampleRenderTarget=_t,this.setupDepthRenderbuffer=je,this.setupFrameBufferTexture=Oe,this.useMultisampledRTT=vt}function WebGLUtils(s,e,t){const n=t.isWebGL2;function o(a,r=null){let l;if(a===UnsignedByteType)return 5121;if(a===UnsignedShort4444Type)return 32819;if(a===UnsignedShort5551Type)return 32820;if(a===ByteType)return 5120;if(a===ShortType)return 5122;if(a===UnsignedShortType)return 5123;if(a===IntType)return 5124;if(a===UnsignedIntType)return 5125;if(a===FloatType)return 5126;if(a===HalfFloatType)return n?5131:(l=e.get("OES_texture_half_float"),l!==null?l.HALF_FLOAT_OES:null);if(a===AlphaFormat)return 6406;if(a===RGBAFormat)return 6408;if(a===LuminanceFormat)return 6409;if(a===LuminanceAlphaFormat)return 6410;if(a===DepthFormat)return 6402;if(a===DepthStencilFormat)return 34041;if(a===_SRGBAFormat)return l=e.get("EXT_sRGB"),l!==null?l.SRGB_ALPHA_EXT:null;if(a===RedFormat)return 6403;if(a===RedIntegerFormat)return 36244;if(a===RGFormat)return 33319;if(a===RGIntegerFormat)return 33320;if(a===RGBAIntegerFormat)return 36249;if(a===RGB_S3TC_DXT1_Format||a===RGBA_S3TC_DXT1_Format||a===RGBA_S3TC_DXT3_Format||a===RGBA_S3TC_DXT5_Format)if(r===sRGBEncoding)if(l=e.get("WEBGL_compressed_texture_s3tc_srgb"),l!==null){if(a===RGB_S3TC_DXT1_Format)return l.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(a===RGBA_S3TC_DXT1_Format)return l.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(a===RGBA_S3TC_DXT3_Format)return l.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(a===RGBA_S3TC_DXT5_Format)return l.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(l=e.get("WEBGL_compressed_texture_s3tc"),l!==null){if(a===RGB_S3TC_DXT1_Format)return l.COMPRESSED_RGB_S3TC_DXT1_EXT;if(a===RGBA_S3TC_DXT1_Format)return l.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(a===RGBA_S3TC_DXT3_Format)return l.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(a===RGBA_S3TC_DXT5_Format)return l.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(a===RGB_PVRTC_4BPPV1_Format||a===RGB_PVRTC_2BPPV1_Format||a===RGBA_PVRTC_4BPPV1_Format||a===RGBA_PVRTC_2BPPV1_Format)if(l=e.get("WEBGL_compressed_texture_pvrtc"),l!==null){if(a===RGB_PVRTC_4BPPV1_Format)return l.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(a===RGB_PVRTC_2BPPV1_Format)return l.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(a===RGBA_PVRTC_4BPPV1_Format)return l.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(a===RGBA_PVRTC_2BPPV1_Format)return l.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(a===RGB_ETC1_Format)return l=e.get("WEBGL_compressed_texture_etc1"),l!==null?l.COMPRESSED_RGB_ETC1_WEBGL:null;if(a===RGB_ETC2_Format||a===RGBA_ETC2_EAC_Format)if(l=e.get("WEBGL_compressed_texture_etc"),l!==null){if(a===RGB_ETC2_Format)return r===sRGBEncoding?l.COMPRESSED_SRGB8_ETC2:l.COMPRESSED_RGB8_ETC2;if(a===RGBA_ETC2_EAC_Format)return r===sRGBEncoding?l.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:l.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(a===RGBA_ASTC_4x4_Format||a===RGBA_ASTC_5x4_Format||a===RGBA_ASTC_5x5_Format||a===RGBA_ASTC_6x5_Format||a===RGBA_ASTC_6x6_Format||a===RGBA_ASTC_8x5_Format||a===RGBA_ASTC_8x6_Format||a===RGBA_ASTC_8x8_Format||a===RGBA_ASTC_10x5_Format||a===RGBA_ASTC_10x6_Format||a===RGBA_ASTC_10x8_Format||a===RGBA_ASTC_10x10_Format||a===RGBA_ASTC_12x10_Format||a===RGBA_ASTC_12x12_Format)if(l=e.get("WEBGL_compressed_texture_astc"),l!==null){if(a===RGBA_ASTC_4x4_Format)return r===sRGBEncoding?l.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:l.COMPRESSED_RGBA_ASTC_4x4_KHR;if(a===RGBA_ASTC_5x4_Format)return r===sRGBEncoding?l.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:l.COMPRESSED_RGBA_ASTC_5x4_KHR;if(a===RGBA_ASTC_5x5_Format)return r===sRGBEncoding?l.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:l.COMPRESSED_RGBA_ASTC_5x5_KHR;if(a===RGBA_ASTC_6x5_Format)return r===sRGBEncoding?l.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:l.COMPRESSED_RGBA_ASTC_6x5_KHR;if(a===RGBA_ASTC_6x6_Format)return r===sRGBEncoding?l.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:l.COMPRESSED_RGBA_ASTC_6x6_KHR;if(a===RGBA_ASTC_8x5_Format)return r===sRGBEncoding?l.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:l.COMPRESSED_RGBA_ASTC_8x5_KHR;if(a===RGBA_ASTC_8x6_Format)return r===sRGBEncoding?l.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:l.COMPRESSED_RGBA_ASTC_8x6_KHR;if(a===RGBA_ASTC_8x8_Format)return r===sRGBEncoding?l.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:l.COMPRESSED_RGBA_ASTC_8x8_KHR;if(a===RGBA_ASTC_10x5_Format)return r===sRGBEncoding?l.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:l.COMPRESSED_RGBA_ASTC_10x5_KHR;if(a===RGBA_ASTC_10x6_Format)return r===sRGBEncoding?l.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:l.COMPRESSED_RGBA_ASTC_10x6_KHR;if(a===RGBA_ASTC_10x8_Format)return r===sRGBEncoding?l.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:l.COMPRESSED_RGBA_ASTC_10x8_KHR;if(a===RGBA_ASTC_10x10_Format)return r===sRGBEncoding?l.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:l.COMPRESSED_RGBA_ASTC_10x10_KHR;if(a===RGBA_ASTC_12x10_Format)return r===sRGBEncoding?l.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:l.COMPRESSED_RGBA_ASTC_12x10_KHR;if(a===RGBA_ASTC_12x12_Format)return r===sRGBEncoding?l.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:l.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(a===RGBA_BPTC_Format)if(l=e.get("EXT_texture_compression_bptc"),l!==null){if(a===RGBA_BPTC_Format)return r===sRGBEncoding?l.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:l.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;if(a===RED_RGTC1_Format||a===SIGNED_RED_RGTC1_Format||a===RED_GREEN_RGTC2_Format||a===SIGNED_RED_GREEN_RGTC2_Format)if(l=e.get("EXT_texture_compression_rgtc"),l!==null){if(a===RGBA_BPTC_Format)return l.COMPRESSED_RED_RGTC1_EXT;if(a===SIGNED_RED_RGTC1_Format)return l.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(a===RED_GREEN_RGTC2_Format)return l.COMPRESSED_RED_GREEN_RGTC2_EXT;if(a===SIGNED_RED_GREEN_RGTC2_Format)return l.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return a===UnsignedInt248Type?n?34042:(l=e.get("WEBGL_depth_texture"),l!==null?l.UNSIGNED_INT_24_8_WEBGL:null):s[a]!==void 0?s[a]:null}return{convert:o}}class ArrayCamera extends PerspectiveCamera{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class Group extends Object3D{constructor(){super(),this.isGroup=!0,this.type="Group"}}const _moveEvent={type:"move"};class WebXRController{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new Group,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new Group,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new Vector3,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new Vector3),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new Group,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new Vector3,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new Vector3),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let o=null,a=null,r=null;const l=this._targetRay,d=this._grip,h=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(h&&e.hand){r=!0;for(const x of e.hand.values()){const v=t.getJointPose(x,n),T=this._getHandJoint(h,x);v!==null&&(T.matrix.fromArray(v.transform.matrix),T.matrix.decompose(T.position,T.rotation,T.scale),T.jointRadius=v.radius),T.visible=v!==null}const f=h.joints["index-finger-tip"],_=h.joints["thumb-tip"],g=f.position.distanceTo(_.position),b=.02,w=.005;h.inputState.pinching&&g>b+w?(h.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!h.inputState.pinching&&g<=b-w&&(h.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else d!==null&&e.gripSpace&&(a=t.getPose(e.gripSpace,n),a!==null&&(d.matrix.fromArray(a.transform.matrix),d.matrix.decompose(d.position,d.rotation,d.scale),a.linearVelocity?(d.hasLinearVelocity=!0,d.linearVelocity.copy(a.linearVelocity)):d.hasLinearVelocity=!1,a.angularVelocity?(d.hasAngularVelocity=!0,d.angularVelocity.copy(a.angularVelocity)):d.hasAngularVelocity=!1));l!==null&&(o=t.getPose(e.targetRaySpace,n),o===null&&a!==null&&(o=a),o!==null&&(l.matrix.fromArray(o.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),o.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(o.linearVelocity)):l.hasLinearVelocity=!1,o.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(o.angularVelocity)):l.hasAngularVelocity=!1,this.dispatchEvent(_moveEvent)))}return l!==null&&(l.visible=o!==null),d!==null&&(d.visible=a!==null),h!==null&&(h.visible=r!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const n=new Group;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}class DepthTexture extends Texture{constructor(e,t,n,o,a,r,l,d,h,f){if(f=f!==void 0?f:DepthFormat,f!==DepthFormat&&f!==DepthStencilFormat)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&f===DepthFormat&&(n=UnsignedIntType),n===void 0&&f===DepthStencilFormat&&(n=UnsignedInt248Type),super(null,o,a,r,l,d,f,n,h),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=l!==void 0?l:NearestFilter,this.minFilter=d!==void 0?d:NearestFilter,this.flipY=!1,this.generateMipmaps=!1}}class WebXRManager extends EventDispatcher{constructor(e,t){super();const n=this;let o=null,a=1,r=null,l="local-floor",d=1,h=null,f=null,_=null,g=null,b=null,w=null;const x=t.getContextAttributes();let v=null,T=null;const D=[],C=[],I=new Set,N=new Map,F=new PerspectiveCamera;F.layers.enable(1),F.viewport=new Vector4;const G=new PerspectiveCamera;G.layers.enable(2),G.viewport=new Vector4;const L=[F,G],B=new ArrayCamera;B.layers.enable(1),B.layers.enable(2);let W=null,oe=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function($){let z=D[$];return z===void 0&&(z=new WebXRController,D[$]=z),z.getTargetRaySpace()},this.getControllerGrip=function($){let z=D[$];return z===void 0&&(z=new WebXRController,D[$]=z),z.getGripSpace()},this.getHand=function($){let z=D[$];return z===void 0&&(z=new WebXRController,D[$]=z),z.getHandSpace()};function se($){const z=C.indexOf($.inputSource);if(z===-1)return;const ne=D[z];ne!==void 0&&ne.dispatchEvent({type:$.type,data:$.inputSource})}function Y(){o.removeEventListener("select",se),o.removeEventListener("selectstart",se),o.removeEventListener("selectend",se),o.removeEventListener("squeeze",se),o.removeEventListener("squeezestart",se),o.removeEventListener("squeezeend",se),o.removeEventListener("end",Y),o.removeEventListener("inputsourceschange",q);for(let $=0;$<D.length;$++){const z=C[$];z!==null&&(C[$]=null,D[$].disconnect(z))}W=null,oe=null,e.setRenderTarget(v),b=null,g=null,_=null,o=null,T=null,ve.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function($){a=$,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function($){l=$,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return h||r},this.setReferenceSpace=function($){h=$},this.getBaseLayer=function(){return g!==null?g:b},this.getBinding=function(){return _},this.getFrame=function(){return w},this.getSession=function(){return o},this.setSession=async function($){if(o=$,o!==null){if(v=e.getRenderTarget(),o.addEventListener("select",se),o.addEventListener("selectstart",se),o.addEventListener("selectend",se),o.addEventListener("squeeze",se),o.addEventListener("squeezestart",se),o.addEventListener("squeezeend",se),o.addEventListener("end",Y),o.addEventListener("inputsourceschange",q),x.xrCompatible!==!0&&await t.makeXRCompatible(),o.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const z={antialias:o.renderState.layers===void 0?x.antialias:!0,alpha:x.alpha,depth:x.depth,stencil:x.stencil,framebufferScaleFactor:a};b=new XRWebGLLayer(o,t,z),o.updateRenderState({baseLayer:b}),T=new WebGLRenderTarget(b.framebufferWidth,b.framebufferHeight,{format:RGBAFormat,type:UnsignedByteType,encoding:e.outputEncoding,stencilBuffer:x.stencil})}else{let z=null,ne=null,V=null;x.depth&&(V=x.stencil?35056:33190,z=x.stencil?DepthStencilFormat:DepthFormat,ne=x.stencil?UnsignedInt248Type:UnsignedIntType);const ye={colorFormat:32856,depthFormat:V,scaleFactor:a};_=new XRWebGLBinding(o,t),g=_.createProjectionLayer(ye),o.updateRenderState({layers:[g]}),T=new WebGLRenderTarget(g.textureWidth,g.textureHeight,{format:RGBAFormat,type:UnsignedByteType,depthTexture:new DepthTexture(g.textureWidth,g.textureHeight,ne,void 0,void 0,void 0,void 0,void 0,void 0,z),stencilBuffer:x.stencil,encoding:e.outputEncoding,samples:x.antialias?4:0});const Se=e.properties.get(T);Se.__ignoreDepthValues=g.ignoreDepthValues}T.isXRRenderTarget=!0,this.setFoveation(d),h=null,r=await o.requestReferenceSpace(l),ve.setContext(o),ve.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};function q($){for(let z=0;z<$.removed.length;z++){const ne=$.removed[z],V=C.indexOf(ne);V>=0&&(C[V]=null,D[V].disconnect(ne))}for(let z=0;z<$.added.length;z++){const ne=$.added[z];let V=C.indexOf(ne);if(V===-1){for(let Se=0;Se<D.length;Se++)if(Se>=C.length){C.push(ne),V=Se;break}else if(C[Se]===null){C[Se]=ne,V=Se;break}if(V===-1)break}const ye=D[V];ye&&ye.connect(ne)}}const ie=new Vector3,me=new Vector3;function Q($,z,ne){ie.setFromMatrixPosition(z.matrixWorld),me.setFromMatrixPosition(ne.matrixWorld);const V=ie.distanceTo(me),ye=z.projectionMatrix.elements,Se=ne.projectionMatrix.elements,Le=ye[14]/(ye[10]-1),De=ye[14]/(ye[10]+1),Oe=(ye[9]+1)/ye[5],ke=(ye[9]-1)/ye[5],Ve=(ye[8]-1)/ye[0],je=(Se[8]+1)/Se[0],$t=Le*Ve,jt=Le*je,Ot=V/(-Ve+je),_t=Ot*-Ve;z.matrixWorld.decompose($.position,$.quaternion,$.scale),$.translateX(_t),$.translateZ(Ot),$.matrixWorld.compose($.position,$.quaternion,$.scale),$.matrixWorldInverse.copy($.matrixWorld).invert();const pt=Le+Ot,vt=De+Ot,cn=$t-_t,Mn=jt+(V-_t),U=Oe*De/vt*pt,R=ke*De/vt*pt;$.projectionMatrix.makePerspective(cn,Mn,U,R,pt,vt)}function K($,z){z===null?$.matrixWorld.copy($.matrix):$.matrixWorld.multiplyMatrices(z.matrixWorld,$.matrix),$.matrixWorldInverse.copy($.matrixWorld).invert()}this.updateCamera=function($){if(o===null)return;B.near=G.near=F.near=$.near,B.far=G.far=F.far=$.far,(W!==B.near||oe!==B.far)&&(o.updateRenderState({depthNear:B.near,depthFar:B.far}),W=B.near,oe=B.far);const z=$.parent,ne=B.cameras;K(B,z);for(let ye=0;ye<ne.length;ye++)K(ne[ye],z);B.matrixWorld.decompose(B.position,B.quaternion,B.scale),$.matrix.copy(B.matrix),$.matrix.decompose($.position,$.quaternion,$.scale);const V=$.children;for(let ye=0,Se=V.length;ye<Se;ye++)V[ye].updateMatrixWorld(!0);ne.length===2?Q(B,F,G):B.projectionMatrix.copy(F.projectionMatrix)},this.getCamera=function(){return B},this.getFoveation=function(){if(!(g===null&&b===null))return d},this.setFoveation=function($){d=$,g!==null&&(g.fixedFoveation=$),b!==null&&b.fixedFoveation!==void 0&&(b.fixedFoveation=$)},this.getPlanes=function(){return I};let le=null;function de($,z){if(f=z.getViewerPose(h||r),w=z,f!==null){const ne=f.views;b!==null&&(e.setRenderTargetFramebuffer(T,b.framebuffer),e.setRenderTarget(T));let V=!1;ne.length!==B.cameras.length&&(B.cameras.length=0,V=!0);for(let ye=0;ye<ne.length;ye++){const Se=ne[ye];let Le=null;if(b!==null)Le=b.getViewport(Se);else{const Oe=_.getViewSubImage(g,Se);Le=Oe.viewport,ye===0&&(e.setRenderTargetTextures(T,Oe.colorTexture,g.ignoreDepthValues?void 0:Oe.depthStencilTexture),e.setRenderTarget(T))}let De=L[ye];De===void 0&&(De=new PerspectiveCamera,De.layers.enable(ye),De.viewport=new Vector4,L[ye]=De),De.matrix.fromArray(Se.transform.matrix),De.projectionMatrix.fromArray(Se.projectionMatrix),De.viewport.set(Le.x,Le.y,Le.width,Le.height),ye===0&&B.matrix.copy(De.matrix),V===!0&&B.cameras.push(De)}}for(let ne=0;ne<D.length;ne++){const V=C[ne],ye=D[ne];V!==null&&ye!==void 0&&ye.update(V,z,h||r)}if(le&&le($,z),z.detectedPlanes){n.dispatchEvent({type:"planesdetected",data:z.detectedPlanes});let ne=null;for(const V of I)z.detectedPlanes.has(V)||(ne===null&&(ne=[]),ne.push(V));if(ne!==null)for(const V of ne)I.delete(V),N.delete(V),n.dispatchEvent({type:"planeremoved",data:V});for(const V of z.detectedPlanes)if(!I.has(V))I.add(V),N.set(V,z.lastChangedTime),n.dispatchEvent({type:"planeadded",data:V});else{const ye=N.get(V);V.lastChangedTime>ye&&(N.set(V,V.lastChangedTime),n.dispatchEvent({type:"planechanged",data:V}))}}w=null}const ve=new WebGLAnimation;ve.setAnimationLoop(de),this.setAnimationLoop=function($){le=$},this.dispose=function(){}}}function WebGLMaterials(s,e){function t(x,v){v.color.getRGB(x.fogColor.value,getUnlitUniformColorSpace(s)),v.isFog?(x.fogNear.value=v.near,x.fogFar.value=v.far):v.isFogExp2&&(x.fogDensity.value=v.density)}function n(x,v,T,D,C){v.isMeshBasicMaterial||v.isMeshLambertMaterial?o(x,v):v.isMeshToonMaterial?(o(x,v),f(x,v)):v.isMeshPhongMaterial?(o(x,v),h(x,v)):v.isMeshStandardMaterial?(o(x,v),_(x,v),v.isMeshPhysicalMaterial&&g(x,v,C)):v.isMeshMatcapMaterial?(o(x,v),b(x,v)):v.isMeshDepthMaterial?o(x,v):v.isMeshDistanceMaterial?(o(x,v),w(x,v)):v.isMeshNormalMaterial?o(x,v):v.isLineBasicMaterial?(a(x,v),v.isLineDashedMaterial&&r(x,v)):v.isPointsMaterial?l(x,v,T,D):v.isSpriteMaterial?d(x,v):v.isShadowMaterial?(x.color.value.copy(v.color),x.opacity.value=v.opacity):v.isShaderMaterial&&(v.uniformsNeedUpdate=!1)}function o(x,v){x.opacity.value=v.opacity,v.color&&x.diffuse.value.copy(v.color),v.emissive&&x.emissive.value.copy(v.emissive).multiplyScalar(v.emissiveIntensity),v.map&&(x.map.value=v.map),v.alphaMap&&(x.alphaMap.value=v.alphaMap),v.bumpMap&&(x.bumpMap.value=v.bumpMap,x.bumpScale.value=v.bumpScale,v.side===BackSide&&(x.bumpScale.value*=-1)),v.displacementMap&&(x.displacementMap.value=v.displacementMap,x.displacementScale.value=v.displacementScale,x.displacementBias.value=v.displacementBias),v.emissiveMap&&(x.emissiveMap.value=v.emissiveMap),v.normalMap&&(x.normalMap.value=v.normalMap,x.normalScale.value.copy(v.normalScale),v.side===BackSide&&x.normalScale.value.negate()),v.specularMap&&(x.specularMap.value=v.specularMap),v.alphaTest>0&&(x.alphaTest.value=v.alphaTest);const T=e.get(v).envMap;if(T&&(x.envMap.value=T,x.flipEnvMap.value=T.isCubeTexture&&T.isRenderTargetTexture===!1?-1:1,x.reflectivity.value=v.reflectivity,x.ior.value=v.ior,x.refractionRatio.value=v.refractionRatio),v.lightMap){x.lightMap.value=v.lightMap;const I=s.useLegacyLights===!0?Math.PI:1;x.lightMapIntensity.value=v.lightMapIntensity*I}v.aoMap&&(x.aoMap.value=v.aoMap,x.aoMapIntensity.value=v.aoMapIntensity);let D;v.map?D=v.map:v.specularMap?D=v.specularMap:v.displacementMap?D=v.displacementMap:v.normalMap?D=v.normalMap:v.bumpMap?D=v.bumpMap:v.roughnessMap?D=v.roughnessMap:v.metalnessMap?D=v.metalnessMap:v.alphaMap?D=v.alphaMap:v.emissiveMap?D=v.emissiveMap:v.clearcoatMap?D=v.clearcoatMap:v.clearcoatNormalMap?D=v.clearcoatNormalMap:v.clearcoatRoughnessMap?D=v.clearcoatRoughnessMap:v.iridescenceMap?D=v.iridescenceMap:v.iridescenceThicknessMap?D=v.iridescenceThicknessMap:v.specularIntensityMap?D=v.specularIntensityMap:v.specularColorMap?D=v.specularColorMap:v.transmissionMap?D=v.transmissionMap:v.thicknessMap?D=v.thicknessMap:v.sheenColorMap?D=v.sheenColorMap:v.sheenRoughnessMap&&(D=v.sheenRoughnessMap),D!==void 0&&(D.isWebGLRenderTarget&&(D=D.texture),D.matrixAutoUpdate===!0&&D.updateMatrix(),x.uvTransform.value.copy(D.matrix));let C;v.aoMap?C=v.aoMap:v.lightMap&&(C=v.lightMap),C!==void 0&&(C.isWebGLRenderTarget&&(C=C.texture),C.matrixAutoUpdate===!0&&C.updateMatrix(),x.uv2Transform.value.copy(C.matrix))}function a(x,v){x.diffuse.value.copy(v.color),x.opacity.value=v.opacity}function r(x,v){x.dashSize.value=v.dashSize,x.totalSize.value=v.dashSize+v.gapSize,x.scale.value=v.scale}function l(x,v,T,D){x.diffuse.value.copy(v.color),x.opacity.value=v.opacity,x.size.value=v.size*T,x.scale.value=D*.5,v.map&&(x.map.value=v.map),v.alphaMap&&(x.alphaMap.value=v.alphaMap),v.alphaTest>0&&(x.alphaTest.value=v.alphaTest);let C;v.map?C=v.map:v.alphaMap&&(C=v.alphaMap),C!==void 0&&(C.matrixAutoUpdate===!0&&C.updateMatrix(),x.uvTransform.value.copy(C.matrix))}function d(x,v){x.diffuse.value.copy(v.color),x.opacity.value=v.opacity,x.rotation.value=v.rotation,v.map&&(x.map.value=v.map),v.alphaMap&&(x.alphaMap.value=v.alphaMap),v.alphaTest>0&&(x.alphaTest.value=v.alphaTest);let T;v.map?T=v.map:v.alphaMap&&(T=v.alphaMap),T!==void 0&&(T.matrixAutoUpdate===!0&&T.updateMatrix(),x.uvTransform.value.copy(T.matrix))}function h(x,v){x.specular.value.copy(v.specular),x.shininess.value=Math.max(v.shininess,1e-4)}function f(x,v){v.gradientMap&&(x.gradientMap.value=v.gradientMap)}function _(x,v){x.roughness.value=v.roughness,x.metalness.value=v.metalness,v.roughnessMap&&(x.roughnessMap.value=v.roughnessMap),v.metalnessMap&&(x.metalnessMap.value=v.metalnessMap),e.get(v).envMap&&(x.envMapIntensity.value=v.envMapIntensity)}function g(x,v,T){x.ior.value=v.ior,v.sheen>0&&(x.sheenColor.value.copy(v.sheenColor).multiplyScalar(v.sheen),x.sheenRoughness.value=v.sheenRoughness,v.sheenColorMap&&(x.sheenColorMap.value=v.sheenColorMap),v.sheenRoughnessMap&&(x.sheenRoughnessMap.value=v.sheenRoughnessMap)),v.clearcoat>0&&(x.clearcoat.value=v.clearcoat,x.clearcoatRoughness.value=v.clearcoatRoughness,v.clearcoatMap&&(x.clearcoatMap.value=v.clearcoatMap),v.clearcoatRoughnessMap&&(x.clearcoatRoughnessMap.value=v.clearcoatRoughnessMap),v.clearcoatNormalMap&&(x.clearcoatNormalScale.value.copy(v.clearcoatNormalScale),x.clearcoatNormalMap.value=v.clearcoatNormalMap,v.side===BackSide&&x.clearcoatNormalScale.value.negate())),v.iridescence>0&&(x.iridescence.value=v.iridescence,x.iridescenceIOR.value=v.iridescenceIOR,x.iridescenceThicknessMinimum.value=v.iridescenceThicknessRange[0],x.iridescenceThicknessMaximum.value=v.iridescenceThicknessRange[1],v.iridescenceMap&&(x.iridescenceMap.value=v.iridescenceMap),v.iridescenceThicknessMap&&(x.iridescenceThicknessMap.value=v.iridescenceThicknessMap)),v.transmission>0&&(x.transmission.value=v.transmission,x.transmissionSamplerMap.value=T.texture,x.transmissionSamplerSize.value.set(T.width,T.height),v.transmissionMap&&(x.transmissionMap.value=v.transmissionMap),x.thickness.value=v.thickness,v.thicknessMap&&(x.thicknessMap.value=v.thicknessMap),x.attenuationDistance.value=v.attenuationDistance,x.attenuationColor.value.copy(v.attenuationColor)),x.specularIntensity.value=v.specularIntensity,x.specularColor.value.copy(v.specularColor),v.specularIntensityMap&&(x.specularIntensityMap.value=v.specularIntensityMap),v.specularColorMap&&(x.specularColorMap.value=v.specularColorMap)}function b(x,v){v.matcap&&(x.matcap.value=v.matcap)}function w(x,v){x.referencePosition.value.copy(v.referencePosition),x.nearDistance.value=v.nearDistance,x.farDistance.value=v.farDistance}return{refreshFogUniforms:t,refreshMaterialUniforms:n}}function WebGLUniformsGroups(s,e,t,n){let o={},a={},r=[];const l=t.isWebGL2?s.getParameter(35375):0;function d(D,C){const I=C.program;n.uniformBlockBinding(D,I)}function h(D,C){let I=o[D.id];I===void 0&&(w(D),I=f(D),o[D.id]=I,D.addEventListener("dispose",v));const N=C.program;n.updateUBOMapping(D,N);const F=e.render.frame;a[D.id]!==F&&(g(D),a[D.id]=F)}function f(D){const C=_();D.__bindingPointIndex=C;const I=s.createBuffer(),N=D.__size,F=D.usage;return s.bindBuffer(35345,I),s.bufferData(35345,N,F),s.bindBuffer(35345,null),s.bindBufferBase(35345,C,I),I}function _(){for(let D=0;D<l;D++)if(r.indexOf(D)===-1)return r.push(D),D;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function g(D){const C=o[D.id],I=D.uniforms,N=D.__cache;s.bindBuffer(35345,C);for(let F=0,G=I.length;F<G;F++){const L=I[F];if(b(L,F,N)===!0){const B=L.__offset,W=Array.isArray(L.value)?L.value:[L.value];let oe=0;for(let se=0;se<W.length;se++){const Y=W[se],q=x(Y);typeof Y=="number"?(L.__data[0]=Y,s.bufferSubData(35345,B+oe,L.__data)):Y.isMatrix3?(L.__data[0]=Y.elements[0],L.__data[1]=Y.elements[1],L.__data[2]=Y.elements[2],L.__data[3]=Y.elements[0],L.__data[4]=Y.elements[3],L.__data[5]=Y.elements[4],L.__data[6]=Y.elements[5],L.__data[7]=Y.elements[0],L.__data[8]=Y.elements[6],L.__data[9]=Y.elements[7],L.__data[10]=Y.elements[8],L.__data[11]=Y.elements[0]):(Y.toArray(L.__data,oe),oe+=q.storage/Float32Array.BYTES_PER_ELEMENT)}s.bufferSubData(35345,B,L.__data)}}s.bindBuffer(35345,null)}function b(D,C,I){const N=D.value;if(I[C]===void 0){if(typeof N=="number")I[C]=N;else{const F=Array.isArray(N)?N:[N],G=[];for(let L=0;L<F.length;L++)G.push(F[L].clone());I[C]=G}return!0}else if(typeof N=="number"){if(I[C]!==N)return I[C]=N,!0}else{const F=Array.isArray(I[C])?I[C]:[I[C]],G=Array.isArray(N)?N:[N];for(let L=0;L<F.length;L++){const B=F[L];if(B.equals(G[L])===!1)return B.copy(G[L]),!0}}return!1}function w(D){const C=D.uniforms;let I=0;const N=16;let F=0;for(let G=0,L=C.length;G<L;G++){const B=C[G],W={boundary:0,storage:0},oe=Array.isArray(B.value)?B.value:[B.value];for(let se=0,Y=oe.length;se<Y;se++){const q=oe[se],ie=x(q);W.boundary+=ie.boundary,W.storage+=ie.storage}if(B.__data=new Float32Array(W.storage/Float32Array.BYTES_PER_ELEMENT),B.__offset=I,G>0){F=I%N;const se=N-F;F!==0&&se-W.boundary<0&&(I+=N-F,B.__offset=I)}I+=W.storage}return F=I%N,F>0&&(I+=N-F),D.__size=I,D.__cache={},this}function x(D){const C={boundary:0,storage:0};return typeof D=="number"?(C.boundary=4,C.storage=4):D.isVector2?(C.boundary=8,C.storage=8):D.isVector3||D.isColor?(C.boundary=16,C.storage=12):D.isVector4?(C.boundary=16,C.storage=16):D.isMatrix3?(C.boundary=48,C.storage=48):D.isMatrix4?(C.boundary=64,C.storage=64):D.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",D),C}function v(D){const C=D.target;C.removeEventListener("dispose",v);const I=r.indexOf(C.__bindingPointIndex);r.splice(I,1),s.deleteBuffer(o[C.id]),delete o[C.id],delete a[C.id]}function T(){for(const D in o)s.deleteBuffer(o[D]);r=[],o={},a={}}return{bind:d,update:h,dispose:T}}function createCanvasElement(){const s=createElementNS("canvas");return s.style.display="block",s}function WebGLRenderer(s={}){this.isWebGLRenderer=!0;const e=s.canvas!==void 0?s.canvas:createCanvasElement(),t=s.context!==void 0?s.context:null,n=s.depth!==void 0?s.depth:!0,o=s.stencil!==void 0?s.stencil:!0,a=s.antialias!==void 0?s.antialias:!1,r=s.premultipliedAlpha!==void 0?s.premultipliedAlpha:!0,l=s.preserveDrawingBuffer!==void 0?s.preserveDrawingBuffer:!1,d=s.powerPreference!==void 0?s.powerPreference:"default",h=s.failIfMajorPerformanceCaveat!==void 0?s.failIfMajorPerformanceCaveat:!1;let f;t!==null?f=t.getContextAttributes().alpha:f=s.alpha!==void 0?s.alpha:!1;let _=null,g=null;const b=[],w=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=LinearEncoding,this.useLegacyLights=!0,this.toneMapping=NoToneMapping,this.toneMappingExposure=1;const x=this;let v=!1,T=0,D=0,C=null,I=-1,N=null;const F=new Vector4,G=new Vector4;let L=null,B=e.width,W=e.height,oe=1,se=null,Y=null;const q=new Vector4(0,0,B,W),ie=new Vector4(0,0,B,W);let me=!1;const Q=new Frustum;let K=!1,le=!1,de=null;const ve=new Matrix4,$=new Vector3,z={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function ne(){return C===null?oe:1}let V=t;function ye(A,ee){for(let ue=0;ue<A.length;ue++){const J=A[ue],he=e.getContext(J,ee);if(he!==null)return he}return null}try{const A={alpha:!0,depth:n,stencil:o,antialias:a,premultipliedAlpha:r,preserveDrawingBuffer:l,powerPreference:d,failIfMajorPerformanceCaveat:h};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${REVISION}`),e.addEventListener("webglcontextlost",Ee,!1),e.addEventListener("webglcontextrestored",Ce,!1),e.addEventListener("webglcontextcreationerror",Pe,!1),V===null){const ee=["webgl2","webgl","experimental-webgl"];if(x.isWebGL1Renderer===!0&&ee.shift(),V=ye(ee,A),V===null)throw ye(ee)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}V.getShaderPrecisionFormat===void 0&&(V.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(A){throw console.error("THREE.WebGLRenderer: "+A.message),A}let Se,Le,De,Oe,ke,Ve,je,$t,jt,Ot,_t,pt,vt,cn,Mn,U,R,ce,we,be,Re,Fe,Ie,pe;function ze(){Se=new WebGLExtensions(V),Le=new WebGLCapabilities(V,Se,s),Se.init(Le),Fe=new WebGLUtils(V,Se,Le),De=new WebGLState(V,Se,Le),Oe=new WebGLInfo,ke=new WebGLProperties,Ve=new WebGLTextures(V,Se,De,ke,Le,Fe,Oe),je=new WebGLCubeMaps(x),$t=new WebGLCubeUVMaps(x),jt=new WebGLAttributes(V,Le),Ie=new WebGLBindingStates(V,Se,jt,Le),Ot=new WebGLGeometries(V,jt,Oe,Ie),_t=new WebGLObjects(V,Ot,jt,Oe),we=new WebGLMorphtargets(V,Le,Ve),U=new WebGLClipping(ke),pt=new WebGLPrograms(x,je,$t,Se,Le,Ie,U),vt=new WebGLMaterials(x,ke),cn=new WebGLRenderLists,Mn=new WebGLRenderStates(Se,Le),ce=new WebGLBackground(x,je,$t,De,_t,f,r),R=new WebGLShadowMap(x,_t,Le),pe=new WebGLUniformsGroups(V,Oe,Le,De),be=new WebGLBufferRenderer(V,Se,Oe,Le),Re=new WebGLIndexedBufferRenderer(V,Se,Oe,Le),Oe.programs=pt.programs,x.capabilities=Le,x.extensions=Se,x.properties=ke,x.renderLists=cn,x.shadowMap=R,x.state=De,x.info=Oe}ze();const ge=new WebXRManager(x,V);this.xr=ge,this.getContext=function(){return V},this.getContextAttributes=function(){return V.getContextAttributes()},this.forceContextLoss=function(){const A=Se.get("WEBGL_lose_context");A&&A.loseContext()},this.forceContextRestore=function(){const A=Se.get("WEBGL_lose_context");A&&A.restoreContext()},this.getPixelRatio=function(){return oe},this.setPixelRatio=function(A){A!==void 0&&(oe=A,this.setSize(B,W,!1))},this.getSize=function(A){return A.set(B,W)},this.setSize=function(A,ee,ue=!0){if(ge.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}B=A,W=ee,e.width=Math.floor(A*oe),e.height=Math.floor(ee*oe),ue===!0&&(e.style.width=A+"px",e.style.height=ee+"px"),this.setViewport(0,0,A,ee)},this.getDrawingBufferSize=function(A){return A.set(B*oe,W*oe).floor()},this.setDrawingBufferSize=function(A,ee,ue){B=A,W=ee,oe=ue,e.width=Math.floor(A*ue),e.height=Math.floor(ee*ue),this.setViewport(0,0,A,ee)},this.getCurrentViewport=function(A){return A.copy(F)},this.getViewport=function(A){return A.copy(q)},this.setViewport=function(A,ee,ue,J){A.isVector4?q.set(A.x,A.y,A.z,A.w):q.set(A,ee,ue,J),De.viewport(F.copy(q).multiplyScalar(oe).floor())},this.getScissor=function(A){return A.copy(ie)},this.setScissor=function(A,ee,ue,J){A.isVector4?ie.set(A.x,A.y,A.z,A.w):ie.set(A,ee,ue,J),De.scissor(G.copy(ie).multiplyScalar(oe).floor())},this.getScissorTest=function(){return me},this.setScissorTest=function(A){De.setScissorTest(me=A)},this.setOpaqueSort=function(A){se=A},this.setTransparentSort=function(A){Y=A},this.getClearColor=function(A){return A.copy(ce.getClearColor())},this.setClearColor=function(){ce.setClearColor.apply(ce,arguments)},this.getClearAlpha=function(){return ce.getClearAlpha()},this.setClearAlpha=function(){ce.setClearAlpha.apply(ce,arguments)},this.clear=function(A=!0,ee=!0,ue=!0){let J=0;A&&(J|=16384),ee&&(J|=256),ue&&(J|=1024),V.clear(J)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",Ee,!1),e.removeEventListener("webglcontextrestored",Ce,!1),e.removeEventListener("webglcontextcreationerror",Pe,!1),cn.dispose(),Mn.dispose(),ke.dispose(),je.dispose(),$t.dispose(),_t.dispose(),Ie.dispose(),pe.dispose(),pt.dispose(),ge.dispose(),ge.removeEventListener("sessionstart",Z),ge.removeEventListener("sessionend",ae),de&&(de.dispose(),de=null),xe.stop()};function Ee(A){A.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),v=!0}function Ce(){console.log("THREE.WebGLRenderer: Context Restored."),v=!1;const A=Oe.autoReset,ee=R.enabled,ue=R.autoUpdate,J=R.needsUpdate,he=R.type;ze(),Oe.autoReset=A,R.enabled=ee,R.autoUpdate=ue,R.needsUpdate=J,R.type=he}function Pe(A){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",A.statusMessage)}function $e(A){const ee=A.target;ee.removeEventListener("dispose",$e),mt(ee)}function mt(A){en(A),ke.remove(A)}function en(A){const ee=ke.get(A).programs;ee!==void 0&&(ee.forEach(function(ue){pt.releaseProgram(ue)}),A.isShaderMaterial&&pt.releaseShaderCache(A))}this.renderBufferDirect=function(A,ee,ue,J,he,Be){ee===null&&(ee=z);const We=he.isMesh&&he.matrixWorld.determinant()<0,qe=Vn(A,ee,ue,J,he);De.setMaterial(J,We);let Ke=ue.index,Pt=1;J.wireframe===!0&&(Ke=Ot.getWireframeAttribute(ue),Pt=2);const Ye=ue.drawRange,Qe=ue.attributes.position;let an=Ye.start*Pt,yn=(Ye.start+Ye.count)*Pt;Be!==null&&(an=Math.max(an,Be.start*Pt),yn=Math.min(yn,(Be.start+Be.count)*Pt)),Ke!==null?(an=Math.max(an,0),yn=Math.min(yn,Ke.count)):Qe!=null&&(an=Math.max(an,0),yn=Math.min(yn,Qe.count));const In=yn-an;if(In<0||In===1/0)return;Ie.setup(he,J,qe,ue,Ke);let Bn,un=be;if(Ke!==null&&(Bn=jt.get(Ke),un=Re,un.setIndex(Bn)),he.isMesh)J.wireframe===!0?(De.setLineWidth(J.wireframeLinewidth*ne()),un.setMode(1)):un.setMode(4);else if(he.isLine){let ut=J.linewidth;ut===void 0&&(ut=1),De.setLineWidth(ut*ne()),he.isLineSegments?un.setMode(1):he.isLineLoop?un.setMode(2):un.setMode(3)}else he.isPoints?un.setMode(0):he.isSprite&&un.setMode(4);if(he.isInstancedMesh)un.renderInstances(an,In,he.count);else if(ue.isInstancedBufferGeometry){const ut=ue._maxInstanceCount!==void 0?ue._maxInstanceCount:1/0,bi=Math.min(ue.instanceCount,ut);un.renderInstances(an,In,bi)}else un.render(an,In)},this.compile=function(A,ee){function ue(J,he,Be){J.transparent===!0&&J.side===DoubleSide&&J.forceSinglePass===!1?(J.side=BackSide,J.needsUpdate=!0,xn(J,he,Be),J.side=FrontSide,J.needsUpdate=!0,xn(J,he,Be),J.side=DoubleSide):xn(J,he,Be)}g=Mn.get(A),g.init(),w.push(g),A.traverseVisible(function(J){J.isLight&&J.layers.test(ee.layers)&&(g.pushLight(J),J.castShadow&&g.pushShadow(J))}),g.setupLights(x.useLegacyLights),A.traverse(function(J){const he=J.material;if(he)if(Array.isArray(he))for(let Be=0;Be<he.length;Be++){const We=he[Be];ue(We,A,J)}else ue(he,A,J)}),w.pop(),g=null};let O=null;function X(A){O&&O(A)}function Z(){xe.stop()}function ae(){xe.start()}const xe=new WebGLAnimation;xe.setAnimationLoop(X),typeof self<"u"&&xe.setContext(self),this.setAnimationLoop=function(A){O=A,ge.setAnimationLoop(A),A===null?xe.stop():xe.start()},ge.addEventListener("sessionstart",Z),ge.addEventListener("sessionend",ae),this.render=function(A,ee){if(ee!==void 0&&ee.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(v===!0)return;A.matrixWorldAutoUpdate===!0&&A.updateMatrixWorld(),ee.parent===null&&ee.matrixWorldAutoUpdate===!0&&ee.updateMatrixWorld(),ge.enabled===!0&&ge.isPresenting===!0&&(ge.cameraAutoUpdate===!0&&ge.updateCamera(ee),ee=ge.getCamera()),A.isScene===!0&&A.onBeforeRender(x,A,ee,C),g=Mn.get(A,w.length),g.init(),w.push(g),ve.multiplyMatrices(ee.projectionMatrix,ee.matrixWorldInverse),Q.setFromProjectionMatrix(ve),le=this.localClippingEnabled,K=U.init(this.clippingPlanes,le),_=cn.get(A,b.length),_.init(),b.push(_),He(A,ee,0,x.sortObjects),_.finish(),x.sortObjects===!0&&_.sort(se,Y),K===!0&&U.beginShadows();const ue=g.state.shadowsArray;if(R.render(ue,A,ee),K===!0&&U.endShadows(),this.info.autoReset===!0&&this.info.reset(),ce.render(_,A),g.setupLights(x.useLegacyLights),ee.isArrayCamera){const J=ee.cameras;for(let he=0,Be=J.length;he<Be;he++){const We=J[he];Ze(_,A,We,We.viewport)}}else Ze(_,A,ee);C!==null&&(Ve.updateMultisampleRenderTarget(C),Ve.updateRenderTargetMipmap(C)),A.isScene===!0&&A.onAfterRender(x,A,ee),Ie.resetDefaultState(),I=-1,N=null,w.pop(),w.length>0?g=w[w.length-1]:g=null,b.pop(),b.length>0?_=b[b.length-1]:_=null};function He(A,ee,ue,J){if(A.visible===!1)return;if(A.layers.test(ee.layers)){if(A.isGroup)ue=A.renderOrder;else if(A.isLOD)A.autoUpdate===!0&&A.update(ee);else if(A.isLight)g.pushLight(A),A.castShadow&&g.pushShadow(A);else if(A.isSprite){if(!A.frustumCulled||Q.intersectsSprite(A)){J&&$.setFromMatrixPosition(A.matrixWorld).applyMatrix4(ve);const We=_t.update(A),qe=A.material;qe.visible&&_.push(A,We,qe,ue,$.z,null)}}else if((A.isMesh||A.isLine||A.isPoints)&&(A.isSkinnedMesh&&A.skeleton.frame!==Oe.render.frame&&(A.skeleton.update(),A.skeleton.frame=Oe.render.frame),!A.frustumCulled||Q.intersectsObject(A))){J&&$.setFromMatrixPosition(A.matrixWorld).applyMatrix4(ve);const We=_t.update(A),qe=A.material;if(Array.isArray(qe)){const Ke=We.groups;for(let Pt=0,Ye=Ke.length;Pt<Ye;Pt++){const Qe=Ke[Pt],an=qe[Qe.materialIndex];an&&an.visible&&_.push(A,We,an,ue,$.z,Qe)}}else qe.visible&&_.push(A,We,qe,ue,$.z,null)}}const Be=A.children;for(let We=0,qe=Be.length;We<qe;We++)He(Be[We],ee,ue,J)}function Ze(A,ee,ue,J){const he=A.opaque,Be=A.transmissive,We=A.transparent;g.setupLightsView(ue),K===!0&&U.setGlobalState(x.clippingPlanes,ue),Be.length>0&&nn(he,ee,ue),J&&De.viewport(F.copy(J)),he.length>0&&pn(he,ee,ue),Be.length>0&&pn(Be,ee,ue),We.length>0&&pn(We,ee,ue),De.buffers.depth.setTest(!0),De.buffers.depth.setMask(!0),De.buffers.color.setMask(!0),De.setPolygonOffset(!1)}function nn(A,ee,ue){const J=Le.isWebGL2;de===null&&(de=new WebGLRenderTarget(1024,1024,{generateMipmaps:!0,type:Se.has("EXT_color_buffer_half_float")?HalfFloatType:UnsignedByteType,minFilter:LinearMipmapLinearFilter,samples:J&&a===!0?4:0}));const he=x.getRenderTarget();x.setRenderTarget(de),x.clear();const Be=x.toneMapping;x.toneMapping=NoToneMapping,pn(A,ee,ue),x.toneMapping=Be,Ve.updateMultisampleRenderTarget(de),Ve.updateRenderTargetMipmap(de),x.setRenderTarget(he)}function pn(A,ee,ue){const J=ee.isScene===!0?ee.overrideMaterial:null;for(let he=0,Be=A.length;he<Be;he++){const We=A[he],qe=We.object,Ke=We.geometry,Pt=J===null?We.material:J,Ye=We.group;qe.layers.test(ue.layers)&&Tt(qe,ee,ue,Ke,Pt,Ye)}}function Tt(A,ee,ue,J,he,Be){A.onBeforeRender(x,ee,ue,J,he,Be),A.modelViewMatrix.multiplyMatrices(ue.matrixWorldInverse,A.matrixWorld),A.normalMatrix.getNormalMatrix(A.modelViewMatrix),he.onBeforeRender(x,ee,ue,J,A,Be),he.transparent===!0&&he.side===DoubleSide&&he.forceSinglePass===!1?(he.side=BackSide,he.needsUpdate=!0,x.renderBufferDirect(ue,ee,J,he,A,Be),he.side=FrontSide,he.needsUpdate=!0,x.renderBufferDirect(ue,ee,J,he,A,Be),he.side=DoubleSide):x.renderBufferDirect(ue,ee,J,he,A,Be),A.onAfterRender(x,ee,ue,J,he,Be)}function xn(A,ee,ue){ee.isScene!==!0&&(ee=z);const J=ke.get(A),he=g.state.lights,Be=g.state.shadowsArray,We=he.state.version,qe=pt.getParameters(A,he.state,Be,ee,ue),Ke=pt.getProgramCacheKey(qe);let Pt=J.programs;J.environment=A.isMeshStandardMaterial?ee.environment:null,J.fog=ee.fog,J.envMap=(A.isMeshStandardMaterial?$t:je).get(A.envMap||J.environment),Pt===void 0&&(A.addEventListener("dispose",$e),Pt=new Map,J.programs=Pt);let Ye=Pt.get(Ke);if(Ye!==void 0){if(J.currentProgram===Ye&&J.lightsStateVersion===We)return Cn(A,qe),Ye}else qe.uniforms=pt.getUniforms(A),A.onBuild(ue,qe,x),A.onBeforeCompile(qe,x),Ye=pt.acquireProgram(qe,Ke),Pt.set(Ke,Ye),J.uniforms=qe.uniforms;const Qe=J.uniforms;(!A.isShaderMaterial&&!A.isRawShaderMaterial||A.clipping===!0)&&(Qe.clippingPlanes=U.uniform),Cn(A,qe),J.needsLights=$n(A),J.lightsStateVersion=We,J.needsLights&&(Qe.ambientLightColor.value=he.state.ambient,Qe.lightProbe.value=he.state.probe,Qe.directionalLights.value=he.state.directional,Qe.directionalLightShadows.value=he.state.directionalShadow,Qe.spotLights.value=he.state.spot,Qe.spotLightShadows.value=he.state.spotShadow,Qe.rectAreaLights.value=he.state.rectArea,Qe.ltc_1.value=he.state.rectAreaLTC1,Qe.ltc_2.value=he.state.rectAreaLTC2,Qe.pointLights.value=he.state.point,Qe.pointLightShadows.value=he.state.pointShadow,Qe.hemisphereLights.value=he.state.hemi,Qe.directionalShadowMap.value=he.state.directionalShadowMap,Qe.directionalShadowMatrix.value=he.state.directionalShadowMatrix,Qe.spotShadowMap.value=he.state.spotShadowMap,Qe.spotLightMatrix.value=he.state.spotLightMatrix,Qe.spotLightMap.value=he.state.spotLightMap,Qe.pointShadowMap.value=he.state.pointShadowMap,Qe.pointShadowMatrix.value=he.state.pointShadowMatrix);const an=Ye.getUniforms(),yn=WebGLUniforms.seqWithValue(an.seq,Qe);return J.currentProgram=Ye,J.uniformsList=yn,Ye}function Cn(A,ee){const ue=ke.get(A);ue.outputEncoding=ee.outputEncoding,ue.instancing=ee.instancing,ue.skinning=ee.skinning,ue.morphTargets=ee.morphTargets,ue.morphNormals=ee.morphNormals,ue.morphColors=ee.morphColors,ue.morphTargetsCount=ee.morphTargetsCount,ue.numClippingPlanes=ee.numClippingPlanes,ue.numIntersection=ee.numClipIntersection,ue.vertexAlphas=ee.vertexAlphas,ue.vertexTangents=ee.vertexTangents,ue.toneMapping=ee.toneMapping}function Vn(A,ee,ue,J,he){ee.isScene!==!0&&(ee=z),Ve.resetTextureUnits();const Be=ee.fog,We=J.isMeshStandardMaterial?ee.environment:null,qe=C===null?x.outputEncoding:C.isXRRenderTarget===!0?C.texture.encoding:LinearEncoding,Ke=(J.isMeshStandardMaterial?$t:je).get(J.envMap||We),Pt=J.vertexColors===!0&&!!ue.attributes.color&&ue.attributes.color.itemSize===4,Ye=!!J.normalMap&&!!ue.attributes.tangent,Qe=!!ue.morphAttributes.position,an=!!ue.morphAttributes.normal,yn=!!ue.morphAttributes.color,In=J.toneMapped?x.toneMapping:NoToneMapping,Bn=ue.morphAttributes.position||ue.morphAttributes.normal||ue.morphAttributes.color,un=Bn!==void 0?Bn.length:0,ut=ke.get(J),bi=g.state.lights;if(K===!0&&(le===!0||A!==N)){const Ln=A===N&&J.id===I;U.setState(J,A,Ln)}let An=!1;J.version===ut.__version?(ut.needsLights&&ut.lightsStateVersion!==bi.state.version||ut.outputEncoding!==qe||he.isInstancedMesh&&ut.instancing===!1||!he.isInstancedMesh&&ut.instancing===!0||he.isSkinnedMesh&&ut.skinning===!1||!he.isSkinnedMesh&&ut.skinning===!0||ut.envMap!==Ke||J.fog===!0&&ut.fog!==Be||ut.numClippingPlanes!==void 0&&(ut.numClippingPlanes!==U.numPlanes||ut.numIntersection!==U.numIntersection)||ut.vertexAlphas!==Pt||ut.vertexTangents!==Ye||ut.morphTargets!==Qe||ut.morphNormals!==an||ut.morphColors!==yn||ut.toneMapping!==In||Le.isWebGL2===!0&&ut.morphTargetsCount!==un)&&(An=!0):(An=!0,ut.__version=J.version);let qn=ut.currentProgram;An===!0&&(qn=xn(J,ee,he));let ki=!1,ui=!1,Ri=!1;const wn=qn.getUniforms(),Kn=ut.uniforms;if(De.useProgram(qn.program)&&(ki=!0,ui=!0,Ri=!0),J.id!==I&&(I=J.id,ui=!0),ki||N!==A){if(wn.setValue(V,"projectionMatrix",A.projectionMatrix),Le.logarithmicDepthBuffer&&wn.setValue(V,"logDepthBufFC",2/(Math.log(A.far+1)/Math.LN2)),N!==A&&(N=A,ui=!0,Ri=!0),J.isShaderMaterial||J.isMeshPhongMaterial||J.isMeshToonMaterial||J.isMeshStandardMaterial||J.envMap){const Ln=wn.map.cameraPosition;Ln!==void 0&&Ln.setValue(V,$.setFromMatrixPosition(A.matrixWorld))}(J.isMeshPhongMaterial||J.isMeshToonMaterial||J.isMeshLambertMaterial||J.isMeshBasicMaterial||J.isMeshStandardMaterial||J.isShaderMaterial)&&wn.setValue(V,"isOrthographic",A.isOrthographicCamera===!0),(J.isMeshPhongMaterial||J.isMeshToonMaterial||J.isMeshLambertMaterial||J.isMeshBasicMaterial||J.isMeshStandardMaterial||J.isShaderMaterial||J.isShadowMaterial||he.isSkinnedMesh)&&wn.setValue(V,"viewMatrix",A.matrixWorldInverse)}if(he.isSkinnedMesh){wn.setOptional(V,he,"bindMatrix"),wn.setOptional(V,he,"bindMatrixInverse");const Ln=he.skeleton;Ln&&(Le.floatVertexTextures?(Ln.boneTexture===null&&Ln.computeBoneTexture(),wn.setValue(V,"boneTexture",Ln.boneTexture,Ve),wn.setValue(V,"boneTextureSize",Ln.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const Ii=ue.morphAttributes;if((Ii.position!==void 0||Ii.normal!==void 0||Ii.color!==void 0&&Le.isWebGL2===!0)&&we.update(he,ue,qn),(ui||ut.receiveShadow!==he.receiveShadow)&&(ut.receiveShadow=he.receiveShadow,wn.setValue(V,"receiveShadow",he.receiveShadow)),J.isMeshGouraudMaterial&&J.envMap!==null&&(Kn.envMap.value=Ke,Kn.flipEnvMap.value=Ke.isCubeTexture&&Ke.isRenderTargetTexture===!1?-1:1),ui&&(wn.setValue(V,"toneMappingExposure",x.toneMappingExposure),ut.needsLights&&kn(Kn,Ri),Be&&J.fog===!0&&vt.refreshFogUniforms(Kn,Be),vt.refreshMaterialUniforms(Kn,J,oe,W,de),WebGLUniforms.upload(V,ut.uniformsList,Kn,Ve)),J.isShaderMaterial&&J.uniformsNeedUpdate===!0&&(WebGLUniforms.upload(V,ut.uniformsList,Kn,Ve),J.uniformsNeedUpdate=!1),J.isSpriteMaterial&&wn.setValue(V,"center",he.center),wn.setValue(V,"modelViewMatrix",he.modelViewMatrix),wn.setValue(V,"normalMatrix",he.normalMatrix),wn.setValue(V,"modelMatrix",he.matrixWorld),J.isShaderMaterial||J.isRawShaderMaterial){const Ln=J.uniformsGroups;for(let pi=0,Ai=Ln.length;pi<Ai;pi++)if(Le.isWebGL2){const Oi=Ln[pi];pe.update(Oi,qn),pe.bind(Oi,qn)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return qn}function kn(A,ee){A.ambientLightColor.needsUpdate=ee,A.lightProbe.needsUpdate=ee,A.directionalLights.needsUpdate=ee,A.directionalLightShadows.needsUpdate=ee,A.pointLights.needsUpdate=ee,A.pointLightShadows.needsUpdate=ee,A.spotLights.needsUpdate=ee,A.spotLightShadows.needsUpdate=ee,A.rectAreaLights.needsUpdate=ee,A.hemisphereLights.needsUpdate=ee}function $n(A){return A.isMeshLambertMaterial||A.isMeshToonMaterial||A.isMeshPhongMaterial||A.isMeshStandardMaterial||A.isShadowMaterial||A.isShaderMaterial&&A.lights===!0}this.getActiveCubeFace=function(){return T},this.getActiveMipmapLevel=function(){return D},this.getRenderTarget=function(){return C},this.setRenderTargetTextures=function(A,ee,ue){ke.get(A.texture).__webglTexture=ee,ke.get(A.depthTexture).__webglTexture=ue;const J=ke.get(A);J.__hasExternalTextures=!0,J.__hasExternalTextures&&(J.__autoAllocateDepthBuffer=ue===void 0,J.__autoAllocateDepthBuffer||Se.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),J.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(A,ee){const ue=ke.get(A);ue.__webglFramebuffer=ee,ue.__useDefaultFramebuffer=ee===void 0},this.setRenderTarget=function(A,ee=0,ue=0){C=A,T=ee,D=ue;let J=!0,he=null,Be=!1,We=!1;if(A){const Ke=ke.get(A);Ke.__useDefaultFramebuffer!==void 0?(De.bindFramebuffer(36160,null),J=!1):Ke.__webglFramebuffer===void 0?Ve.setupRenderTarget(A):Ke.__hasExternalTextures&&Ve.rebindTextures(A,ke.get(A.texture).__webglTexture,ke.get(A.depthTexture).__webglTexture);const Pt=A.texture;(Pt.isData3DTexture||Pt.isDataArrayTexture||Pt.isCompressedArrayTexture)&&(We=!0);const Ye=ke.get(A).__webglFramebuffer;A.isWebGLCubeRenderTarget?(he=Ye[ee],Be=!0):Le.isWebGL2&&A.samples>0&&Ve.useMultisampledRTT(A)===!1?he=ke.get(A).__webglMultisampledFramebuffer:he=Ye,F.copy(A.viewport),G.copy(A.scissor),L=A.scissorTest}else F.copy(q).multiplyScalar(oe).floor(),G.copy(ie).multiplyScalar(oe).floor(),L=me;if(De.bindFramebuffer(36160,he)&&Le.drawBuffers&&J&&De.drawBuffers(A,he),De.viewport(F),De.scissor(G),De.setScissorTest(L),Be){const Ke=ke.get(A.texture);V.framebufferTexture2D(36160,36064,34069+ee,Ke.__webglTexture,ue)}else if(We){const Ke=ke.get(A.texture),Pt=ee||0;V.framebufferTextureLayer(36160,36064,Ke.__webglTexture,ue||0,Pt)}I=-1},this.readRenderTargetPixels=function(A,ee,ue,J,he,Be,We){if(!(A&&A.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let qe=ke.get(A).__webglFramebuffer;if(A.isWebGLCubeRenderTarget&&We!==void 0&&(qe=qe[We]),qe){De.bindFramebuffer(36160,qe);try{const Ke=A.texture,Pt=Ke.format,Ye=Ke.type;if(Pt!==RGBAFormat&&Fe.convert(Pt)!==V.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const Qe=Ye===HalfFloatType&&(Se.has("EXT_color_buffer_half_float")||Le.isWebGL2&&Se.has("EXT_color_buffer_float"));if(Ye!==UnsignedByteType&&Fe.convert(Ye)!==V.getParameter(35738)&&!(Ye===FloatType&&(Le.isWebGL2||Se.has("OES_texture_float")||Se.has("WEBGL_color_buffer_float")))&&!Qe){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}ee>=0&&ee<=A.width-J&&ue>=0&&ue<=A.height-he&&V.readPixels(ee,ue,J,he,Fe.convert(Pt),Fe.convert(Ye),Be)}finally{const Ke=C!==null?ke.get(C).__webglFramebuffer:null;De.bindFramebuffer(36160,Ke)}}},this.copyFramebufferToTexture=function(A,ee,ue=0){const J=Math.pow(2,-ue),he=Math.floor(ee.image.width*J),Be=Math.floor(ee.image.height*J);Ve.setTexture2D(ee,0),V.copyTexSubImage2D(3553,ue,0,0,A.x,A.y,he,Be),De.unbindTexture()},this.copyTextureToTexture=function(A,ee,ue,J=0){const he=ee.image.width,Be=ee.image.height,We=Fe.convert(ue.format),qe=Fe.convert(ue.type);Ve.setTexture2D(ue,0),V.pixelStorei(37440,ue.flipY),V.pixelStorei(37441,ue.premultiplyAlpha),V.pixelStorei(3317,ue.unpackAlignment),ee.isDataTexture?V.texSubImage2D(3553,J,A.x,A.y,he,Be,We,qe,ee.image.data):ee.isCompressedTexture?V.compressedTexSubImage2D(3553,J,A.x,A.y,ee.mipmaps[0].width,ee.mipmaps[0].height,We,ee.mipmaps[0].data):V.texSubImage2D(3553,J,A.x,A.y,We,qe,ee.image),J===0&&ue.generateMipmaps&&V.generateMipmap(3553),De.unbindTexture()},this.copyTextureToTexture3D=function(A,ee,ue,J,he=0){if(x.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const Be=A.max.x-A.min.x+1,We=A.max.y-A.min.y+1,qe=A.max.z-A.min.z+1,Ke=Fe.convert(J.format),Pt=Fe.convert(J.type);let Ye;if(J.isData3DTexture)Ve.setTexture3D(J,0),Ye=32879;else if(J.isDataArrayTexture)Ve.setTexture2DArray(J,0),Ye=35866;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}V.pixelStorei(37440,J.flipY),V.pixelStorei(37441,J.premultiplyAlpha),V.pixelStorei(3317,J.unpackAlignment);const Qe=V.getParameter(3314),an=V.getParameter(32878),yn=V.getParameter(3316),In=V.getParameter(3315),Bn=V.getParameter(32877),un=ue.isCompressedTexture?ue.mipmaps[0]:ue.image;V.pixelStorei(3314,un.width),V.pixelStorei(32878,un.height),V.pixelStorei(3316,A.min.x),V.pixelStorei(3315,A.min.y),V.pixelStorei(32877,A.min.z),ue.isDataTexture||ue.isData3DTexture?V.texSubImage3D(Ye,he,ee.x,ee.y,ee.z,Be,We,qe,Ke,Pt,un.data):ue.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),V.compressedTexSubImage3D(Ye,he,ee.x,ee.y,ee.z,Be,We,qe,Ke,un.data)):V.texSubImage3D(Ye,he,ee.x,ee.y,ee.z,Be,We,qe,Ke,Pt,un),V.pixelStorei(3314,Qe),V.pixelStorei(32878,an),V.pixelStorei(3316,yn),V.pixelStorei(3315,In),V.pixelStorei(32877,Bn),he===0&&J.generateMipmaps&&V.generateMipmap(Ye),De.unbindTexture()},this.initTexture=function(A){A.isCubeTexture?Ve.setTextureCube(A,0):A.isData3DTexture?Ve.setTexture3D(A,0):A.isDataArrayTexture||A.isCompressedArrayTexture?Ve.setTexture2DArray(A,0):Ve.setTexture2D(A,0),De.unbindTexture()},this.resetState=function(){T=0,D=0,C=null,De.reset(),Ie.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}Object.defineProperties(WebGLRenderer.prototype,{physicallyCorrectLights:{get:function(){return console.warn("THREE.WebGLRenderer: the property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),!this.useLegacyLights},set:function(s){console.warn("THREE.WebGLRenderer: the property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),this.useLegacyLights=!s}}});class WebGL1Renderer extends WebGLRenderer{}WebGL1Renderer.prototype.isWebGL1Renderer=!0;class Scene extends Object3D{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t}get autoUpdate(){return console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate}set autoUpdate(e){console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate=e}}class LineBasicMaterial extends Material{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Color(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const _start$1=new Vector3,_end$1=new Vector3,_inverseMatrix$1=new Matrix4,_ray$1=new Ray,_sphere$1=new Sphere;class Line extends Object3D{constructor(e=new BufferGeometry,t=new LineBasicMaterial){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[0];for(let o=1,a=t.count;o<a;o++)_start$1.fromBufferAttribute(t,o-1),_end$1.fromBufferAttribute(t,o),n[o]=n[o-1],n[o]+=_start$1.distanceTo(_end$1);e.setAttribute("lineDistance",new Float32BufferAttribute(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,o=this.matrixWorld,a=e.params.Line.threshold,r=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),_sphere$1.copy(n.boundingSphere),_sphere$1.applyMatrix4(o),_sphere$1.radius+=a,e.ray.intersectsSphere(_sphere$1)===!1)return;_inverseMatrix$1.copy(o).invert(),_ray$1.copy(e.ray).applyMatrix4(_inverseMatrix$1);const l=a/((this.scale.x+this.scale.y+this.scale.z)/3),d=l*l,h=new Vector3,f=new Vector3,_=new Vector3,g=new Vector3,b=this.isLineSegments?2:1,w=n.index,v=n.attributes.position;if(w!==null){const T=Math.max(0,r.start),D=Math.min(w.count,r.start+r.count);for(let C=T,I=D-1;C<I;C+=b){const N=w.getX(C),F=w.getX(C+1);if(h.fromBufferAttribute(v,N),f.fromBufferAttribute(v,F),_ray$1.distanceSqToSegment(h,f,g,_)>d)continue;g.applyMatrix4(this.matrixWorld);const L=e.ray.origin.distanceTo(g);L<e.near||L>e.far||t.push({distance:L,point:_.clone().applyMatrix4(this.matrixWorld),index:C,face:null,faceIndex:null,object:this})}}else{const T=Math.max(0,r.start),D=Math.min(v.count,r.start+r.count);for(let C=T,I=D-1;C<I;C+=b){if(h.fromBufferAttribute(v,C),f.fromBufferAttribute(v,C+1),_ray$1.distanceSqToSegment(h,f,g,_)>d)continue;g.applyMatrix4(this.matrixWorld);const F=e.ray.origin.distanceTo(g);F<e.near||F>e.far||t.push({distance:F,point:_.clone().applyMatrix4(this.matrixWorld),index:C,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const o=t[n[0]];if(o!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let a=0,r=o.length;a<r;a++){const l=o[a].name||String(a);this.morphTargetInfluences.push(0),this.morphTargetDictionary[l]=a}}}}}const _start=new Vector3,_end=new Vector3;class LineSegments extends Line{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[];for(let o=0,a=t.count;o<a;o+=2)_start.fromBufferAttribute(t,o),_end.fromBufferAttribute(t,o+1),n[o]=o===0?0:n[o-1],n[o+1]=n[o]+_start.distanceTo(_end);e.setAttribute("lineDistance",new Float32BufferAttribute(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}const Cache={enabled:!1,files:{},add:function(s,e){this.enabled!==!1&&(this.files[s]=e)},get:function(s){if(this.enabled!==!1)return this.files[s]},remove:function(s){delete this.files[s]},clear:function(){this.files={}}};class LoadingManager{constructor(e,t,n){const o=this;let a=!1,r=0,l=0,d;const h=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(f){l++,a===!1&&o.onStart!==void 0&&o.onStart(f,r,l),a=!0},this.itemEnd=function(f){r++,o.onProgress!==void 0&&o.onProgress(f,r,l),r===l&&(a=!1,o.onLoad!==void 0&&o.onLoad())},this.itemError=function(f){o.onError!==void 0&&o.onError(f)},this.resolveURL=function(f){return d?d(f):f},this.setURLModifier=function(f){return d=f,this},this.addHandler=function(f,_){return h.push(f,_),this},this.removeHandler=function(f){const _=h.indexOf(f);return _!==-1&&h.splice(_,2),this},this.getHandler=function(f){for(let _=0,g=h.length;_<g;_+=2){const b=h[_],w=h[_+1];if(b.global&&(b.lastIndex=0),b.test(f))return w}return null}}}const DefaultLoadingManager=new LoadingManager;class Loader{constructor(e){this.manager=e!==void 0?e:DefaultLoadingManager,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(o,a){n.load(e,o,t,a)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}class ImageLoader extends Loader{constructor(e){super(e)}load(e,t,n,o){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const a=this,r=Cache.get(e);if(r!==void 0)return a.manager.itemStart(e),setTimeout(function(){t&&t(r),a.manager.itemEnd(e)},0),r;const l=createElementNS("img");function d(){f(),Cache.add(e,this),t&&t(this),a.manager.itemEnd(e)}function h(_){f(),o&&o(_),a.manager.itemError(e),a.manager.itemEnd(e)}function f(){l.removeEventListener("load",d,!1),l.removeEventListener("error",h,!1)}return l.addEventListener("load",d,!1),l.addEventListener("error",h,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(l.crossOrigin=this.crossOrigin),a.manager.itemStart(e),l.src=e,l}}class TextureLoader extends Loader{constructor(e){super(e)}load(e,t,n,o){const a=new Texture,r=new ImageLoader(this.manager);return r.setCrossOrigin(this.crossOrigin),r.setPath(this.path),r.load(e,function(l){a.image=l,a.needsUpdate=!0,t!==void 0&&t(a)},n,o),a}}class GridHelper extends LineSegments{constructor(e=10,t=10,n=4473924,o=8947848){n=new Color(n),o=new Color(o);const a=t/2,r=e/t,l=e/2,d=[],h=[];for(let g=0,b=0,w=-l;g<=t;g++,w+=r){d.push(-l,0,w,l,0,w),d.push(w,0,-l,w,0,l);const x=g===a?n:o;x.toArray(h,b),b+=3,x.toArray(h,b),b+=3,x.toArray(h,b),b+=3,x.toArray(h,b),b+=3}const f=new BufferGeometry;f.setAttribute("position",new Float32BufferAttribute(d,3)),f.setAttribute("color",new Float32BufferAttribute(h,3));const _=new LineBasicMaterial({vertexColors:!0,toneMapped:!1});super(f,_),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:REVISION}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=REVISION);new Vconsole;const scene=new Scene,camera=new PerspectiveCamera(75,window.innerWidth/window.innerHeight,.1,1e3);camera.position.set(0,20,0);camera.lookAt(0,0,0);const renderer=new WebGLRenderer;renderer.setSize(window.innerWidth,window.innerHeight);document.body.appendChild(renderer.domElement);let control=new UD(camera);control.connect();const geometry=new PlaneGeometry(5,5),geometry1=new PlaneGeometry(10,10),texture=new TextureLoader().load("./navagator3.png");texture.wrapT=RepeatWrapping;texture.wrapS=RepeatWrapping;const material=new MeshBasicMaterial({color:268435455,side:2,map:texture,transparent:!0});new Mesh(geometry1,material);const plane=new Mesh(geometry,material),size=100,divisions=100,gridHelper=new GridHelper(size,divisions);scene.add(plane);scene.add(gridHelper);camera.position.z=5;function animate(){requestAnimationFrame(animate),control.update(),renderer.render(scene,camera)}animate();
